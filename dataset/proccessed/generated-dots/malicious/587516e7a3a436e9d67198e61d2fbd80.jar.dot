digraph "" {
    "r0 := @this: MovingFractalTree"
    "load.r r0"
    "r0 := @this: MovingFractalTree"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>"
    "load.r r0"->"virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>";
    "virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>"
    "load.r r0"->"virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>";
    "virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>";
    "fieldget <java.awt.Dimension: int width>"
    "virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>"->"fieldget <java.awt.Dimension: int width>";
    "fieldput <MovingFractalTree: int screen_width>"
    "fieldget <java.awt.Dimension: int width>"->"fieldput <MovingFractalTree: int screen_width>";
    "fieldput <MovingFractalTree: int screen_width>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <MovingFractalTree: int screen_width>"
    "load.r r0"->"fieldget <MovingFractalTree: int screen_width>";
    "push 2"
    "fieldget <MovingFractalTree: int screen_width>"->"push 2";
    "div.i"
    "push 2"->"div.i";
    "i2d"
    "div.i"->"i2d";
    "fieldput <MovingFractalTree: double offsetx>"
    "i2d"->"fieldput <MovingFractalTree: double offsetx>";
    "fieldput <MovingFractalTree: double offsetx>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <MovingFractalTree: int screen_width>";
    "fieldget <MovingFractalTree: int screen_width>"->"push 2";
    "push 2"->"div.i";
    "div.i"->"i2d";
    "fieldput <MovingFractalTree: double offsety>"
    "i2d"->"fieldput <MovingFractalTree: double offsety>";
    "fieldput <MovingFractalTree: double offsety>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>";
    "fieldget <java.awt.Dimension: int height>"
    "virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>"->"fieldget <java.awt.Dimension: int height>";
    "fieldput <MovingFractalTree: int screen_height>"
    "fieldget <java.awt.Dimension: int height>"->"fieldput <MovingFractalTree: int screen_height>";
    "fieldput <MovingFractalTree: int screen_height>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <MovingFractalTree: int screen_width>";
    "push 50"
    "fieldget <MovingFractalTree: int screen_width>"->"push 50";
    "push 50"->"div.i";
    "fieldput <MovingFractalTree: int border_width>"
    "div.i"->"fieldput <MovingFractalTree: int border_width>";
    "fieldput <MovingFractalTree: int border_width>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <MovingFractalTree: int screen_width>";
    "fieldget <MovingFractalTree: int screen_width>"->"push 2";
    "push 2"->"load.r r0";
    "fieldget <MovingFractalTree: int border_width>"
    "load.r r0"->"fieldget <MovingFractalTree: int border_width>";
    "mul.i"
    "fieldget <MovingFractalTree: int border_width>"->"mul.i";
    "sub.i"
    "mul.i"->"sub.i";
    "fieldput <MovingFractalTree: int interior_width>"
    "sub.i"->"fieldput <MovingFractalTree: int interior_width>";
    "fieldput <MovingFractalTree: int interior_width>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <MovingFractalTree: int screen_height>"
    "load.r r0"->"fieldget <MovingFractalTree: int screen_height>";
    "fieldget <MovingFractalTree: int screen_height>"->"push 2";
    "push 2"->"load.r r0";
    "load.r r0"->"fieldget <MovingFractalTree: int border_width>";
    "fieldget <MovingFractalTree: int border_width>"->"mul.i";
    "mul.i"->"sub.i";
    "fieldput <MovingFractalTree: int interior_height>"
    "sub.i"->"fieldput <MovingFractalTree: int interior_height>";
    "fieldput <MovingFractalTree: int interior_height>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <MovingFractalTree: int screen_width>";
    "fieldget <MovingFractalTree: int screen_width>"->"i2d";
    "push 3.8"
    "i2d"->"push 3.8";
    "div.d"
    "push 3.8"->"div.d";
    "d2i"
    "div.d"->"d2i";
    "fieldput <MovingFractalTree: int fontsize>"
    "d2i"->"fieldput <MovingFractalTree: int fontsize>";
    "fieldput <MovingFractalTree: int fontsize>"->"load.r r0";
    "new java.awt.Font"
    "load.r r0"->"new java.awt.Font";
    "dup1.r"
    "new java.awt.Font"->"dup1.r";
    "push \"Monospaced\""
    "dup1.r"->"push \"Monospaced\"";
    "push 1"
    "push \"Monospaced\""->"push 1";
    "push 1"->"load.r r0";
    "fieldget <MovingFractalTree: int fontsize>"
    "load.r r0"->"fieldget <MovingFractalTree: int fontsize>";
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"
    "fieldget <MovingFractalTree: int fontsize>"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
    "virtualinvoke <java.awt.Container: void setFont(java.awt.Font)>"
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"virtualinvoke <java.awt.Container: void setFont(java.awt.Font)>";
    "virtualinvoke <java.awt.Container: void setFont(java.awt.Font)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <MovingFractalTree: int screen_width>";
    "fieldget <MovingFractalTree: int screen_width>"->"i2d";
    "push 0.05859375"
    "i2d"->"push 0.05859375";
    "mul.d"
    "push 0.05859375"->"mul.d";
    "mul.d"->"d2i";
    "fieldput <MovingFractalTree: int offset_fontX1>"
    "d2i"->"fieldput <MovingFractalTree: int offset_fontX1>";
    "fieldput <MovingFractalTree: int offset_fontX1>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <MovingFractalTree: int offset_fontX1>"
    "load.r r0"->"fieldget <MovingFractalTree: int offset_fontX1>";
    "fieldput <MovingFractalTree: int offset_fontY1>"
    "fieldget <MovingFractalTree: int offset_fontX1>"->"fieldput <MovingFractalTree: int offset_fontY1>";
    "fieldput <MovingFractalTree: int offset_fontY1>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <MovingFractalTree: int screen_height>";
    "fieldget <MovingFractalTree: int screen_height>"->"load.r r0";
    "fieldget <MovingFractalTree: int offset_fontY1>"
    "load.r r0"->"fieldget <MovingFractalTree: int offset_fontY1>";
    "fieldget <MovingFractalTree: int offset_fontY1>"->"sub.i";
    "sub.i"->"load.r r0";
    "load.r r0"->"fieldget <MovingFractalTree: int fontsize>";
    "fieldget <MovingFractalTree: int fontsize>"->"i2d";
    "push 0.052"
    "i2d"->"push 0.052";
    "push 0.052"->"mul.d";
    "mul.d"->"d2i";
    "d2i"->"sub.i";
    "sub.i"->"fieldput <MovingFractalTree: int offset_fontY1>";
    "fieldput <MovingFractalTree: int offset_fontY1>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <MovingFractalTree: int screen_width>";
    "fieldget <MovingFractalTree: int screen_width>"->"load.r r0";
    "load.r r0"->"fieldget <MovingFractalTree: int offset_fontX1>";
    "fieldget <MovingFractalTree: int offset_fontX1>"->"sub.i";
    "push 3.0"
    "sub.i"->"push 3.0";
    "push 0.61"
    "push 3.0"->"push 0.61";
    "push 0.61"->"mul.d";
    "mul.d"->"load.r r0";
    "load.r r0"->"fieldget <MovingFractalTree: int fontsize>";
    "fieldget <MovingFractalTree: int fontsize>"->"i2d";
    "i2d"->"mul.d";
    "mul.d"->"d2i";
    "d2i"->"sub.i";
    "fieldput <MovingFractalTree: int offset_fontX2>"
    "sub.i"->"fieldput <MovingFractalTree: int offset_fontX2>";
    "fieldput <MovingFractalTree: int offset_fontX2>"->"load.r r0";
    "push 11"
    "load.r r0"->"push 11";
    "fieldput <MovingFractalTree: int n_iter>"
    "push 11"->"fieldput <MovingFractalTree: int n_iter>";
    "fieldput <MovingFractalTree: int n_iter>"->"load.r r0";
    "virtualinvoke <MovingFractalTree: void initCommon()>"
    "load.r r0"->"virtualinvoke <MovingFractalTree: void initCommon()>";
    "push 200L"
    "virtualinvoke <MovingFractalTree: void initCommon()>"->"push 200L";
    "staticinvoke <java.lang.Thread: void sleep(long)>"
    "push 200L"->"staticinvoke <java.lang.Thread: void sleep(long)>";
    "goto load.r r0"
    "staticinvoke <java.lang.Thread: void sleep(long)>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "push 6"
    "load.r r0"->"push 6";
    "push 6"->"fieldput <MovingFractalTree: int n_iter>";
    "fieldput <MovingFractalTree: int n_iter>"->"load.r r0";
    "load.r r0"->"virtualinvoke <MovingFractalTree: void initCommon()>";
    "return"
    "virtualinvoke <MovingFractalTree: void initCommon()>"->"return";
    "virtualinvoke <java.lang.Throwable: void printStackTrace()>"
    "staticinvoke <java.lang.Thread: void sleep(long)>"->"virtualinvoke <java.lang.Throwable: void printStackTrace()>";
}
