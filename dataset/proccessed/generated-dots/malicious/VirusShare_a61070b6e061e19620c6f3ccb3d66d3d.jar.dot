digraph "" {
    "r0 := @this: it.infocert.crypt.pdfsigner"
    "new java.security.AllPermission"
    "r0 := @this: it.infocert.crypt.pdfsigner"->"new java.security.AllPermission";
    "store.r $r6"
    "new java.security.AllPermission"->"store.r $r6";
    "load.r $r6"
    "store.r $r6"->"load.r $r6";
    "specialinvoke <java.security.AllPermission: void <init>()>"
    "load.r $r6"->"specialinvoke <java.security.AllPermission: void <init>()>";
    "staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>"
    "specialinvoke <java.security.AllPermission: void <init>()>"->"staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>";
    "store.r r1"
    "staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>"->"store.r r1";
    "load.r r1"
    "store.r r1"->"load.r r1";
    "ifnull load.r r0"
    "load.r r1"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r1";
    "load.r r1"->"load.r $r6";
    "virtualinvoke <java.lang.SecurityManager: void checkPermission(java.security.Permission)>"
    "load.r $r6"->"virtualinvoke <java.lang.SecurityManager: void checkPermission(java.security.Permission)>";
    "load.r r0"
    "virtualinvoke <java.lang.SecurityManager: void checkPermission(java.security.Permission)>"->"load.r r0";
    "new java.lang.StringBuilder"
    "load.r r0"->"new java.lang.StringBuilder";
    "dup1.r"
    "new java.lang.StringBuilder"->"dup1.r";
    "specialinvoke <java.lang.StringBuilder: void <init>()>"
    "dup1.r"->"specialinvoke <java.lang.StringBuilder: void <init>()>";
    "push \"OS: \""
    "specialinvoke <java.lang.StringBuilder: void <init>()>"->"push \"OS: \"";
    "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"
    "push \"OS: \""->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "push \"os.name\""
    "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"->"push \"os.name\"";
    "staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>"
    "push \"os.name\""->"staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>";
    "staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>"
    "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>";
    "specialinvoke <it.infocert.crypt.pdfsigner: void trace(java.lang.String)>"
    "virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>"->"specialinvoke <it.infocert.crypt.pdfsigner: void trace(java.lang.String)>";
    "specialinvoke <it.infocert.crypt.pdfsigner: void trace(java.lang.String)>"->"load.r r0";
    "load.r r0"->"new java.lang.StringBuilder";
    "new java.lang.StringBuilder"->"dup1.r";
    "dup1.r"->"specialinvoke <java.lang.StringBuilder: void <init>()>";
    "push \"OS ARCH: \""
    "specialinvoke <java.lang.StringBuilder: void <init>()>"->"push \"OS ARCH: \"";
    "push \"OS ARCH: \""->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "push \"os.arch\""
    "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"->"push \"os.arch\"";
    "push \"os.arch\""->"staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>";
    "staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>"->"specialinvoke <it.infocert.crypt.pdfsigner: void trace(java.lang.String)>";
    "specialinvoke <it.infocert.crypt.pdfsigner: void trace(java.lang.String)>"->"load.r r0";
    "load.r r0"->"new java.lang.StringBuilder";
    "new java.lang.StringBuilder"->"dup1.r";
    "dup1.r"->"specialinvoke <java.lang.StringBuilder: void <init>()>";
    "push \"OS VERSION: \""
    "specialinvoke <java.lang.StringBuilder: void <init>()>"->"push \"OS VERSION: \"";
    "push \"OS VERSION: \""->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "push \"os.version\""
    "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"->"push \"os.version\"";
    "push \"os.version\""->"staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>";
    "staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>"->"specialinvoke <it.infocert.crypt.pdfsigner: void trace(java.lang.String)>";
    "specialinvoke <it.infocert.crypt.pdfsigner: void trace(java.lang.String)>"->"load.r r0";
    "push \"Infocert - Firma contratti OnLine - 2.9 - 2012 - CF VERSION \""
    "load.r r0"->"push \"Infocert - Firma contratti OnLine - 2.9 - 2012 - CF VERSION \"";
    "push \"Infocert - Firma contratti OnLine - 2.9 - 2012 - CF VERSION \""->"specialinvoke <it.infocert.crypt.pdfsigner: void trace(java.lang.String)>";
    "specialinvoke <it.infocert.crypt.pdfsigner: void trace(java.lang.String)>"->"load.r r0";
    "new java.lang.Double"
    "load.r r0"->"new java.lang.Double";
    "new java.lang.Double"->"dup1.r";
    "staticinvoke <java.lang.Math: double random()>"
    "dup1.r"->"staticinvoke <java.lang.Math: double random()>";
    "push 100000.0"
    "staticinvoke <java.lang.Math: double random()>"->"push 100000.0";
    "mul.d"
    "push 100000.0"->"mul.d";
    "specialinvoke <java.lang.Double: void <init>(double)>"
    "mul.d"->"specialinvoke <java.lang.Double: void <init>(double)>";
    "virtualinvoke <java.lang.Double: int intValue()>"
    "specialinvoke <java.lang.Double: void <init>(double)>"->"virtualinvoke <java.lang.Double: int intValue()>";
    "store.i r1"
    "virtualinvoke <java.lang.Double: int intValue()>"->"store.i r1";
    "store.i r1"->"new java.lang.StringBuilder";
    "new java.lang.StringBuilder"->"dup1.r";
    "dup1.r"->"specialinvoke <java.lang.StringBuilder: void <init>()>";
    "push \"java.io.tmpdir\""
    "specialinvoke <java.lang.StringBuilder: void <init>()>"->"push \"java.io.tmpdir\"";
    "push \"java.io.tmpdir\""->"staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>";
    "staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "load.i r1"
    "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"->"load.i r1";
    "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(int)>"
    "load.i r1"->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
    "staticget <java.io.File: java.lang.String separator>"
    "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(int)>"->"staticget <java.io.File: java.lang.String separator>";
    "staticget <java.io.File: java.lang.String separator>"->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>";
    "fieldput <it.infocert.crypt.pdfsigner: java.lang.String libDir>"
    "virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>"->"fieldput <it.infocert.crypt.pdfsigner: java.lang.String libDir>";
    "new java.io.File"
    "fieldput <it.infocert.crypt.pdfsigner: java.lang.String libDir>"->"new java.io.File";
    "new java.io.File"->"dup1.r";
    "dup1.r"->"load.r r0";
    "fieldget <it.infocert.crypt.pdfsigner: java.lang.String libDir>"
    "load.r r0"->"fieldget <it.infocert.crypt.pdfsigner: java.lang.String libDir>";
    "specialinvoke <java.io.File: void <init>(java.lang.String)>"
    "fieldget <it.infocert.crypt.pdfsigner: java.lang.String libDir>"->"specialinvoke <java.io.File: void <init>(java.lang.String)>";
    "virtualinvoke <java.io.File: boolean mkdirs()>"
    "specialinvoke <java.io.File: void <init>(java.lang.String)>"->"virtualinvoke <java.io.File: boolean mkdirs()>";
    "pop"
    "virtualinvoke <java.io.File: boolean mkdirs()>"->"pop";
    "pop"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"ContractId\""
    "load.r r0"->"push \"ContractId\"";
    "push \"\""
    "push \"ContractId\""->"push \"\"";
    "specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>"
    "push \"\""->"specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>";
    "fieldput <it.infocert.crypt.pdfsigner: java.lang.String libFirma>"
    "specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>"->"fieldput <it.infocert.crypt.pdfsigner: java.lang.String libFirma>";
    "fieldput <it.infocert.crypt.pdfsigner: java.lang.String libFirma>"->"load.r r0";
    "push \"uploadURL\""
    "load.r r0"->"push \"uploadURL\"";
    "push \"uploadURL\""->"push \"\"";
    "push \"\""->"specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>";
    "specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>"->"store.r r1";
    "store.r r1"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"hashToSignB64\""
    "load.r r0"->"push \"hashToSignB64\"";
    "push \"hashToSignB64\""->"push \"\"";
    "push \"\""->"specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>";
    "fieldput <it.infocert.crypt.pdfsigner: java.lang.String hashToSignB64>"
    "specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>"->"fieldput <it.infocert.crypt.pdfsigner: java.lang.String hashToSignB64>";
    "fieldput <it.infocert.crypt.pdfsigner: java.lang.String hashToSignB64>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"push \"ContractId\"";
    "push \"ContractId\""->"push \"\"";
    "push \"\""->"specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>";
    "fieldput <it.infocert.crypt.pdfsigner: java.lang.String ContractId>"
    "specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>"->"fieldput <it.infocert.crypt.pdfsigner: java.lang.String ContractId>";
    "fieldput <it.infocert.crypt.pdfsigner: java.lang.String ContractId>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"policyId\""
    "load.r r0"->"push \"policyId\"";
    "push \"policyId\""->"push \"\"";
    "push \"\""->"specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>";
    "fieldput <it.infocert.crypt.pdfsigner: java.lang.String policyId>"
    "specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>"->"fieldput <it.infocert.crypt.pdfsigner: java.lang.String policyId>";
    "fieldput <it.infocert.crypt.pdfsigner: java.lang.String policyId>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"CFcontrol\""
    "load.r r0"->"push \"CFcontrol\"";
    "push \"CFcontrol\""->"push \"\"";
    "push \"\""->"specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>";
    "fieldput <it.infocert.crypt.pdfsigner: java.lang.String controlCF>"
    "specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>"->"fieldput <it.infocert.crypt.pdfsigner: java.lang.String controlCF>";
    "fieldput <it.infocert.crypt.pdfsigner: java.lang.String controlCF>"->"load.r r0";
    "push \"MAYSCRIPT\""
    "load.r r0"->"push \"MAYSCRIPT\"";
    "push \"false\""
    "push \"MAYSCRIPT\""->"push \"false\"";
    "push \"false\""->"specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>";
    "push \"true\""
    "specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>"->"push \"true\"";
    "virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"
    "push \"true\""->"virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "ifeq push 0"
    "virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"->"ifeq push 0";
    "push 1"
    "ifeq push 0"->"push 1";
    "store.b $r6"
    "push 1"->"store.b $r6";
    "goto load.r r0"
    "store.b $r6"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.b $r6"
    "load.r r0"->"load.b $r6";
    "fieldput <it.infocert.crypt.pdfsigner: boolean mayScript>"
    "load.b $r6"->"fieldput <it.infocert.crypt.pdfsigner: boolean mayScript>";
    "fieldput <it.infocert.crypt.pdfsigner: boolean mayScript>"->"load.r r0";
    "push \"AUTOSTART\""
    "load.r r0"->"push \"AUTOSTART\"";
    "push \"AUTOSTART\""->"push \"false\"";
    "push \"false\""->"specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>";
    "specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>"->"push \"true\"";
    "push \"true\""->"virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"->"ifeq push 0";
    "ifeq push 0"->"push 1";
    "push 1"->"store.b $r6";
    "store.b $r6"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"load.b $r6";
    "fieldput <it.infocert.crypt.pdfsigner: boolean autostart>"
    "load.b $r6"->"fieldput <it.infocert.crypt.pdfsigner: boolean autostart>";
    "fieldput <it.infocert.crypt.pdfsigner: boolean autostart>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"JSFUNCTION\""
    "load.r r0"->"push \"JSFUNCTION\"";
    "push \"JSFUNCTION\""->"load.r r0";
    "fieldget <it.infocert.crypt.pdfsigner: java.lang.String JS_FUNCTION_NAME>"
    "load.r r0"->"fieldget <it.infocert.crypt.pdfsigner: java.lang.String JS_FUNCTION_NAME>";
    "fieldget <it.infocert.crypt.pdfsigner: java.lang.String JS_FUNCTION_NAME>"->"specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>";
    "fieldput <it.infocert.crypt.pdfsigner: java.lang.String JS_FUNCTION_NAME>"
    "specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>"->"fieldput <it.infocert.crypt.pdfsigner: java.lang.String JS_FUNCTION_NAME>";
    "fieldput <it.infocert.crypt.pdfsigner: java.lang.String JS_FUNCTION_NAME>"->"load.r r0";
    "push \"GRAPHICOFF\""
    "load.r r0"->"push \"GRAPHICOFF\"";
    "push \"GRAPHICOFF\""->"push \"true\"";
    "push \"true\""->"specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>";
    "specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>"->"push \"true\"";
    "push \"true\""->"virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"->"ifeq push 0";
    "ifeq push 0"->"push 1";
    "push 1"->"store.b $r6";
    "store.b $r6"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"load.b $r6";
    "fieldput <it.infocert.crypt.pdfsigner: boolean simpleGraphic>"
    "load.b $r6"->"fieldput <it.infocert.crypt.pdfsigner: boolean simpleGraphic>";
    "fieldput <it.infocert.crypt.pdfsigner: boolean simpleGraphic>"->"load.r r0";
    "push \"ALERTMESSAGES\""
    "load.r r0"->"push \"ALERTMESSAGES\"";
    "push \"ALERTMESSAGES\""->"push \"true\"";
    "push \"true\""->"specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>";
    "specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>"->"push \"false\"";
    "push \"false\""->"virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "ifeq push 1"
    "virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"->"ifeq push 1";
    "push 0"
    "ifeq push 1"->"push 0";
    "push 0"->"store.b $r6";
    "store.b $r6"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"load.b $r6";
    "fieldput <it.infocert.crypt.pdfsigner: boolean alert>"
    "load.b $r6"->"fieldput <it.infocert.crypt.pdfsigner: boolean alert>";
    "fieldput <it.infocert.crypt.pdfsigner: boolean alert>"->"load.r r0";
    "push \"LIBDEBUG\""
    "load.r r0"->"push \"LIBDEBUG\"";
    "push \"LIBDEBUG\""->"push \"false\"";
    "push \"false\""->"specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>";
    "specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>"->"push \"false\"";
    "push \"false\""->"virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"->"ifeq push 1";
    "ifeq push 1"->"push 0";
    "push 0"->"store.b $r6";
    "store.b $r6"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"load.b $r6";
    "fieldput <it.infocert.crypt.pdfsigner: boolean libDebug>"
    "load.b $r6"->"fieldput <it.infocert.crypt.pdfsigner: boolean libDebug>";
    "fieldput <it.infocert.crypt.pdfsigner: boolean libDebug>"->"load.r r0";
    "new it.infocert.misc.DSSXMLComm"
    "load.r r0"->"new it.infocert.misc.DSSXMLComm";
    "new it.infocert.misc.DSSXMLComm"->"dup1.r";
    "dup1.r"->"load.r r1";
    "specialinvoke <it.infocert.misc.DSSXMLComm: void <init>(java.lang.String)>"
    "load.r r1"->"specialinvoke <it.infocert.misc.DSSXMLComm: void <init>(java.lang.String)>";
    "fieldput <it.infocert.crypt.pdfsigner: it.infocert.misc.DSSXMLComm dssComm>"
    "specialinvoke <it.infocert.misc.DSSXMLComm: void <init>(java.lang.String)>"->"fieldput <it.infocert.crypt.pdfsigner: it.infocert.misc.DSSXMLComm dssComm>";
    "fieldput <it.infocert.crypt.pdfsigner: it.infocert.misc.DSSXMLComm dssComm>"->"load.r r0";
    "push \"parametri\""
    "load.r r0"->"push \"parametri\"";
    "push \"parametri\""->"push \"\"";
    "push \"\""->"specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>";
    "new java.util.StringTokenizer"
    "specialinvoke <it.infocert.crypt.pdfsigner: java.lang.String getParameter(java.lang.String,java.lang.String)>"->"new java.util.StringTokenizer";
    "new java.util.StringTokenizer"->"store.r r1";
    "virtualinvoke <java.lang.String: java.lang.String trim()>"
    "store.r r1"->"virtualinvoke <java.lang.String: java.lang.String trim()>";
    "virtualinvoke <java.lang.String: java.lang.String trim()>"->"store.r $r6";
    "store.r $r6"->"load.r r1";
    "load.r r1"->"load.r $r6";
    "push \"#\""
    "load.r $r6"->"push \"#\"";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"
    "push \"#\""->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"load.r r1";
    "virtualinvoke <java.util.StringTokenizer: int countTokens()>"
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: int countTokens()>";
    "push 2"
    "virtualinvoke <java.util.StringTokenizer: int countTokens()>"->"push 2";
    "ifcmpge.i load.r r0"
    "push 2"->"ifcmpge.i load.r r0";
    "new java.lang.Exception"
    "ifcmpge.i load.r r0"->"new java.lang.Exception";
    "new java.lang.Exception"->"dup1.r";
    "push \"Numero di parametri errato\""
    "dup1.r"->"push \"Numero di parametri errato\"";
    "specialinvoke <java.lang.Exception: void <init>(java.lang.String)>"
    "push \"Numero di parametri errato\""->"specialinvoke <java.lang.Exception: void <init>(java.lang.String)>";
    "athrow"
    "specialinvoke <java.lang.Exception: void <init>(java.lang.String)>"->"athrow";
    "virtualinvoke <java.lang.Exception: void printStackTrace()>"
    "athrow"->"virtualinvoke <java.lang.Exception: void printStackTrace()>";
    "virtualinvoke <java.lang.Exception: void printStackTrace()>"->"load.r r0";
    "push \"Applet initialization failed\""
    "load.r r0"->"push \"Applet initialization failed\"";
    "fieldput <it.infocert.crypt.pdfsigner: java.lang.String stato>"
    "push \"Applet initialization failed\""->"fieldput <it.infocert.crypt.pdfsigner: java.lang.String stato>";
    "fieldput <it.infocert.crypt.pdfsigner: java.lang.String stato>"->"load.r r0";
    "push \"Applet running\""
    "load.r r0"->"push \"Applet running\"";
    "push \"Applet running\""->"fieldput <it.infocert.crypt.pdfsigner: java.lang.String stato>";
    "return"
    "fieldput <it.infocert.crypt.pdfsigner: java.lang.String stato>"->"return";
    "ifcmpge.i load.r r0"->"load.r r0";
    "load.r r0"->"load.r r1";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"fieldput <it.infocert.crypt.pdfsigner: java.lang.String libFirma>";
    "fieldput <it.infocert.crypt.pdfsigner: java.lang.String libFirma>"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"push \"true\"";
    "push \"true\""->"virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"->"ifeq push 0";
    "ifeq push 0"->"push 1";
    "store.b r1"
    "push 1"->"store.b r1";
    "store.b r1"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.b r1"
    "load.r r0"->"load.b r1";
    "fieldput <it.infocert.crypt.pdfsigner: boolean isControllaCF>"
    "load.b r1"->"fieldput <it.infocert.crypt.pdfsigner: boolean isControllaCF>";
    "fieldput <it.infocert.crypt.pdfsigner: boolean isControllaCF>"->"load.r r0";
    "fieldget <it.infocert.crypt.pdfsigner: boolean mayScript>"
    "load.r r0"->"fieldget <it.infocert.crypt.pdfsigner: boolean mayScript>";
    "ifeq load.r r0"
    "fieldget <it.infocert.crypt.pdfsigner: boolean mayScript>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <it.infocert.crypt.pdfsigner: java.lang.String JS_FUNCTION_NAME>";
    "fieldget <it.infocert.crypt.pdfsigner: java.lang.String JS_FUNCTION_NAME>"->"push \"\"";
    "push \"\""->"virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "ifne load.r r0"
    "virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"->"ifne load.r r0";
    "ifne load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"virtualinvoke <java.lang.Exception: void printStackTrace()>";
    "virtualinvoke <java.lang.Exception: void printStackTrace()>"->"load.r r0";
    "push \"Inizializzazione applet in modalit\u00e0 JS fallita!\""
    "load.r r0"->"push \"Inizializzazione applet in modalit\u00e0 JS fallita!\"";
    "push \"Inizializzazione applet in modalit\u00e0 JS fallita!\""->"fieldput <it.infocert.crypt.pdfsigner: java.lang.String stato>";
    "fieldput <it.infocert.crypt.pdfsigner: java.lang.String stato>"->"return";
    "staticinvoke <netscape.javascript.JSObject: netscape.javascript.JSObject getWindow(java.applet.Applet)>"
    "load.r r0"->"staticinvoke <netscape.javascript.JSObject: netscape.javascript.JSObject getWindow(java.applet.Applet)>";
    "fieldput <it.infocert.crypt.pdfsigner: netscape.javascript.JSObject win>"
    "staticinvoke <netscape.javascript.JSObject: netscape.javascript.JSObject getWindow(java.applet.Applet)>"->"fieldput <it.infocert.crypt.pdfsigner: netscape.javascript.JSObject win>";
    "fieldput <it.infocert.crypt.pdfsigner: netscape.javascript.JSObject win>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <it.infocert.crypt.pdfsigner: boolean mayScript>";
    "fieldget <it.infocert.crypt.pdfsigner: boolean mayScript>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <it.infocert.crypt.pdfsigner: java.lang.String JS_FUNCTION_NAME>";
    "fieldget <it.infocert.crypt.pdfsigner: java.lang.String JS_FUNCTION_NAME>"->"push \"\"";
    "push \"\""->"virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "push \"Inizializzazione applet in modalit\u00e0 JS fallita: parametri di comunicazione con DSS non completi\""
    "load.r r0"->"push \"Inizializzazione applet in modalit\u00e0 JS fallita: parametri di comunicazione con DSS non completi\"";
    "push \"Inizializzazione applet in modalit\u00e0 JS fallita: parametri di comunicazione con DSS non completi\""->"fieldput <it.infocert.crypt.pdfsigner: java.lang.String stato>";
    "staticget <java.lang.System: java.io.PrintStream err>"
    "fieldput <it.infocert.crypt.pdfsigner: java.lang.String stato>"->"staticget <java.lang.System: java.io.PrintStream err>";
    "staticget <java.lang.System: java.io.PrintStream err>"->"load.r r0";
    "fieldget <it.infocert.crypt.pdfsigner: java.lang.String stato>"
    "load.r r0"->"fieldget <it.infocert.crypt.pdfsigner: java.lang.String stato>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"
    "fieldget <it.infocert.crypt.pdfsigner: java.lang.String stato>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"return";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <it.infocert.crypt.pdfsigner: boolean mayScript>";
    "fieldget <it.infocert.crypt.pdfsigner: boolean mayScript>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "specialinvoke <it.infocert.crypt.pdfsigner: void initGraphics()>"
    "load.r r0"->"specialinvoke <it.infocert.crypt.pdfsigner: void initGraphics()>";
    "specialinvoke <it.infocert.crypt.pdfsigner: void initGraphics()>"->"load.r r0";
    "fieldget <it.infocert.crypt.pdfsigner: boolean autostart>"
    "load.r r0"->"fieldget <it.infocert.crypt.pdfsigner: boolean autostart>";
    "fieldget <it.infocert.crypt.pdfsigner: boolean autostart>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "fieldget <it.infocert.crypt.pdfsigner: javax.swing.JButton signBt>"
    "load.r r0"->"fieldget <it.infocert.crypt.pdfsigner: javax.swing.JButton signBt>";
    "virtualinvoke <javax.swing.JButton: void doClick()>"
    "fieldget <it.infocert.crypt.pdfsigner: javax.swing.JButton signBt>"->"virtualinvoke <javax.swing.JButton: void doClick()>";
    "virtualinvoke <javax.swing.JButton: void doClick()>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "staticget <java.awt.Color: java.awt.Color white>"
    "load.r r0"->"staticget <java.awt.Color: java.awt.Color white>";
    "virtualinvoke <it.infocert.crypt.pdfsigner: void setBackground(java.awt.Color)>"
    "staticget <java.awt.Color: java.awt.Color white>"->"virtualinvoke <it.infocert.crypt.pdfsigner: void setBackground(java.awt.Color)>";
    "virtualinvoke <it.infocert.crypt.pdfsigner: void setBackground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"push \"Applet running\"";
    "push \"Applet running\""->"fieldput <it.infocert.crypt.pdfsigner: java.lang.String stato>";
    "fieldput <it.infocert.crypt.pdfsigner: java.lang.String stato>"->"goto load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "specialinvoke <it.infocert.crypt.pdfsigner: void initLib()>"
    "load.r r0"->"specialinvoke <it.infocert.crypt.pdfsigner: void initLib()>";
    "ifeq push 0"->"push 0";
    "push 0"->"store.b r1";
    "ifeq push 1"->"push 1";
    "push 1"->"store.b $r6";
    "ifeq push 1"->"push 1";
    "push 1"->"store.b $r6";
    "ifeq push 0"->"push 0";
    "push 0"->"store.b $r6";
    "ifeq push 0"->"push 0";
    "push 0"->"store.b $r6";
    "ifeq push 0"->"push 0";
    "push 0"->"store.b $r6";
}
