digraph "" {
    "r0 := @this: immbfree"
    "load.r r0"
    "r0 := @this: immbfree"->"load.r r0";
    "push 2"
    "load.r r0"->"push 2";
    "push 100"
    "push 2"->"push 100";
    "push -1"
    "push 100"->"push -1";
    "push -1"->"push -1";
    "push 10"
    "push -1"->"push 10";
    "specialinvoke <immbfree: int m0(int,int,int,int,int)>"
    "push 10"->"specialinvoke <immbfree: int m0(int,int,int,int,int)>";
    "store.i i0"
    "specialinvoke <immbfree: int m0(int,int,int,int,int)>"->"store.i i0";
    "store.i i0"->"load.r r0";
    "push 3"
    "load.r r0"->"push 3";
    "push 3"->"push 100";
    "push 0"
    "push 100"->"push 0";
    "push 50"
    "push 0"->"push 50";
    "push 50"->"push 10";
    "push 10"->"specialinvoke <immbfree: int m0(int,int,int,int,int)>";
    "store.i i1"
    "specialinvoke <immbfree: int m0(int,int,int,int,int)>"->"store.i i1";
    "store.i i1"->"load.r r0";
    "push 4"
    "load.r r0"->"push 4";
    "push 4"->"push 100";
    "push 100"->"push 0";
    "push 80"
    "push 0"->"push 80";
    "push 80"->"push 10";
    "push 10"->"specialinvoke <immbfree: int m0(int,int,int,int,int)>";
    "store.i i2"
    "specialinvoke <immbfree: int m0(int,int,int,int,int)>"->"store.i i2";
    "load.i i0"
    "store.i i2"->"load.i i0";
    "iflt staticinvoke <java.lang.Math: double random()>"
    "load.i i0"->"iflt staticinvoke <java.lang.Math: double random()>";
    "iflt staticinvoke <java.lang.Math: double random()>"->"load.i i0";
    "load.i i0"->"push 100";
    "ifcmple.i load.i i0"
    "push 100"->"ifcmple.i load.i i0";
    "staticinvoke <java.lang.Math: double random()>"
    "ifcmple.i load.i i0"->"staticinvoke <java.lang.Math: double random()>";
    "d2f"
    "staticinvoke <java.lang.Math: double random()>"->"d2f";
    "store.f f23"
    "d2f"->"store.f f23";
    "goto push 6"
    "store.f f23"->"goto push 6";
    "push 6"
    "goto push 6"->"push 6";
    "newarray"
    "push 6"->"newarray";
    "store.r i0"
    "newarray"->"store.r i0";
    "store.r i0"->"push 0";
    "store.i i13"
    "push 0"->"store.i i13";
    "store.i i13"->"push 100";
    "load.i i1"
    "push 100"->"load.i i1";
    "sub.i"
    "load.i i1"->"sub.i";
    "i2f"
    "sub.i"->"i2f";
    "load.i i13"
    "i2f"->"load.i i13";
    "load.i i13"->"i2f";
    "mul.f"
    "i2f"->"mul.f";
    "push 2.0F"
    "mul.f"->"push 2.0F";
    "push 2.0F"->"mul.f";
    "push 100.0F"
    "mul.f"->"push 100.0F";
    "div.f"
    "push 100.0F"->"div.f";
    "push 1.0F"
    "div.f"->"push 1.0F";
    "add.f"
    "push 1.0F"->"add.f";
    "store.f f0"
    "add.f"->"store.f f0";
    "store.f f0"->"load.i i13";
    "store.i $i12"
    "load.i i13"->"store.i $i12";
    "store.i $i12"->"load.i i1";
    "ifeq push 0.0F"
    "load.i i1"->"ifeq push 0.0F";
    "ifeq push 0.0F"->"push 1.0F";
    "load.f f0"
    "push 1.0F"->"load.f f0";
    "load.f f0"->"div.f";
    "div.f"->"store.f f0";
    "goto load.r i0"
    "store.f f0"->"goto load.r i0";
    "load.r i0"
    "goto load.r i0"->"load.r i0";
    "load.i $i12"
    "load.r i0"->"load.i $i12";
    "load.i $i12"->"load.f f0";
    "arraywrite.f"
    "load.f f0"->"arraywrite.f";
    "inc.i i13 1"
    "arraywrite.f"->"inc.i i13 1";
    "inc.i i13 1"->"load.i i13";
    "load.i i13"->"push 6";
    "ifcmplt.i push 100"
    "push 6"->"ifcmplt.i push 100";
    "load.i i2"
    "ifcmplt.i push 100"->"load.i i2";
    "load.i i2"->"i2f";
    "push 1.25F"
    "i2f"->"push 1.25F";
    "push 1.25F"->"mul.f";
    "mul.f"->"push 100.0F";
    "push 100.0F"->"div.f";
    "store.f i1"
    "div.f"->"store.f i1";
    "store.f i1"->"load.r r0";
    "fieldget <immbfree: java.awt.Color[] m12>"
    "load.r r0"->"fieldget <immbfree: java.awt.Color[] m12>";
    "push 5"
    "fieldget <immbfree: java.awt.Color[] m12>"->"push 5";
    "load.f f23"
    "push 5"->"load.f f23";
    "load.f f23"->"load.r i0";
    "load.r i0"->"push 5";
    "arrayread.f"
    "push 5"->"arrayread.f";
    "arrayread.f"->"push 1.0F";
    "push 0.01F"
    "push 1.0F"->"push 0.01F";
    "load.f i1"
    "push 0.01F"->"load.f i1";
    "load.f i1"->"mul.f";
    "sub.f"
    "mul.f"->"sub.f";
    "staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>"
    "sub.f"->"staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>";
    "arraywrite.r"
    "staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <immbfree: java.awt.Color[] m12>";
    "fieldget <immbfree: java.awt.Color[] m12>"->"push 3";
    "push 3"->"load.f f23";
    "load.f f23"->"load.r i0";
    "load.r i0"->"push 4";
    "push 4"->"arrayread.f";
    "arrayread.f"->"push 1.0F";
    "push 0.1333333F"
    "push 1.0F"->"push 0.1333333F";
    "push 0.1333333F"->"load.f i1";
    "load.f i1"->"mul.f";
    "mul.f"->"sub.f";
    "sub.f"->"staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>";
    "staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <immbfree: java.awt.Color[] m12>";
    "fieldget <immbfree: java.awt.Color[] m12>"->"push 0";
    "push 0"->"load.f f23";
    "load.f f23"->"load.r i0";
    "load.r i0"->"push 3";
    "push 3"->"arrayread.f";
    "arrayread.f"->"push 1.0F";
    "push 0.2F"
    "push 1.0F"->"push 0.2F";
    "push 0.2F"->"load.f i1";
    "load.f i1"->"mul.f";
    "mul.f"->"sub.f";
    "sub.f"->"staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>";
    "staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <immbfree: java.awt.Color[] m12>";
    "fieldget <immbfree: java.awt.Color[] m12>"->"push 4";
    "push 4"->"load.f f23";
    "load.f f23"->"load.r i0";
    "load.r i0"->"push 2";
    "push 2"->"arrayread.f";
    "arrayread.f"->"push 1.0F";
    "push 0.4F"
    "push 1.0F"->"push 0.4F";
    "push 0.4F"->"load.f i1";
    "load.f i1"->"mul.f";
    "mul.f"->"sub.f";
    "sub.f"->"staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>";
    "staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "fieldget <immbfree: java.awt.Color[] m46>"
    "load.r r0"->"fieldget <immbfree: java.awt.Color[] m46>";
    "fieldget <immbfree: java.awt.Color[] m46>"->"push 0";
    "push 0"->"load.f f23";
    "load.f f23"->"load.r i0";
    "push 1"
    "load.r i0"->"push 1";
    "push 1"->"arrayread.f";
    "arrayread.f"->"push 1.0F";
    "push 0.6F"
    "push 1.0F"->"push 0.6F";
    "push 0.6F"->"load.f i1";
    "load.f i1"->"mul.f";
    "mul.f"->"sub.f";
    "sub.f"->"staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>";
    "staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <immbfree: java.awt.Color[] m12>";
    "fieldget <immbfree: java.awt.Color[] m12>"->"push 1";
    "push 1"->"load.f f23";
    "load.f f23"->"load.r i0";
    "load.r i0"->"push 0";
    "push 0"->"arrayread.f";
    "arrayread.f"->"push 1.0F";
    "push 0.8F"
    "push 1.0F"->"push 0.8F";
    "push 0.8F"->"load.f i1";
    "load.f i1"->"mul.f";
    "mul.f"->"sub.f";
    "sub.f"->"staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>";
    "staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <immbfree: java.awt.Color[] m46>";
    "fieldget <immbfree: java.awt.Color[] m46>"->"push 1";
    "push 1"->"load.r r0";
    "load.r r0"->"fieldget <immbfree: java.awt.Color[] m12>";
    "fieldget <immbfree: java.awt.Color[] m12>"->"push 5";
    "arrayread.r"
    "push 5"->"arrayread.r";
    "arrayread.r"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <immbfree: java.awt.Color[] m46>";
    "fieldget <immbfree: java.awt.Color[] m46>"->"push 2";
    "push 2"->"load.r r0";
    "load.r r0"->"fieldget <immbfree: java.awt.Color[] m12>";
    "fieldget <immbfree: java.awt.Color[] m12>"->"push 4";
    "push 4"->"arrayread.r";
    "arrayread.r"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <immbfree: java.awt.Color[] m12>";
    "fieldget <immbfree: java.awt.Color[] m12>"->"push 6";
    "new java.awt.Color"
    "push 6"->"new java.awt.Color";
    "dup1.r"
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"load.r r0";
    "push 8"
    "load.r r0"->"push 8";
    "push 8"->"push 0";
    "push 0"->"push 0";
    "push 0"->"push 0";
    "push 16"
    "push 0"->"push 16";
    "push 16"->"specialinvoke <immbfree: int m0(int,int,int,int,int)>";
    "specialinvoke <java.awt.Color: void <init>(int)>"
    "specialinvoke <immbfree: int m0(int,int,int,int,int)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
    "specialinvoke <java.awt.Color: void <init>(int)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"push 1";
    "push \" \""
    "push 1"->"push \" \"";
    "specialinvoke <immbfree: java.lang.String m0(int,java.lang.String)>"
    "push \" \""->"specialinvoke <immbfree: java.lang.String m0(int,java.lang.String)>";
    "fieldput <immbfree: java.lang.String m13>"
    "specialinvoke <immbfree: java.lang.String m0(int,java.lang.String)>"->"fieldput <immbfree: java.lang.String m13>";
    "fieldput <immbfree: java.lang.String m13>"->"load.r r0";
    "push \"_top\""
    "load.r r0"->"push \"_top\"";
    "fieldput <immbfree: java.lang.String m15>"
    "push \"_top\""->"fieldput <immbfree: java.lang.String m15>";
    "fieldput <immbfree: java.lang.String m15>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push 7"
    "load.r r0"->"push 7";
    "push 30"
    "push 7"->"push 30";
    "push 30"->"push 6";
    "push 11"
    "push 6"->"push 11";
    "push 11"->"push 10";
    "push 10"->"specialinvoke <immbfree: int m0(int,int,int,int,int)>";
    "fieldput <immbfree: int m24>"
    "specialinvoke <immbfree: int m0(int,int,int,int,int)>"->"fieldput <immbfree: int m24>";
    "fieldput <immbfree: int m24>"->"load.r r0";
    "new java.awt.Font"
    "load.r r0"->"new java.awt.Font";
    "new java.awt.Font"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"push 6";
    "push \"TimesRoman\""
    "push 6"->"push \"TimesRoman\"";
    "push \"TimesRoman\""->"specialinvoke <immbfree: java.lang.String m0(int,java.lang.String)>";
    "specialinvoke <immbfree: java.lang.String m0(int,java.lang.String)>"->"load.r r0";
    "load.r r0"->"push 5";
    "push 5"->"push 3";
    "push 3"->"push 0";
    "push 0"->"push 0";
    "push 0"->"push 10";
    "push 10"->"specialinvoke <immbfree: int m0(int,int,int,int,int)>";
    "specialinvoke <immbfree: int m0(int,int,int,int,int)>"->"load.r r0";
    "fieldget <immbfree: int m24>"
    "load.r r0"->"fieldget <immbfree: int m24>";
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"
    "fieldget <immbfree: int m24>"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
    "fieldput <immbfree: java.awt.Font m47>"
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"fieldput <immbfree: java.awt.Font m47>";
    "fieldput <immbfree: java.awt.Font m47>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <immbfree: int m24>";
    "fieldget <immbfree: int m24>"->"push 3";
    "add.i"
    "push 3"->"add.i";
    "add.i"->"fieldput <immbfree: int m24>";
    "fieldput <immbfree: int m24>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"
    "load.r r0"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
    "fieldput <immbfree: java.net.URL m14>"
    "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"fieldput <immbfree: java.net.URL m14>";
    "fieldput <immbfree: java.net.URL m14>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>"
    "load.r r0"->"virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>";
    "fieldput <immbfree: java.net.URL m11>"
    "virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>"->"fieldput <immbfree: java.net.URL m11>";
    "fieldput <immbfree: java.net.URL m11>"->"load.r r0";
    "new java.net.URL"
    "load.r r0"->"new java.net.URL";
    "new java.net.URL"->"dup1.r";
    "dup1.r"->"load.r r0";
    "fieldget <immbfree: java.net.URL m14>"
    "load.r r0"->"fieldget <immbfree: java.net.URL m14>";
    "fieldget <immbfree: java.net.URL m14>"->"load.r r0";
    "load.r r0"->"push 0";
    "push null"
    "push 0"->"push null";
    "push null"->"specialinvoke <immbfree: java.lang.String m0(int,java.lang.String)>";
    "specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>"
    "specialinvoke <immbfree: java.lang.String m0(int,java.lang.String)>"->"specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>";
    "fieldput <immbfree: java.net.URL m17>"
    "specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>"->"fieldput <immbfree: java.net.URL m17>";
    "goto load.r r0"
    "fieldput <immbfree: java.net.URL m17>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <immbfree: java.awt.Color[] m12>";
    "fieldget <immbfree: java.awt.Color[] m12>"->"push 2";
    "staticget <java.awt.Color: java.awt.Color magenta>"
    "push 2"->"staticget <java.awt.Color: java.awt.Color magenta>";
    "staticget <java.awt.Color: java.awt.Color magenta>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"push 10";
    "push 10"->"push null";
    "push null"->"specialinvoke <immbfree: java.lang.String m0(int,java.lang.String)>";
    "fieldput <immbfree: java.lang.String m48>"
    "specialinvoke <immbfree: java.lang.String m0(int,java.lang.String)>"->"fieldput <immbfree: java.lang.String m48>";
    "fieldput <immbfree: java.lang.String m48>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"push 11";
    "push 11"->"push null";
    "push null"->"specialinvoke <immbfree: java.lang.String m0(int,java.lang.String)>";
    "fieldput <immbfree: java.lang.String m50>"
    "specialinvoke <immbfree: java.lang.String m0(int,java.lang.String)>"->"fieldput <immbfree: java.lang.String m50>";
    "fieldput <immbfree: java.lang.String m50>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push 12"
    "load.r r0"->"push 12";
    "push 12"->"push null";
    "push null"->"specialinvoke <immbfree: java.lang.String m0(int,java.lang.String)>";
    "fieldput <immbfree: java.lang.String m49>"
    "specialinvoke <immbfree: java.lang.String m0(int,java.lang.String)>"->"fieldput <immbfree: java.lang.String m49>";
    "fieldput <immbfree: java.lang.String m49>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push 13"
    "load.r r0"->"push 13";
    "push 13"->"push 3";
    "push 3"->"push -1";
    "push -1"->"push -1";
    "push -1"->"push 10";
    "push 10"->"specialinvoke <immbfree: int m0(int,int,int,int,int)>";
    "fieldput <immbfree: int m16>"
    "specialinvoke <immbfree: int m0(int,int,int,int,int)>"->"fieldput <immbfree: int m16>";
    "fieldput <immbfree: int m16>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: java.awt.Graphics getGraphics()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Graphics getGraphics()>";
    "fieldput <immbfree: java.awt.Graphics m19>"
    "virtualinvoke <java.awt.Component: java.awt.Graphics getGraphics()>"->"fieldput <immbfree: java.awt.Graphics m19>";
    "fieldput <immbfree: java.awt.Graphics m19>"->"load.r r0";
    "fieldget <immbfree: java.awt.Rectangle[] m37>"
    "load.r r0"->"fieldget <immbfree: java.awt.Rectangle[] m37>";
    "fieldget <immbfree: java.awt.Rectangle[] m37>"->"push 0";
    "new java.awt.Rectangle"
    "push 0"->"new java.awt.Rectangle";
    "new java.awt.Rectangle"->"dup1.r";
    "dup1.r"->"push 0";
    "push 0"->"push 0";
    "push 0"->"load.r r0";
    "virtualinvoke <java.awt.Component: java.awt.Rectangle bounds()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Rectangle bounds()>";
    "fieldget <java.awt.Rectangle: int width>"
    "virtualinvoke <java.awt.Component: java.awt.Rectangle bounds()>"->"fieldget <java.awt.Rectangle: int width>";
    "fieldget <java.awt.Rectangle: int width>"->"load.r r0";
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Rectangle bounds()>";
    "fieldget <java.awt.Rectangle: int height>"
    "virtualinvoke <java.awt.Component: java.awt.Rectangle bounds()>"->"fieldget <java.awt.Rectangle: int height>";
    "specialinvoke <java.awt.Rectangle: void <init>(int,int,int,int)>"
    "fieldget <java.awt.Rectangle: int height>"->"specialinvoke <java.awt.Rectangle: void <init>(int,int,int,int)>";
    "specialinvoke <java.awt.Rectangle: void <init>(int,int,int,int)>"->"arraywrite.r";
    "return"
    "arraywrite.r"->"return";
    "store.r i1"
    "specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>"->"store.r i1";
    "store.r i1"->"load.r r0";
    "load.r r0"->"push null";
    "push null"->"fieldput <immbfree: java.net.URL m17>";
    "push 0.0F"
    "ifeq push 0.0F"->"push 0.0F";
    "push 0.0F"->"store.f f0";
    "ifcmple.i load.i i0"->"load.i i0";
    "load.i i0"->"i2f";
    "i2f"->"push 100.0F";
    "push 100.0F"->"div.f";
    "div.f"->"store.f f23";
}
