digraph "" {
    "r0 := @this: BlockGame"
    "load.r r0"
    "r0 := @this: BlockGame"->"load.r r0";
    "new java.awt.Font"
    "load.r r0"->"new java.awt.Font";
    "dup1.r"
    "new java.awt.Font"->"dup1.r";
    "push \"Dialog\""
    "dup1.r"->"push \"Dialog\"";
    "push 3"
    "push \"Dialog\""->"push 3";
    "push 12"
    "push 3"->"push 12";
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"
    "push 12"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
    "fieldput <BlockGame: java.awt.Font font1>"
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"fieldput <BlockGame: java.awt.Font font1>";
    "fieldput <BlockGame: java.awt.Font font1>"->"load.r r0";
    "load.r r0"->"new java.awt.Font";
    "new java.awt.Font"->"dup1.r";
    "dup1.r"->"push \"Dialog\"";
    "push 0"
    "push \"Dialog\""->"push 0";
    "push 10"
    "push 0"->"push 10";
    "push 10"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
    "fieldput <BlockGame: java.awt.Font font2>"
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"fieldput <BlockGame: java.awt.Font font2>";
    "fieldput <BlockGame: java.awt.Font font2>"->"load.r r0";
    "load.r r0"->"new java.awt.Font";
    "new java.awt.Font"->"dup1.r";
    "dup1.r"->"push \"Dialog\"";
    "push \"Dialog\""->"push 0";
    "push 8"
    "push 0"->"push 8";
    "push 8"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
    "fieldput <BlockGame: java.awt.Font font3>"
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"fieldput <BlockGame: java.awt.Font font3>";
    "fieldput <BlockGame: java.awt.Font font3>"->"load.r r0";
    "new java.awt.Color"
    "load.r r0"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"push 0";
    "push 0"->"push 0";
    "push 127"
    "push 0"->"push 127";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"
    "push 127"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "fieldput <BlockGame: java.awt.Color bgcolor>"
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <BlockGame: java.awt.Color bgcolor>";
    "fieldput <BlockGame: java.awt.Color bgcolor>"->"load.r r0";
    "push 20"
    "load.r r0"->"push 20";
    "push 20"->"push 10";
    "newmultiarray 2"
    "push 10"->"newmultiarray 2";
    "fieldput <BlockGame: boolean[][] block>"
    "newmultiarray 2"->"fieldput <BlockGame: boolean[][] block>";
    "fieldput <BlockGame: boolean[][] block>"->"load.r r0";
    "push 50"
    "load.r r0"->"push 50";
    "newarray"
    "push 50"->"newarray";
    "fieldput <BlockGame: int[] breakblock_x>"
    "newarray"->"fieldput <BlockGame: int[] breakblock_x>";
    "fieldput <BlockGame: int[] breakblock_x>"->"load.r r0";
    "load.r r0"->"push 50";
    "push 50"->"newarray";
    "fieldput <BlockGame: int[] breakblock_y>"
    "newarray"->"fieldput <BlockGame: int[] breakblock_y>";
    "fieldput <BlockGame: int[] breakblock_y>"->"load.r r0";
    "load.r r0"->"push 50";
    "push 50"->"newarray";
    "fieldput <BlockGame: int[] breakblock_s>"
    "newarray"->"fieldput <BlockGame: int[] breakblock_s>";
    "fieldput <BlockGame: int[] breakblock_s>"->"load.r r0";
    "new BlockGame$PitchController"
    "load.r r0"->"new BlockGame$PitchController";
    "new BlockGame$PitchController"->"dup1.r";
    "dup1.r"->"load.r r0";
    "specialinvoke <BlockGame$PitchController: void <init>(BlockGame)>"
    "load.r r0"->"specialinvoke <BlockGame$PitchController: void <init>(BlockGame)>";
    "fieldput <BlockGame: BlockGame$PitchController pitch>"
    "specialinvoke <BlockGame$PitchController: void <init>(BlockGame)>"->"fieldput <BlockGame: BlockGame$PitchController pitch>";
    "fieldput <BlockGame: BlockGame$PitchController pitch>"->"load.r r0";
    "new java.util.Random"
    "load.r r0"->"new java.util.Random";
    "new java.util.Random"->"dup1.r";
    "specialinvoke <java.util.Random: void <init>()>"
    "dup1.r"->"specialinvoke <java.util.Random: void <init>()>";
    "fieldput <BlockGame: java.util.Random rand>"
    "specialinvoke <java.util.Random: void <init>()>"->"fieldput <BlockGame: java.util.Random rand>";
    "fieldput <BlockGame: java.util.Random rand>"->"load.r r0";
    "push 25400"
    "load.r r0"->"push 25400";
    "fieldput <BlockGame: int xmax>"
    "push 25400"->"fieldput <BlockGame: int xmax>";
    "fieldput <BlockGame: int xmax>"->"load.r r0";
    "push 38100"
    "load.r r0"->"push 38100";
    "fieldput <BlockGame: int ymax>"
    "push 38100"->"fieldput <BlockGame: int ymax>";
    "fieldput <BlockGame: int ymax>"->"load.r r0";
    "push 3810"
    "load.r r0"->"push 3810";
    "fieldput <BlockGame: int block_zone>"
    "push 3810"->"fieldput <BlockGame: int block_zone>";
    "fieldput <BlockGame: int block_zone>"->"load.r r0";
    "push 1270"
    "load.r r0"->"push 1270";
    "fieldput <BlockGame: int block_height>"
    "push 1270"->"fieldput <BlockGame: int block_height>";
    "fieldput <BlockGame: int block_height>"->"load.r r0";
    "load.r r0"->"push 10";
    "fieldput <BlockGame: int blocks_x>"
    "push 10"->"fieldput <BlockGame: int blocks_x>";
    "fieldput <BlockGame: int blocks_x>"->"load.r r0";
    "push 5"
    "load.r r0"->"push 5";
    "fieldput <BlockGame: int blocks_y>"
    "push 5"->"fieldput <BlockGame: int blocks_y>";
    "fieldput <BlockGame: int blocks_y>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <BlockGame: int xmax>"
    "load.r r0"->"fieldget <BlockGame: int xmax>";
    "fieldget <BlockGame: int xmax>"->"load.r r0";
    "fieldget <BlockGame: int blocks_x>"
    "load.r r0"->"fieldget <BlockGame: int blocks_x>";
    "div.i"
    "fieldget <BlockGame: int blocks_x>"->"div.i";
    "fieldput <BlockGame: int block_width>"
    "div.i"->"fieldput <BlockGame: int block_width>";
    "fieldput <BlockGame: int block_width>"->"load.r r0";
    "load.r r0"->"push 1270";
    "fieldput <BlockGame: int barx>"
    "push 1270"->"fieldput <BlockGame: int barx>";
    "fieldput <BlockGame: int barx>"->"load.r r0";
    "load.r r0"->"push 1270";
    "fieldput <BlockGame: int barbx>"
    "push 1270"->"fieldput <BlockGame: int barbx>";
    "fieldput <BlockGame: int barbx>"->"load.r r0";
    "load.r r0"->"push 1270";
    "fieldput <BlockGame: int barnow>"
    "push 1270"->"fieldput <BlockGame: int barnow>";
    "fieldput <BlockGame: int barnow>"->"load.r r0";
    "push 35560"
    "load.r r0"->"push 35560";
    "fieldput <BlockGame: int bary_max>"
    "push 35560"->"fieldput <BlockGame: int bary_max>";
    "fieldput <BlockGame: int bary_max>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <BlockGame: int block_height>"
    "load.r r0"->"fieldget <BlockGame: int block_height>";
    "fieldget <BlockGame: int block_height>"->"load.r r0";
    "fieldget <BlockGame: int blocks_y>"
    "load.r r0"->"fieldget <BlockGame: int blocks_y>";
    "mul.i"
    "fieldget <BlockGame: int blocks_y>"->"mul.i";
    "mul.i"->"load.r r0";
    "fieldget <BlockGame: int block_zone>"
    "load.r r0"->"fieldget <BlockGame: int block_zone>";
    "add.i"
    "fieldget <BlockGame: int block_zone>"->"add.i";
    "push 2560"
    "add.i"->"push 2560";
    "push 2560"->"add.i";
    "fieldput <BlockGame: int bary_min>"
    "add.i"->"fieldput <BlockGame: int bary_min>";
    "fieldput <BlockGame: int bary_min>"->"load.r r0";
    "push 4000"
    "load.r r0"->"push 4000";
    "fieldput <BlockGame: int barsize>"
    "push 4000"->"fieldput <BlockGame: int barsize>";
    "fieldput <BlockGame: int barsize>"->"load.r r0";
    "push 31750"
    "load.r r0"->"push 31750";
    "fieldput <BlockGame: int bary>"
    "push 31750"->"fieldput <BlockGame: int bary>";
    "fieldput <BlockGame: int bary>"->"load.r r0";
    "load.r r0"->"push 31750";
    "fieldput <BlockGame: int barby>"
    "push 31750"->"fieldput <BlockGame: int barby>";
    "fieldput <BlockGame: int barby>"->"load.r r0";
    "load.r r0"->"push 31750";
    "fieldput <BlockGame: int barnow_y>"
    "push 31750"->"fieldput <BlockGame: int barnow_y>";
    "fieldput <BlockGame: int barnow_y>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <BlockGame: int x>"
    "push 0"->"fieldput <BlockGame: int x>";
    "fieldput <BlockGame: int x>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <BlockGame: int block_height>";
    "fieldget <BlockGame: int block_height>"->"load.r r0";
    "load.r r0"->"fieldget <BlockGame: int blocks_y>";
    "fieldget <BlockGame: int blocks_y>"->"mul.i";
    "mul.i"->"load.r r0";
    "load.r r0"->"fieldget <BlockGame: int block_zone>";
    "fieldget <BlockGame: int block_zone>"->"add.i";
    "push 512"
    "add.i"->"push 512";
    "push 512"->"add.i";
    "fieldput <BlockGame: int y>"
    "add.i"->"fieldput <BlockGame: int y>";
    "fieldput <BlockGame: int y>"->"load.r r0";
    "push 381"
    "load.r r0"->"push 381";
    "fieldput <BlockGame: int sx>"
    "push 381"->"fieldput <BlockGame: int sx>";
    "fieldput <BlockGame: int sx>"->"load.r r0";
    "load.r r0"->"push 381";
    "fieldput <BlockGame: int sy>"
    "push 381"->"fieldput <BlockGame: int sy>";
    "fieldput <BlockGame: int sy>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <BlockGame: int x>"
    "load.r r0"->"fieldget <BlockGame: int x>";
    "fieldput <BlockGame: int bx>"
    "fieldget <BlockGame: int x>"->"fieldput <BlockGame: int bx>";
    "fieldput <BlockGame: int bx>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <BlockGame: int y>"
    "load.r r0"->"fieldget <BlockGame: int y>";
    "fieldput <BlockGame: int by>"
    "fieldget <BlockGame: int y>"->"fieldput <BlockGame: int by>";
    "fieldput <BlockGame: int by>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <BlockGame: boolean wait_game_start>"
    "push 0"->"fieldput <BlockGame: boolean wait_game_start>";
    "fieldput <BlockGame: boolean wait_game_start>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <BlockGame: boolean game_end>"
    "push 0"->"fieldput <BlockGame: boolean game_end>";
    "fieldput <BlockGame: boolean game_end>"->"load.r r0";
    "push \"\""
    "load.r r0"->"push \"\"";
    "fieldput <BlockGame: java.lang.String game_end_score>"
    "push \"\""->"fieldput <BlockGame: java.lang.String game_end_score>";
    "fieldput <BlockGame: java.lang.String game_end_score>"->"load.r r0";
    "load.r r0"->"push \"\"";
    "fieldput <BlockGame: java.lang.String game_end_timebonus>"
    "push \"\""->"fieldput <BlockGame: java.lang.String game_end_timebonus>";
    "fieldput <BlockGame: java.lang.String game_end_timebonus>"->"load.r r0";
    "load.r r0"->"push \"\"";
    "fieldput <BlockGame: java.lang.String game_end_total>"
    "push \"\""->"fieldput <BlockGame: java.lang.String game_end_total>";
    "fieldput <BlockGame: java.lang.String game_end_total>"->"load.r r0";
    "load.r r0"->"push \"\"";
    "fieldput <BlockGame: java.lang.String game_end_msg>"
    "push \"\""->"fieldput <BlockGame: java.lang.String game_end_msg>";
    "fieldput <BlockGame: java.lang.String game_end_msg>"->"load.r r0";
    "push 1"
    "load.r r0"->"push 1";
    "fieldput <BlockGame: boolean g_refresh>"
    "push 1"->"fieldput <BlockGame: boolean g_refresh>";
    "fieldput <BlockGame: boolean g_refresh>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <BlockGame: boolean hh>"
    "push 0"->"fieldput <BlockGame: boolean hh>";
    "fieldput <BlockGame: boolean hh>"->"load.r r0";
    "load.r r0"->"push 1";
    "fieldput <BlockGame: boolean initialized>"
    "push 1"->"fieldput <BlockGame: boolean initialized>";
    "fieldput <BlockGame: boolean initialized>"->"load.r r0";
    "new BlockGame$1"
    "load.r r0"->"new BlockGame$1";
    "new BlockGame$1"->"dup1.r";
    "dup1.r"->"load.r r0";
    "specialinvoke <BlockGame$1: void <init>(BlockGame)>"
    "load.r r0"->"specialinvoke <BlockGame$1: void <init>(BlockGame)>";
    "virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>"
    "specialinvoke <BlockGame$1: void <init>(BlockGame)>"->"virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>";
    "virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>"->"load.r r0";
    "new BlockGame$2"
    "load.r r0"->"new BlockGame$2";
    "new BlockGame$2"->"dup1.r";
    "dup1.r"->"load.r r0";
    "specialinvoke <BlockGame$2: void <init>(BlockGame)>"
    "load.r r0"->"specialinvoke <BlockGame$2: void <init>(BlockGame)>";
    "virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>"
    "specialinvoke <BlockGame$2: void <init>(BlockGame)>"->"virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>";
    "virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>"->"load.r r0";
    "push 280"
    "load.r r0"->"push 280";
    "push 300"
    "push 280"->"push 300";
    "virtualinvoke <java.awt.Component: void setSize(int,int)>"
    "push 300"->"virtualinvoke <java.awt.Component: void setSize(int,int)>";
    "return"
    "virtualinvoke <java.awt.Component: void setSize(int,int)>"->"return";
    "virtualinvoke <java.lang.Throwable: void printStackTrace()>"
    "virtualinvoke <java.awt.Component: void setSize(int,int)>"->"virtualinvoke <java.lang.Throwable: void printStackTrace()>";
    "virtualinvoke <java.lang.Throwable: void printStackTrace()>"->"return";
}
