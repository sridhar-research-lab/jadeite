digraph "" {
    "r0 := @this: pool"
    "load.r r0"
    "r0 := @this: pool"->"load.r r0";
    "push 16"
    "load.r r0"->"push 16";
    "newarray"
    "push 16"->"newarray";
    "fieldput <pool: poolball[] balls>"
    "newarray"->"fieldput <pool: poolball[] balls>";
    "push 0"
    "fieldput <pool: poolball[] balls>"->"push 0";
    "store.i r1"
    "push 0"->"store.i r1";
    "goto load.i r1"
    "store.i r1"->"goto load.i r1";
    "load.i r1"
    "goto load.i r1"->"load.i r1";
    "push 15"
    "load.i r1"->"push 15";
    "ifcmplt.i load.r r0"
    "push 15"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "new cueball"
    "load.r r0"->"new cueball";
    "dup1.r"
    "new cueball"->"dup1.r";
    "specialinvoke <cueball: void <init>()>"
    "dup1.r"->"specialinvoke <cueball: void <init>()>";
    "fieldput <pool: cueball cue>"
    "specialinvoke <cueball: void <init>()>"->"fieldput <pool: cueball cue>";
    "fieldput <pool: cueball cue>"->"push 0";
    "push 0"->"store.i r1";
    "store.i r1"->"goto load.i r1";
    "goto load.i r1"->"load.i r1";
    "push 324"
    "load.i r1"->"push 324";
    "ifcmplt.i staticget <poolball: byte[] D18>"
    "push 324"->"ifcmplt.i staticget <poolball: byte[] D18>";
    "ifcmplt.i staticget <poolball: byte[] D18>"->"load.r r0";
    "fieldget <pool: poolball[] balls>"
    "load.r r0"->"fieldget <pool: poolball[] balls>";
    "fieldget <pool: poolball[] balls>"->"push 15";
    "push 15"->"load.r r0";
    "fieldget <pool: cueball cue>"
    "load.r r0"->"fieldget <pool: cueball cue>";
    "arraywrite.r"
    "fieldget <pool: cueball cue>"->"arraywrite.r";
    "arraywrite.r"->"push 0";
    "push 0"->"store.i r1";
    "store.i r1"->"goto load.i r1";
    "goto load.i r1"->"load.i r1";
    "load.i r1"->"push 15";
    "ifcmple.i load.r r0"
    "push 15"->"ifcmple.i load.r r0";
    "push 256"
    "ifcmple.i load.r r0"->"push 256";
    "push 256"->"newarray";
    "store.r r1"
    "newarray"->"store.r r1";
    "store.r r1"->"push 0";
    "store.i i27"
    "push 0"->"store.i i27";
    "goto load.i i27"
    "store.i i27"->"goto load.i i27";
    "load.i i27"
    "goto load.i i27"->"load.i i27";
    "push 195"
    "load.i i27"->"push 195";
    "ifcmplt.i staticget <poolball: byte[] shade>"
    "push 195"->"ifcmplt.i staticget <poolball: byte[] shade>";
    "ifcmplt.i staticget <poolball: byte[] shade>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "new java.awt.image.MemoryImageSource"
    "load.r r0"->"new java.awt.image.MemoryImageSource";
    "new java.awt.image.MemoryImageSource"->"dup1.r";
    "push 13"
    "dup1.r"->"push 13";
    "push 13"->"push 15";
    "load.r r1"
    "push 15"->"load.r r1";
    "load.r r1"->"push 0";
    "push 0"->"push 13";
    "specialinvoke <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>"
    "push 13"->"specialinvoke <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>";
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>"
    "specialinvoke <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>";
    "fieldput <pool: java.awt.Image shadeImage>"
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>"->"fieldput <pool: java.awt.Image shadeImage>";
    "fieldput <pool: java.awt.Image shadeImage>"->"load.r r0";
    "new java.awt.Point"
    "load.r r0"->"new java.awt.Point";
    "new java.awt.Point"->"dup1.r";
    "specialinvoke <java.awt.Point: void <init>()>"
    "dup1.r"->"specialinvoke <java.awt.Point: void <init>()>";
    "fieldput <pool: java.awt.Point gStart>"
    "specialinvoke <java.awt.Point: void <init>()>"->"fieldput <pool: java.awt.Point gStart>";
    "fieldput <pool: java.awt.Point gStart>"->"load.r r0";
    "load.r r0"->"new java.awt.Point";
    "new java.awt.Point"->"dup1.r";
    "dup1.r"->"specialinvoke <java.awt.Point: void <init>()>";
    "fieldput <pool: java.awt.Point gEnd>"
    "specialinvoke <java.awt.Point: void <init>()>"->"fieldput <pool: java.awt.Point gEnd>";
    "fieldput <pool: java.awt.Point gEnd>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <pool: java.awt.Dimension screen>"
    "load.r r0"->"fieldget <pool: java.awt.Dimension screen>";
    "fieldget <java.awt.Dimension: int width>"
    "fieldget <pool: java.awt.Dimension screen>"->"fieldget <java.awt.Dimension: int width>";
    "fieldget <java.awt.Dimension: int width>"->"load.r r0";
    "load.r r0"->"fieldget <pool: java.awt.Dimension screen>";
    "fieldget <java.awt.Dimension: int height>"
    "fieldget <pool: java.awt.Dimension screen>"->"fieldget <java.awt.Dimension: int height>";
    "virtualinvoke <java.applet.Applet: void resize(int,int)>"
    "fieldget <java.awt.Dimension: int height>"->"virtualinvoke <java.applet.Applet: void resize(int,int)>";
    "virtualinvoke <java.applet.Applet: void resize(int,int)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <pool: java.awt.Dimension screen>";
    "fieldget <pool: java.awt.Dimension screen>"->"fieldget <java.awt.Dimension: int width>";
    "fieldget <java.awt.Dimension: int width>"->"load.r r0";
    "load.r r0"->"fieldget <pool: java.awt.Dimension screen>";
    "fieldget <pool: java.awt.Dimension screen>"->"fieldget <java.awt.Dimension: int height>";
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"
    "fieldget <java.awt.Dimension: int height>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
    "fieldput <pool: java.awt.Image ii>"
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <pool: java.awt.Image ii>";
    "fieldput <pool: java.awt.Image ii>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <pool: java.awt.Image ii>"
    "load.r r0"->"fieldget <pool: java.awt.Image ii>";
    "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"
    "fieldget <pool: java.awt.Image ii>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
    "fieldput <pool: java.awt.Graphics goff>"
    "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <pool: java.awt.Graphics goff>";
    "fieldput <pool: java.awt.Graphics goff>"->"load.r r0";
    "push 1"
    "load.r r0"->"push 1";
    "fieldput <pool: boolean bDrawAll>"
    "push 1"->"fieldput <pool: boolean bDrawAll>";
    "fieldput <pool: boolean bDrawAll>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>"
    "load.r r0"->"virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>";
    "virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>"
    "load.r r0"->"virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>";
    "virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: void addKeyListener(java.awt.event.KeyListener)>"
    "load.r r0"->"virtualinvoke <java.awt.Component: void addKeyListener(java.awt.event.KeyListener)>";
    "virtualinvoke <java.awt.Component: void addKeyListener(java.awt.event.KeyListener)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>"
    "load.r r0"->"virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>";
    "push \"hit.au\""
    "virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>"->"push \"hit.au\"";
    "virtualinvoke <java.applet.Applet: java.applet.AudioClip getAudioClip(java.net.URL,java.lang.String)>"
    "push \"hit.au\""->"virtualinvoke <java.applet.Applet: java.applet.AudioClip getAudioClip(java.net.URL,java.lang.String)>";
    "fieldput <pool: java.applet.AudioClip hitSound>"
    "virtualinvoke <java.applet.Applet: java.applet.AudioClip getAudioClip(java.net.URL,java.lang.String)>"->"fieldput <pool: java.applet.AudioClip hitSound>";
    "fieldput <pool: java.applet.AudioClip hitSound>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>";
    "push \"drop.au\""
    "virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>"->"push \"drop.au\"";
    "push \"drop.au\""->"virtualinvoke <java.applet.Applet: java.applet.AudioClip getAudioClip(java.net.URL,java.lang.String)>";
    "fieldput <pool: java.applet.AudioClip dropSound>"
    "virtualinvoke <java.applet.Applet: java.applet.AudioClip getAudioClip(java.net.URL,java.lang.String)>"->"fieldput <pool: java.applet.AudioClip dropSound>";
    "fieldput <pool: java.applet.AudioClip dropSound>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"
    "load.r r0"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
    "push \"table.gif\""
    "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"push \"table.gif\"";
    "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"
    "push \"table.gif\""->"virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>";
    "fieldput <pool: java.awt.Image tableImage>"
    "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"fieldput <pool: java.awt.Image tableImage>";
    "fieldput <pool: java.awt.Image tableImage>"->"load.r r0";
    "new java.awt.MediaTracker"
    "load.r r0"->"new java.awt.MediaTracker";
    "new java.awt.MediaTracker"->"dup1.r";
    "dup1.r"->"load.r r0";
    "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"
    "load.r r0"->"specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>";
    "fieldput <pool: java.awt.MediaTracker tracker>"
    "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"->"fieldput <pool: java.awt.MediaTracker tracker>";
    "fieldput <pool: java.awt.MediaTracker tracker>"->"load.r r0";
    "fieldget <pool: java.awt.MediaTracker tracker>"
    "load.r r0"->"fieldget <pool: java.awt.MediaTracker tracker>";
    "fieldget <pool: java.awt.MediaTracker tracker>"->"load.r r0";
    "fieldget <pool: java.awt.Image tableImage>"
    "load.r r0"->"fieldget <pool: java.awt.Image tableImage>";
    "fieldget <pool: java.awt.Image tableImage>"->"push 0";
    "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"
    "push 0"->"virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>";
    "goto load.r r0"
    "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "new Sphere"
    "load.r r0"->"new Sphere";
    "new Sphere"->"dup1.r";
    "push 9.0"
    "dup1.r"->"push 9.0";
    "push 32.0"
    "push 9.0"->"push 32.0";
    "specialinvoke <Sphere: void <init>(double,double)>"
    "push 32.0"->"specialinvoke <Sphere: void <init>(double,double)>";
    "fieldput <pool: Sphere sphere>"
    "specialinvoke <Sphere: void <init>(double,double)>"->"fieldput <pool: Sphere sphere>";
    "fieldput <pool: Sphere sphere>"->"load.r r0";
    "push null"
    "load.r r0"->"push null";
    "fieldput <pool: java.io.InputStream iss>"
    "push null"->"fieldput <pool: java.io.InputStream iss>";
    "fieldput <pool: java.io.InputStream iss>"->"load.r r0";
    "new java.net.URL"
    "load.r r0"->"new java.net.URL";
    "new java.net.URL"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
    "push \"bd.fsu\""
    "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"push \"bd.fsu\"";
    "specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>"
    "push \"bd.fsu\""->"specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>";
    "virtualinvoke <java.net.URL: java.io.InputStream openStream()>"
    "specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>"->"virtualinvoke <java.net.URL: java.io.InputStream openStream()>";
    "virtualinvoke <java.net.URL: java.io.InputStream openStream()>"->"fieldput <pool: java.io.InputStream iss>";
    "fieldput <pool: java.io.InputStream iss>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "virtualinvoke <pool: void gameInit()>"
    "load.r r0"->"virtualinvoke <pool: void gameInit()>";
    "virtualinvoke <pool: void gameInit()>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <pool: boolean loaded>"
    "push 0"->"fieldput <pool: boolean loaded>";
    "return"
    "fieldput <pool: boolean loaded>"->"return";
    "virtualinvoke <java.lang.Throwable: void printStackTrace()>"
    "virtualinvoke <java.net.URL: java.io.InputStream openStream()>"->"virtualinvoke <java.lang.Throwable: void printStackTrace()>";
    "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"->"store.r r1";
    "staticget <java.lang.System: java.io.PrintStream out>"
    "store.r r1"->"staticget <java.lang.System: java.io.PrintStream out>";
    "staticget <java.lang.System: java.io.PrintStream out>"->"load.r r1";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.Object)>"
    "load.r r1"->"virtualinvoke <java.io.PrintStream: void println(java.lang.Object)>";
    "staticget <poolball: byte[] shade>"
    "ifcmplt.i staticget <poolball: byte[] shade>"->"staticget <poolball: byte[] shade>";
    "staticget <poolball: byte[] shade>"->"load.i i27";
    "arrayread.b"
    "load.i i27"->"arrayread.b";
    "arrayread.b"->"push 1";
    "ifcmpne.b load.r r1"
    "push 1"->"ifcmpne.b load.r r1";
    "ifcmpne.b load.r r1"->"load.r r1";
    "load.r r1"->"load.i i27";
    "push -16777216"
    "load.i i27"->"push -16777216";
    "arraywrite.i"
    "push -16777216"->"arraywrite.i";
    "goto inc.i i27 1"
    "arraywrite.i"->"goto inc.i i27 1";
    "inc.i i27 1"
    "goto inc.i i27 1"->"inc.i i27 1";
    "ifcmpne.b load.r r1"->"load.r r1";
    "load.r r1"->"load.i i27";
    "load.i i27"->"push 0";
    "push 0"->"arraywrite.i";
    "ifcmple.i load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <pool: poolball[] balls>";
    "fieldget <pool: poolball[] balls>"->"load.i r1";
    "arrayread.r"
    "load.i r1"->"arrayread.r";
    "arrayread.r"->"load.i r1";
    "i2b"
    "load.i r1"->"i2b";
    "fieldput <poolball: byte num>"
    "i2b"->"fieldput <poolball: byte num>";
    "fieldput <poolball: byte num>"->"load.r r0";
    "load.r r0"->"fieldget <pool: poolball[] balls>";
    "fieldget <pool: poolball[] balls>"->"load.i r1";
    "load.i r1"->"arrayread.r";
    "arrayread.r"->"new java.awt.image.MemoryImageSource";
    "new java.awt.image.MemoryImageSource"->"dup1.r";
    "push 18"
    "dup1.r"->"push 18";
    "push 18"->"push 18";
    "push 18"->"load.r r0";
    "load.r r0"->"fieldget <pool: poolball[] balls>";
    "fieldget <pool: poolball[] balls>"->"load.i r1";
    "load.i r1"->"arrayread.r";
    "fieldget <poolball: int[] picData>"
    "arrayread.r"->"fieldget <poolball: int[] picData>";
    "fieldget <poolball: int[] picData>"->"push 0";
    "push 0"->"push 18";
    "push 18"->"specialinvoke <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>";
    "fieldput <poolball: java.awt.image.MemoryImageSource source>"
    "specialinvoke <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>"->"fieldput <poolball: java.awt.image.MemoryImageSource source>";
    "fieldput <poolball: java.awt.image.MemoryImageSource source>"->"load.r r0";
    "load.r r0"->"fieldget <pool: poolball[] balls>";
    "fieldget <pool: poolball[] balls>"->"load.i r1";
    "load.i r1"->"arrayread.r";
    "fieldget <poolball: java.awt.image.MemoryImageSource source>"
    "arrayread.r"->"fieldget <poolball: java.awt.image.MemoryImageSource source>";
    "fieldget <poolball: java.awt.image.MemoryImageSource source>"->"push 1";
    "virtualinvoke <java.awt.image.MemoryImageSource: void setAnimated(boolean)>"
    "push 1"->"virtualinvoke <java.awt.image.MemoryImageSource: void setAnimated(boolean)>";
    "virtualinvoke <java.awt.image.MemoryImageSource: void setAnimated(boolean)>"->"load.r r0";
    "load.r r0"->"fieldget <pool: poolball[] balls>";
    "fieldget <pool: poolball[] balls>"->"load.i r1";
    "load.i r1"->"arrayread.r";
    "arrayread.r"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <pool: poolball[] balls>";
    "fieldget <pool: poolball[] balls>"->"load.i r1";
    "load.i r1"->"arrayread.r";
    "arrayread.r"->"fieldget <poolball: java.awt.image.MemoryImageSource source>";
    "fieldget <poolball: java.awt.image.MemoryImageSource source>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>";
    "fieldput <poolball: java.awt.Image bd>"
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>"->"fieldput <poolball: java.awt.Image bd>";
    "inc.i r1 1"
    "fieldput <poolball: java.awt.Image bd>"->"inc.i r1 1";
    "staticget <poolball: byte[] D18>"
    "ifcmplt.i staticget <poolball: byte[] D18>"->"staticget <poolball: byte[] D18>";
    "staticget <poolball: byte[] D18>"->"load.i r1";
    "load.i r1"->"arrayread.b";
    "ifne push 165"
    "arrayread.b"->"ifne push 165";
    "goto inc.i r1 1"
    "ifne push 165"->"goto inc.i r1 1";
    "goto inc.i r1 1"->"inc.i r1 1";
    "push 165"
    "ifne push 165"->"push 165";
    "push 9"
    "push 165"->"push 9";
    "push 9"->"load.i r1";
    "load.i r1"->"push 18";
    "div.i"
    "push 18"->"div.i";
    "div.i"->"push 9";
    "sub.i"
    "push 9"->"sub.i";
    "dup1.i"
    "sub.i"->"dup1.i";
    "mul.i"
    "dup1.i"->"mul.i";
    "mul.i"->"load.i r1";
    "load.i r1"->"push 18";
    "rem.i"
    "push 18"->"rem.i";
    "rem.i"->"push 9";
    "push 9"->"sub.i";
    "sub.i"->"load.i r1";
    "load.i r1"->"push 18";
    "push 18"->"rem.i";
    "rem.i"->"push 9";
    "push 9"->"sub.i";
    "sub.i"->"mul.i";
    "add.i"
    "mul.i"->"add.i";
    "i2d"
    "add.i"->"i2d";
    "staticinvoke <java.lang.Math: double sqrt(double)>"
    "i2d"->"staticinvoke <java.lang.Math: double sqrt(double)>";
    "d2i"
    "staticinvoke <java.lang.Math: double sqrt(double)>"->"d2i";
    "d2i"->"sub.i";
    "push 10"
    "sub.i"->"push 10";
    "push 10"->"mul.i";
    "mul.i"->"add.i";
    "add.i"->"store.i i27";
    "store.i i27"->"load.r r0";
    "load.r r0"->"fieldget <pool: cueball cue>";
    "fieldget <pool: cueball cue>"->"fieldget <poolball: int[] picData>";
    "fieldget <poolball: int[] picData>"->"load.i r1";
    "load.i r1"->"push -16777216";
    "push -16777216"->"load.i i27";
    "load.i i27"->"push 16";
    "shl.i"
    "push 16"->"shl.i";
    "or.i"
    "shl.i"->"or.i";
    "or.i"->"load.i i27";
    "push 8"
    "load.i i27"->"push 8";
    "push 8"->"shl.i";
    "shl.i"->"or.i";
    "or.i"->"load.i i27";
    "load.i i27"->"or.i";
    "or.i"->"arraywrite.i";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <pool: poolball[] balls>";
    "fieldget <pool: poolball[] balls>"->"load.i r1";
    "new poolball"
    "load.i r1"->"new poolball";
    "new poolball"->"dup1.r";
    "specialinvoke <poolball: void <init>()>"
    "dup1.r"->"specialinvoke <poolball: void <init>()>";
    "specialinvoke <poolball: void <init>()>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <pool: poolball[] balls>";
    "fieldget <pool: poolball[] balls>"->"load.i r1";
    "load.i r1"->"arrayread.r";
    "arrayread.r"->"load.r r0";
    "fieldget <pool: int[] ballcolors>"
    "load.r r0"->"fieldget <pool: int[] ballcolors>";
    "fieldget <pool: int[] ballcolors>"->"load.i r1";
    "arrayread.i"
    "load.i r1"->"arrayread.i";
    "fieldput <poolball: int color>"
    "arrayread.i"->"fieldput <poolball: int color>";
    "fieldput <poolball: int color>"->"load.r r0";
    "load.r r0"->"fieldget <pool: poolball[] balls>";
    "fieldget <pool: poolball[] balls>"->"load.i r1";
    "load.i r1"->"arrayread.r";
    "arrayread.r"->"push 0";
    "fieldput <poolball: int angle>"
    "push 0"->"fieldput <poolball: int angle>";
    "fieldput <poolball: int angle>"->"inc.i r1 1";
}
