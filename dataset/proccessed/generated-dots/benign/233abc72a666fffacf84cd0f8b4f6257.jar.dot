digraph "" {
    "r0 := @this: LaserBeamer"
    "load.r r0"
    "r0 := @this: LaserBeamer"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"bg-color\""
    "load.r r0"->"push \"bg-color\"";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"
    "push \"bg-color\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "fieldput <LaserBeamer: java.lang.String bg_color>"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <LaserBeamer: java.lang.String bg_color>";
    "fieldput <LaserBeamer: java.lang.String bg_color>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"banner\""
    "load.r r0"->"push \"banner\"";
    "push \"banner\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "fieldput <LaserBeamer: java.lang.String banner>"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <LaserBeamer: java.lang.String banner>";
    "fieldput <LaserBeamer: java.lang.String banner>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"banner-x-pos\""
    "load.r r0"->"push \"banner-x-pos\"";
    "push \"banner-x-pos\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <LaserBeamer: int banner_x_pos>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <LaserBeamer: int banner_x_pos>";
    "fieldput <LaserBeamer: int banner_x_pos>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"banner-y-pos\""
    "load.r r0"->"push \"banner-y-pos\"";
    "push \"banner-y-pos\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <LaserBeamer: int banner_y_pos>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <LaserBeamer: int banner_y_pos>";
    "fieldput <LaserBeamer: int banner_y_pos>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"banner-top-os\""
    "load.r r0"->"push \"banner-top-os\"";
    "push \"banner-top-os\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <LaserBeamer: int banner_top_os>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <LaserBeamer: int banner_top_os>";
    "fieldput <LaserBeamer: int banner_top_os>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"banner-bottom-os\""
    "load.r r0"->"push \"banner-bottom-os\"";
    "push \"banner-bottom-os\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <LaserBeamer: int banner_bottom_os>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <LaserBeamer: int banner_bottom_os>";
    "fieldput <LaserBeamer: int banner_bottom_os>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"banner-left-os\""
    "load.r r0"->"push \"banner-left-os\"";
    "push \"banner-left-os\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <LaserBeamer: int banner_left_os>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <LaserBeamer: int banner_left_os>";
    "fieldput <LaserBeamer: int banner_left_os>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"banner-right-os\""
    "load.r r0"->"push \"banner-right-os\"";
    "push \"banner-right-os\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <LaserBeamer: int banner_right_os>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <LaserBeamer: int banner_right_os>";
    "fieldput <LaserBeamer: int banner_right_os>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"laser-origin-x-pos\""
    "load.r r0"->"push \"laser-origin-x-pos\"";
    "push \"laser-origin-x-pos\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <LaserBeamer: int laser_origin_x_pos>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <LaserBeamer: int laser_origin_x_pos>";
    "fieldput <LaserBeamer: int laser_origin_x_pos>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"laser-origin-y-pos\""
    "load.r r0"->"push \"laser-origin-y-pos\"";
    "push \"laser-origin-y-pos\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <LaserBeamer: int laser_origin_y_pos>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <LaserBeamer: int laser_origin_y_pos>";
    "fieldput <LaserBeamer: int laser_origin_y_pos>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"laser-origin-region\""
    "load.r r0"->"push \"laser-origin-region\"";
    "push \"laser-origin-region\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "fieldput <LaserBeamer: java.lang.String laser_origin_region>"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <LaserBeamer: java.lang.String laser_origin_region>";
    "fieldput <LaserBeamer: java.lang.String laser_origin_region>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"laser-origin-type\""
    "load.r r0"->"push \"laser-origin-type\"";
    "push \"laser-origin-type\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "fieldput <LaserBeamer: java.lang.String laser_origin_type>"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <LaserBeamer: java.lang.String laser_origin_type>";
    "fieldput <LaserBeamer: java.lang.String laser_origin_type>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"laser-x-step\""
    "load.r r0"->"push \"laser-x-step\"";
    "push \"laser-x-step\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <LaserBeamer: int laser_x_step>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <LaserBeamer: int laser_x_step>";
    "fieldput <LaserBeamer: int laser_x_step>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"laser-y-step\""
    "load.r r0"->"push \"laser-y-step\"";
    "push \"laser-y-step\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <LaserBeamer: int laser_y_step>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <LaserBeamer: int laser_y_step>";
    "fieldput <LaserBeamer: int laser_y_step>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"laser-type\""
    "load.r r0"->"push \"laser-type\"";
    "push \"laser-type\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "fieldput <LaserBeamer: java.lang.String laser_type>"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <LaserBeamer: java.lang.String laser_type>";
    "fieldput <LaserBeamer: java.lang.String laser_type>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"laser-beam-color\""
    "load.r r0"->"push \"laser-beam-color\"";
    "push \"laser-beam-color\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "fieldput <LaserBeamer: java.lang.String laser_beam_color>"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <LaserBeamer: java.lang.String laser_beam_color>";
    "fieldput <LaserBeamer: java.lang.String laser_beam_color>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"laser-spot-color\""
    "load.r r0"->"push \"laser-spot-color\"";
    "push \"laser-spot-color\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "fieldput <LaserBeamer: java.lang.String laser_spot_color>"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <LaserBeamer: java.lang.String laser_spot_color>";
    "fieldput <LaserBeamer: java.lang.String laser_spot_color>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"laser-beam-spot-aspekt\""
    "load.r r0"->"push \"laser-beam-spot-aspekt\"";
    "push \"laser-beam-spot-aspekt\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>";
    "virtualinvoke <java.lang.Float: float floatValue()>"
    "staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Float: float floatValue()>";
    "fieldput <LaserBeamer: float laser_beam_spot_aspekt>"
    "virtualinvoke <java.lang.Float: float floatValue()>"->"fieldput <LaserBeamer: float laser_beam_spot_aspekt>";
    "fieldput <LaserBeamer: float laser_beam_spot_aspekt>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"laser-beam-hue-increment\""
    "load.r r0"->"push \"laser-beam-hue-increment\"";
    "push \"laser-beam-hue-increment\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>";
    "staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Float: float floatValue()>";
    "fieldput <LaserBeamer: float laser_beam_hue_increment>"
    "virtualinvoke <java.lang.Float: float floatValue()>"->"fieldput <LaserBeamer: float laser_beam_hue_increment>";
    "fieldput <LaserBeamer: float laser_beam_hue_increment>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"thread-sleep\""
    "load.r r0"->"push \"thread-sleep\"";
    "push \"thread-sleep\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <LaserBeamer: int thread_sleep>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <LaserBeamer: int thread_sleep>";
    "fieldput <LaserBeamer: int thread_sleep>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"sequence-sleep\""
    "load.r r0"->"push \"sequence-sleep\"";
    "push \"sequence-sleep\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <LaserBeamer: int sequence_sleep>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <LaserBeamer: int sequence_sleep>";
    "fieldput <LaserBeamer: int sequence_sleep>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"link-url\""
    "load.r r0"->"push \"link-url\"";
    "push \"link-url\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "fieldput <LaserBeamer: java.lang.String URLName>"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <LaserBeamer: java.lang.String URLName>";
    "fieldput <LaserBeamer: java.lang.String URLName>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"link-target-frame\""
    "load.r r0"->"push \"link-target-frame\"";
    "push \"link-target-frame\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "fieldput <LaserBeamer: java.lang.String frame>"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <LaserBeamer: java.lang.String frame>";
    "fieldput <LaserBeamer: java.lang.String frame>"->"load.r r0";
    "fieldget <LaserBeamer: java.lang.String URLName>"
    "load.r r0"->"fieldget <LaserBeamer: java.lang.String URLName>";
    "ifnonnull load.r r0"
    "fieldget <LaserBeamer: java.lang.String URLName>"->"ifnonnull load.r r0";
    "ifnonnull load.r r0"->"load.r r0";
    "push \"http://www.w-4.de/~hellmann/\""
    "load.r r0"->"push \"http://www.w-4.de/~hellmann/\"";
    "push \"http://www.w-4.de/~hellmann/\""->"fieldput <LaserBeamer: java.lang.String URLName>";
    "fieldput <LaserBeamer: java.lang.String URLName>"->"load.r r0";
    "fieldget <LaserBeamer: java.lang.String frame>"
    "load.r r0"->"fieldget <LaserBeamer: java.lang.String frame>";
    "fieldget <LaserBeamer: java.lang.String frame>"->"ifnonnull load.r r0";
    "ifnonnull load.r r0"->"load.r r0";
    "push \"_top\""
    "load.r r0"->"push \"_top\"";
    "push \"_top\""->"fieldput <LaserBeamer: java.lang.String frame>";
    "fieldput <LaserBeamer: java.lang.String frame>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"link-enable\""
    "load.r r0"->"push \"link-enable\"";
    "push \"link-enable\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <LaserBeamer: int link_enable>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <LaserBeamer: int link_enable>";
    "new java.util.StringTokenizer"
    "fieldput <LaserBeamer: int link_enable>"->"new java.util.StringTokenizer";
    "store.r i0"
    "new java.util.StringTokenizer"->"store.r i0";
    "load.r i0"
    "store.r i0"->"load.r i0";
    "load.r i0"->"load.r r0";
    "fieldget <LaserBeamer: java.lang.String laser_origin_region>"
    "load.r r0"->"fieldget <LaserBeamer: java.lang.String laser_origin_region>";
    "push \",\""
    "fieldget <LaserBeamer: java.lang.String laser_origin_region>"->"push \",\"";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"
    "push \",\""->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"load.r r0";
    "load.r r0"->"load.r i0";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"
    "load.r i0"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <LaserBeamer: int laser_origin_region_x>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <LaserBeamer: int laser_origin_region_x>";
    "fieldput <LaserBeamer: int laser_origin_region_x>"->"load.r r0";
    "load.r r0"->"load.r i0";
    "load.r i0"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <LaserBeamer: int laser_origin_region_y>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <LaserBeamer: int laser_origin_region_y>";
    "fieldput <LaserBeamer: int laser_origin_region_y>"->"load.r r0";
    "load.r r0"->"load.r i0";
    "load.r i0"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <LaserBeamer: int laser_origin_region_width>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <LaserBeamer: int laser_origin_region_width>";
    "fieldput <LaserBeamer: int laser_origin_region_width>"->"load.r r0";
    "load.r r0"->"load.r i0";
    "load.r i0"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <LaserBeamer: int laser_origin_region_height>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <LaserBeamer: int laser_origin_region_height>";
    "fieldput <LaserBeamer: int laser_origin_region_height>"->"new java.util.StringTokenizer";
    "new java.util.StringTokenizer"->"store.r i0";
    "store.r i0"->"load.r i0";
    "load.r i0"->"load.r r0";
    "fieldget <LaserBeamer: java.lang.String bg_color>"
    "load.r r0"->"fieldget <LaserBeamer: java.lang.String bg_color>";
    "fieldget <LaserBeamer: java.lang.String bg_color>"->"push \",\"";
    "push \",\""->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"load.r r0";
    "new java.awt.Color"
    "load.r r0"->"new java.awt.Color";
    "dup1.r"
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"load.r i0";
    "load.r i0"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"load.r i0";
    "load.r i0"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"load.r i0";
    "load.r i0"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "fieldput <LaserBeamer: java.awt.Color bgCol>"
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <LaserBeamer: java.awt.Color bgCol>";
    "fieldput <LaserBeamer: java.awt.Color bgCol>"->"new java.util.StringTokenizer";
    "store.r $r46"
    "new java.util.StringTokenizer"->"store.r $r46";
    "load.r $r46"
    "store.r $r46"->"load.r $r46";
    "load.r $r46"->"load.r r0";
    "fieldget <LaserBeamer: java.lang.String laser_beam_color>"
    "load.r r0"->"fieldget <LaserBeamer: java.lang.String laser_beam_color>";
    "fieldget <LaserBeamer: java.lang.String laser_beam_color>"->"push \",\"";
    "push \",\""->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"load.r r0";
    "load.r r0"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"load.r $r46";
    "load.r $r46"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "store.i i0"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"store.i i0";
    "load.i i0"
    "store.i i0"->"load.i i0";
    "load.i i0"->"load.r $r46";
    "load.r $r46"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "store.i i1"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"store.i i1";
    "load.i i1"
    "store.i i1"->"load.i i1";
    "load.i i1"->"load.r $r46";
    "load.r $r46"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "store.i $r46"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"store.i $r46";
    "load.i $r46"
    "store.i $r46"->"load.i $r46";
    "load.i $r46"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "fieldput <LaserBeamer: java.awt.Color laserColBeam>"
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <LaserBeamer: java.awt.Color laserColBeam>";
    "fieldput <LaserBeamer: java.awt.Color laserColBeam>"->"load.r r0";
    "load.r r0"->"load.i i0";
    "load.i i0"->"load.i i1";
    "load.i i1"->"load.i $r46";
    "push null"
    "load.i $r46"->"push null";
    "staticinvoke <java.awt.Color: float[] RGBtoHSB(int,int,int,float[])>"
    "push null"->"staticinvoke <java.awt.Color: float[] RGBtoHSB(int,int,int,float[])>";
    "fieldput <LaserBeamer: float[] hsbvals>"
    "staticinvoke <java.awt.Color: float[] RGBtoHSB(int,int,int,float[])>"->"fieldput <LaserBeamer: float[] hsbvals>";
    "fieldput <LaserBeamer: float[] hsbvals>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <LaserBeamer: float[] hsbvals>"
    "load.r r0"->"fieldget <LaserBeamer: float[] hsbvals>";
    "push 0"
    "fieldget <LaserBeamer: float[] hsbvals>"->"push 0";
    "arrayread.f"
    "push 0"->"arrayread.f";
    "fieldput <LaserBeamer: float hueBeam>"
    "arrayread.f"->"fieldput <LaserBeamer: float hueBeam>";
    "fieldput <LaserBeamer: float hueBeam>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <LaserBeamer: float[] hsbvals>";
    "push 1"
    "fieldget <LaserBeamer: float[] hsbvals>"->"push 1";
    "push 1"->"arrayread.f";
    "fieldput <LaserBeamer: float satBeam>"
    "arrayread.f"->"fieldput <LaserBeamer: float satBeam>";
    "fieldput <LaserBeamer: float satBeam>"->"new java.util.StringTokenizer";
    "new java.util.StringTokenizer"->"store.r $r46";
    "store.r $r46"->"load.r $r46";
    "load.r $r46"->"load.r r0";
    "fieldget <LaserBeamer: java.lang.String laser_spot_color>"
    "load.r r0"->"fieldget <LaserBeamer: java.lang.String laser_spot_color>";
    "fieldget <LaserBeamer: java.lang.String laser_spot_color>"->"push \",\"";
    "push \",\""->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"load.r $r46";
    "load.r $r46"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"store.i i0";
    "store.i i0"->"load.r $r46";
    "load.r $r46"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"store.i i1";
    "store.i i1"->"load.r $r46";
    "load.r $r46"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"store.i $r46";
    "store.i $r46"->"load.i i0";
    "push -1"
    "load.i i0"->"push -1";
    "ifcmpne.i load.r r0"
    "push -1"->"ifcmpne.i load.r r0";
    "ifcmpne.i load.r r0"->"load.i i1";
    "load.i i1"->"push -1";
    "push -1"->"ifcmpne.i load.r r0";
    "ifcmpne.i load.r r0"->"load.i $r46";
    "load.i $r46"->"push -1";
    "push -1"->"ifcmpne.i load.r r0";
    "ifcmpne.i load.r r0"->"load.r r0";
    "load.r r0"->"push 1";
    "fieldput <LaserBeamer: boolean laserSpotColorAuto>"
    "push 1"->"fieldput <LaserBeamer: boolean laserSpotColorAuto>";
    "goto load.r r0"
    "fieldput <LaserBeamer: boolean laserSpotColorAuto>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"dup1.r";
    "fieldget <java.awt.Dimension: int width>"
    "dup1.r"->"fieldget <java.awt.Dimension: int width>";
    "fieldget <java.awt.Dimension: int width>"->"store.i i0";
    "fieldget <java.awt.Dimension: int height>"
    "store.i i0"->"fieldget <java.awt.Dimension: int height>";
    "fieldget <java.awt.Dimension: int height>"->"store.i i1";
    "new java.awt.Dimension"
    "store.i i1"->"new java.awt.Dimension";
    "new java.awt.Dimension"->"dup1.r";
    "dup1.r"->"load.i i0";
    "load.i i0"->"load.i i1";
    "specialinvoke <java.awt.Dimension: void <init>(int,int)>"
    "load.i i1"->"specialinvoke <java.awt.Dimension: void <init>(int,int)>";
    "fieldput <LaserBeamer: java.awt.Dimension m_dimImage>"
    "specialinvoke <java.awt.Dimension: void <init>(int,int)>"->"fieldput <LaserBeamer: java.awt.Dimension m_dimImage>";
    "fieldput <LaserBeamer: java.awt.Dimension m_dimImage>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.i i0";
    "load.i i0"->"load.i i1";
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"
    "load.i i1"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
    "fieldput <LaserBeamer: java.awt.Image m_image>"
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <LaserBeamer: java.awt.Image m_image>";
    "fieldput <LaserBeamer: java.awt.Image m_image>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <LaserBeamer: java.awt.Image m_image>"
    "load.r r0"->"fieldget <LaserBeamer: java.awt.Image m_image>";
    "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"
    "fieldget <LaserBeamer: java.awt.Image m_image>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
    "fieldput <LaserBeamer: java.awt.Graphics g>"
    "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <LaserBeamer: java.awt.Graphics g>";
    "fieldput <LaserBeamer: java.awt.Graphics g>"->"load.r r0";
    "new java.awt.MediaTracker"
    "load.r r0"->"new java.awt.MediaTracker";
    "new java.awt.MediaTracker"->"dup1.r";
    "dup1.r"->"load.r r0";
    "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"
    "load.r r0"->"specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>";
    "fieldput <LaserBeamer: java.awt.MediaTracker tracker>"
    "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"->"fieldput <LaserBeamer: java.awt.MediaTracker tracker>";
    "fieldput <LaserBeamer: java.awt.MediaTracker tracker>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"
    "load.r r0"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
    "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"load.r r0";
    "fieldget <LaserBeamer: java.lang.String banner>"
    "load.r r0"->"fieldget <LaserBeamer: java.lang.String banner>";
    "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"
    "fieldget <LaserBeamer: java.lang.String banner>"->"virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>";
    "fieldput <LaserBeamer: java.awt.Image Banner>"
    "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"fieldput <LaserBeamer: java.awt.Image Banner>";
    "fieldput <LaserBeamer: java.awt.Image Banner>"->"load.r r0";
    "fieldget <LaserBeamer: java.awt.MediaTracker tracker>"
    "load.r r0"->"fieldget <LaserBeamer: java.awt.MediaTracker tracker>";
    "fieldget <LaserBeamer: java.awt.MediaTracker tracker>"->"load.r r0";
    "fieldget <LaserBeamer: java.awt.Image Banner>"
    "load.r r0"->"fieldget <LaserBeamer: java.awt.Image Banner>";
    "push 2"
    "fieldget <LaserBeamer: java.awt.Image Banner>"->"push 2";
    "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"
    "push 2"->"virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>";
    "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"width\""
    "load.r r0"->"push \"width\"";
    "push \"width\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <LaserBeamer: int AppletWidth>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <LaserBeamer: int AppletWidth>";
    "fieldput <LaserBeamer: int AppletWidth>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"height\""
    "load.r r0"->"push \"height\"";
    "push \"height\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <LaserBeamer: int AppletHeight>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <LaserBeamer: int AppletHeight>";
    "fieldput <LaserBeamer: int AppletHeight>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <LaserBeamer: int banner_x_pos>"
    "load.r r0"->"fieldget <LaserBeamer: int banner_x_pos>";
    "fieldget <LaserBeamer: int banner_x_pos>"->"load.r r0";
    "fieldget <LaserBeamer: int banner_left_os>"
    "load.r r0"->"fieldget <LaserBeamer: int banner_left_os>";
    "add.i"
    "fieldget <LaserBeamer: int banner_left_os>"->"add.i";
    "fieldput <LaserBeamer: int LaserXPos>"
    "add.i"->"fieldput <LaserBeamer: int LaserXPos>";
    "fieldput <LaserBeamer: int LaserXPos>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <LaserBeamer: int LaserXWay>"
    "push 0"->"fieldput <LaserBeamer: int LaserXWay>";
    "fieldput <LaserBeamer: int LaserXWay>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <LaserBeamer: int sequence_sleep>"
    "load.r r0"->"fieldget <LaserBeamer: int sequence_sleep>";
    "push 100"
    "fieldget <LaserBeamer: int sequence_sleep>"->"push 100";
    "mul.i"
    "push 100"->"mul.i";
    "mul.i"->"load.r r0";
    "fieldget <LaserBeamer: int thread_sleep>"
    "load.r r0"->"fieldget <LaserBeamer: int thread_sleep>";
    "div.i"
    "fieldget <LaserBeamer: int thread_sleep>"->"div.i";
    "fieldput <LaserBeamer: int idle_loops>"
    "div.i"->"fieldput <LaserBeamer: int idle_loops>";
    "fieldput <LaserBeamer: int idle_loops>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <LaserBeamer: int idle_loops>"
    "load.r r0"->"fieldget <LaserBeamer: int idle_loops>";
    "fieldput <LaserBeamer: int sleep>"
    "fieldget <LaserBeamer: int idle_loops>"->"fieldput <LaserBeamer: int sleep>";
    "fieldput <LaserBeamer: int sleep>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <LaserBeamer: java.awt.Color bgCol>"
    "load.r r0"->"fieldget <LaserBeamer: java.awt.Color bgCol>";
    "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"
    "fieldget <LaserBeamer: java.awt.Color bgCol>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
    "return"
    "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"return";
    "ifcmpne.i load.r r0"->"load.r r0";
    "load.r r0"->"push 0";
    "push 0"->"fieldput <LaserBeamer: boolean laserSpotColorAuto>";
    "fieldput <LaserBeamer: boolean laserSpotColorAuto>"->"load.r r0";
    "load.r r0"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"load.i i0";
    "load.i i0"->"load.i i1";
    "load.i i1"->"load.i $r46";
    "load.i $r46"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "fieldput <LaserBeamer: java.awt.Color laserColSpot>"
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <LaserBeamer: java.awt.Color laserColSpot>";
}
