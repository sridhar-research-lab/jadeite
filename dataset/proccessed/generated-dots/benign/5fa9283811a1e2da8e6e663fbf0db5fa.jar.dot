digraph "" {
    "r0 := @this: maze4d"
    "load.r r0"
    "r0 := @this: maze4d"->"load.r r0";
    "new c"
    "load.r r0"->"new c";
    "dup1.r"
    "new c"->"dup1.r";
    "push 0.0"
    "dup1.r"->"push 0.0";
    "push 0.0"->"push 0.0";
    "push 0.01"
    "push 0.0"->"push 0.01";
    "specialinvoke <c: void <init>(double,double,double)>"
    "push 0.01"->"specialinvoke <c: void <init>(double,double,double)>";
    "fieldput <maze4d: c p>"
    "specialinvoke <c: void <init>(double,double,double)>"->"fieldput <maze4d: c p>";
    "fieldput <maze4d: c p>"->"load.r r0";
    "virtualinvoke <maze4d: void c()>"
    "load.r r0"->"virtualinvoke <maze4d: void c()>";
    "virtualinvoke <maze4d: void c()>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <maze4d: c p>"
    "load.r r0"->"fieldget <maze4d: c p>";
    "fieldget <c: double l>"
    "fieldget <maze4d: c p>"->"fieldget <c: double l>";
    "fieldput <maze4d: double g>"
    "fieldget <c: double l>"->"fieldput <maze4d: double g>";
    "fieldput <maze4d: double g>"->"load.r r0";
    "new r"
    "load.r r0"->"new r";
    "new r"->"dup1.r";
    "specialinvoke <r: void <init>()>"
    "dup1.r"->"specialinvoke <r: void <init>()>";
    "fieldput <maze4d: r j>"
    "specialinvoke <r: void <init>()>"->"fieldput <maze4d: r j>";
    "fieldput <maze4d: r j>"->"load.r r0";
    "new k"
    "load.r r0"->"new k";
    "new k"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <maze4d: c p>";
    "specialinvoke <k: void <init>(c)>"
    "fieldget <maze4d: c p>"->"specialinvoke <k: void <init>(c)>";
    "fieldput <maze4d: k k>"
    "specialinvoke <k: void <init>(c)>"->"fieldput <maze4d: k k>";
    "fieldput <maze4d: k k>"->"load.r r0";
    "virtualinvoke <maze4d: void g()>"
    "load.r r0"->"virtualinvoke <maze4d: void g()>";
    "virtualinvoke <maze4d: void g()>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: java.awt.Rectangle bounds()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Rectangle bounds()>";
    "virtualinvoke <java.awt.Component: java.awt.Rectangle bounds()>"->"dup1.r";
    "fieldget <java.awt.Rectangle: int width>"
    "dup1.r"->"fieldget <java.awt.Rectangle: int width>";
    "store.i $i0"
    "fieldget <java.awt.Rectangle: int width>"->"store.i $i0";
    "store.i $i0"->"load.r r0";
    "load.i $i0"
    "load.r r0"->"load.i $i0";
    "fieldput <maze4d: int t>"
    "load.i $i0"->"fieldput <maze4d: int t>";
    "fieldget <java.awt.Rectangle: int height>"
    "fieldput <maze4d: int t>"->"fieldget <java.awt.Rectangle: int height>";
    "fieldput <maze4d: int u>"
    "fieldget <java.awt.Rectangle: int height>"->"fieldput <maze4d: int u>";
    "fieldput <maze4d: int u>"->"load.r r0";
    "load.r r0"->"fieldget <maze4d: c p>";
    "fieldget <maze4d: c p>"->"load.r r0";
    "fieldget <maze4d: int t>"
    "load.r r0"->"fieldget <maze4d: int t>";
    "fieldget <maze4d: int t>"->"load.r r0";
    "fieldget <maze4d: int u>"
    "load.r r0"->"fieldget <maze4d: int u>";
    "virtualinvoke <c: void p(int,int)>"
    "fieldget <maze4d: int u>"->"virtualinvoke <c: void p(int,int)>";
    "virtualinvoke <c: void p(int,int)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <maze4d: int t>";
    "fieldget <maze4d: int t>"->"load.r r0";
    "load.r r0"->"fieldget <maze4d: int u>";
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"
    "fieldget <maze4d: int u>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
    "fieldput <maze4d: java.awt.Image s>"
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <maze4d: java.awt.Image s>";
    "fieldput <maze4d: java.awt.Image s>"->"load.r r0";
    "staticget <java.awt.Color: java.awt.Color white>"
    "load.r r0"->"staticget <java.awt.Color: java.awt.Color white>";
    "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"
    "staticget <java.awt.Color: java.awt.Color white>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
    "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"load.r r0";
    "virtualinvoke <java.awt.Component: void requestFocus()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: void requestFocus()>";
    "virtualinvoke <java.awt.Component: void requestFocus()>"->"load.r r0";
    "new java.awt.MediaTracker"
    "load.r r0"->"new java.awt.MediaTracker";
    "new java.awt.MediaTracker"->"dup1.r";
    "dup1.r"->"load.r r0";
    "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"
    "load.r r0"->"specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>";
    "fieldput <maze4d: java.awt.MediaTracker dv>"
    "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"->"fieldput <maze4d: java.awt.MediaTracker dv>";
    "fieldput <maze4d: java.awt.MediaTracker dv>"->"load.r r0";
    "new java.util.StringTokenizer"
    "load.r r0"->"new java.util.StringTokenizer";
    "new java.util.StringTokenizer"->"dup1.r";
    "dup1.r"->"load.r r0";
    "push \"imageVect\""
    "load.r r0"->"push \"imageVect\"";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"
    "push \"imageVect\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "push \"+\""
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"push \"+\"";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"
    "push \"+\""->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
    "fieldput <maze4d: java.util.StringTokenizer di>"
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"fieldput <maze4d: java.util.StringTokenizer di>";
    "fieldput <maze4d: java.util.StringTokenizer di>"->"load.r r0";
    "virtualinvoke <maze4d: void k()>"
    "load.r r0"->"virtualinvoke <maze4d: void k()>";
    "push 0"
    "virtualinvoke <maze4d: void k()>"->"push 0";
    "push 0"->"store.i $i0";
    "goto load.i $i0"
    "store.i $i0"->"goto load.i $i0";
    "goto load.i $i0"->"load.i $i0";
    "push 3"
    "load.i $i0"->"push 3";
    "ifcmplt.i load.r r0"
    "push 3"->"ifcmplt.i load.r r0";
    "return"
    "ifcmplt.i load.r r0"->"return";
    "ifcmplt.i load.r r0"->"load.r r0";
    "fieldget <maze4d: l[] dj>"
    "load.r r0"->"fieldget <maze4d: l[] dj>";
    "fieldget <maze4d: l[] dj>"->"load.i $i0";
    "new l"
    "load.i $i0"->"new l";
    "new l"->"dup1.r";
    "specialinvoke <l: void <init>()>"
    "dup1.r"->"specialinvoke <l: void <init>()>";
    "arraywrite.r"
    "specialinvoke <l: void <init>()>"->"arraywrite.r";
    "inc.i $i0 1"
    "arraywrite.r"->"inc.i $i0 1";
}
