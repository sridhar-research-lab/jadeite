digraph "" {
    "r0 := @this: puzzle"
    "load.r r0"
    "r0 := @this: puzzle"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: java.awt.Graphics getGraphics()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Graphics getGraphics()>";
    "fieldput <puzzle: java.awt.Graphics myG>"
    "virtualinvoke <java.awt.Component: java.awt.Graphics getGraphics()>"->"fieldput <puzzle: java.awt.Graphics myG>";
    "fieldput <puzzle: java.awt.Graphics myG>"->"load.r r0";
    "push null"
    "load.r r0"->"push null";
    "fieldput <puzzle: media_checker checker>"
    "push null"->"fieldput <puzzle: media_checker checker>";
    "fieldput <puzzle: media_checker checker>"->"load.r r0";
    "new java.awt.MediaTracker"
    "load.r r0"->"new java.awt.MediaTracker";
    "dup1.r"
    "new java.awt.MediaTracker"->"dup1.r";
    "dup1.r"->"load.r r0";
    "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"
    "load.r r0"->"specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>";
    "fieldput <puzzle: java.awt.MediaTracker tracker>"
    "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"->"fieldput <puzzle: java.awt.MediaTracker tracker>";
    "fieldput <puzzle: java.awt.MediaTracker tracker>"->"load.r r0";
    "new selector"
    "load.r r0"->"new selector";
    "new selector"->"dup1.r";
    "push 0"
    "dup1.r"->"push 0";
    "push 0"->"load.r r0";
    "push 100"
    "load.r r0"->"push 100";
    "push 5"
    "push 100"->"push 5";
    "specialinvoke <selector: void <init>(int,puzzle,int,int)>"
    "push 5"->"specialinvoke <selector: void <init>(int,puzzle,int,int)>";
    "fieldput <puzzle: selector level_indicator>"
    "specialinvoke <selector: void <init>(int,puzzle,int,int)>"->"fieldput <puzzle: selector level_indicator>";
    "fieldput <puzzle: selector level_indicator>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"PREFIX\""
    "load.r r0"->"push \"PREFIX\"";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"
    "push \"PREFIX\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "fieldput <puzzle: java.lang.String image_name>"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <puzzle: java.lang.String image_name>";
    "fieldput <puzzle: java.lang.String image_name>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <puzzle: int start_x>"
    "load.r r0"->"fieldget <puzzle: int start_x>";
    "fieldput <puzzle: int x>"
    "fieldget <puzzle: int start_x>"->"fieldput <puzzle: int x>";
    "fieldput <puzzle: int x>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <puzzle: int start_y>"
    "load.r r0"->"fieldget <puzzle: int start_y>";
    "fieldput <puzzle: int y>"
    "fieldget <puzzle: int start_y>"->"fieldput <puzzle: int y>";
    "fieldput <puzzle: int y>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <puzzle: int i>"
    "push 0"->"fieldput <puzzle: int i>";
    "goto load.r r0"
    "fieldput <puzzle: int i>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "fieldget <puzzle: int i>"
    "load.r r0"->"fieldget <puzzle: int i>";
    "push 15"
    "fieldget <puzzle: int i>"->"push 15";
    "ifcmple.i load.r r0"
    "push 15"->"ifcmple.i load.r r0";
    "ifcmple.i load.r r0"->"load.r r0";
    "new simple_puzzle"
    "load.r r0"->"new simple_puzzle";
    "new simple_puzzle"->"dup1.r";
    "dup1.r"->"push 15";
    "push 15"->"load.r r0";
    "specialinvoke <simple_puzzle: void <init>(int,puzzle)>"
    "load.r r0"->"specialinvoke <simple_puzzle: void <init>(int,puzzle)>";
    "fieldput <puzzle: simple_puzzle simple>"
    "specialinvoke <simple_puzzle: void <init>(int,puzzle)>"->"fieldput <puzzle: simple_puzzle simple>";
    "fieldput <puzzle: simple_puzzle simple>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <puzzle: piece[] pieces>"
    "load.r r0"->"fieldget <puzzle: piece[] pieces>";
    "fieldget <puzzle: piece[] pieces>"->"push 0";
    "arrayread.r"
    "push 0"->"arrayread.r";
    "fieldget <piece: int width>"
    "arrayread.r"->"fieldget <piece: int width>";
    "push 6"
    "fieldget <piece: int width>"->"push 6";
    "mul.i"
    "push 6"->"mul.i";
    "mul.i"->"load.r r0";
    "load.r r0"->"fieldget <puzzle: piece[] pieces>";
    "fieldget <puzzle: piece[] pieces>"->"push 0";
    "push 0"->"arrayread.r";
    "fieldget <piece: int height>"
    "arrayread.r"->"fieldget <piece: int height>";
    "fieldget <piece: int height>"->"push 6";
    "push 6"->"mul.i";
    "virtualinvoke <java.applet.Applet: void resize(int,int)>"
    "mul.i"->"virtualinvoke <java.applet.Applet: void resize(int,int)>";
    "virtualinvoke <java.applet.Applet: void resize(int,int)>"->"load.r r0";
    "new media_checker"
    "load.r r0"->"new media_checker";
    "new media_checker"->"dup1.r";
    "dup1.r"->"load.r r0";
    "fieldget <puzzle: java.awt.Graphics myG>"
    "load.r r0"->"fieldget <puzzle: java.awt.Graphics myG>";
    "fieldget <puzzle: java.awt.Graphics myG>"->"load.r r0";
    "specialinvoke <media_checker: void <init>(java.awt.Graphics,puzzle)>"
    "load.r r0"->"specialinvoke <media_checker: void <init>(java.awt.Graphics,puzzle)>";
    "specialinvoke <media_checker: void <init>(java.awt.Graphics,puzzle)>"->"fieldput <puzzle: media_checker checker>";
    "fieldput <puzzle: media_checker checker>"->"load.r r0";
    "fieldget <puzzle: media_checker checker>"
    "load.r r0"->"fieldget <puzzle: media_checker checker>";
    "virtualinvoke <java.lang.Thread: void start()>"
    "fieldget <puzzle: media_checker checker>"->"virtualinvoke <java.lang.Thread: void start()>";
    "return"
    "virtualinvoke <java.lang.Thread: void start()>"->"return";
    "ifcmple.i load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <puzzle: random_value value_supplier>"
    "load.r r0"->"fieldget <puzzle: random_value value_supplier>";
    "virtualinvoke <random_value: int getRandomValue()>"
    "fieldget <puzzle: random_value value_supplier>"->"virtualinvoke <random_value: int getRandomValue()>";
    "fieldput <puzzle: int cur_val>"
    "virtualinvoke <random_value: int getRandomValue()>"->"fieldput <puzzle: int cur_val>";
    "fieldput <puzzle: int cur_val>"->"load.r r0";
    "fieldget <puzzle: int cur_val>"
    "load.r r0"->"fieldget <puzzle: int cur_val>";
    "push 16"
    "fieldget <puzzle: int cur_val>"->"push 16";
    "ifcmpne.i load.r r0"
    "push 16"->"ifcmpne.i load.r r0";
    "ifcmpne.i load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <puzzle: int i>";
    "fieldput <puzzle: int blank_piece_pos>"
    "fieldget <puzzle: int i>"->"fieldput <puzzle: int blank_piece_pos>";
    "fieldput <puzzle: int blank_piece_pos>"->"load.r r0";
    "load.r r0"->"fieldget <puzzle: piece[] pieces>";
    "fieldget <puzzle: piece[] pieces>"->"load.r r0";
    "load.r r0"->"fieldget <puzzle: int i>";
    "new piece"
    "fieldget <puzzle: int i>"->"new piece";
    "new piece"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <puzzle: int i>";
    "fieldget <puzzle: int i>"->"load.r r0";
    "load.r r0"->"fieldget <puzzle: int cur_val>";
    "fieldget <puzzle: int cur_val>"->"load.r r0";
    "load.r r0"->"fieldget <puzzle: java.awt.Graphics myG>";
    "fieldget <puzzle: java.awt.Graphics myG>"->"load.r r0";
    "fieldget <puzzle: int x>"
    "load.r r0"->"fieldget <puzzle: int x>";
    "fieldget <puzzle: int x>"->"load.r r0";
    "fieldget <puzzle: int y>"
    "load.r r0"->"fieldget <puzzle: int y>";
    "fieldget <puzzle: int y>"->"push null";
    "push null"->"load.r r0";
    "specialinvoke <piece: void <init>(int,int,java.awt.Graphics,int,int,java.awt.Image,puzzle)>"
    "load.r r0"->"specialinvoke <piece: void <init>(int,int,java.awt.Graphics,int,int,java.awt.Image,puzzle)>";
    "arraywrite.r"
    "specialinvoke <piece: void <init>(int,int,java.awt.Graphics,int,int,java.awt.Image,puzzle)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <puzzle: int x>";
    "push 50"
    "fieldget <puzzle: int x>"->"push 50";
    "add.i"
    "push 50"->"add.i";
    "add.i"->"fieldput <puzzle: int x>";
    "fieldput <puzzle: int x>"->"load.r r0";
    "load.r r0"->"fieldget <puzzle: int x>";
    "push 200"
    "fieldget <puzzle: int x>"->"push 200";
    "push 200"->"ifcmple.i load.r r0";
    "ifcmple.i load.r r0"->"load.r r0";
    "load.r r0"->"push 50";
    "push 50"->"fieldput <puzzle: int x>";
    "fieldput <puzzle: int x>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <puzzle: int y>";
    "fieldget <puzzle: int y>"->"push 50";
    "push 50"->"add.i";
    "add.i"->"fieldput <puzzle: int y>";
    "fieldput <puzzle: int y>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <puzzle: int i>";
    "push 1"
    "fieldget <puzzle: int i>"->"push 1";
    "push 1"->"add.i";
    "add.i"->"fieldput <puzzle: int i>";
}
