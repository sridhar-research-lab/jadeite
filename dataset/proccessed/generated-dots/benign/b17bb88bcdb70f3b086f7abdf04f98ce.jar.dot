digraph "" {
    "r0 := @this: TF_Snow"
    "load.r r0"
    "r0 := @this: TF_Snow"->"load.r r0";
    "push \"http://www.fouda.de\""
    "load.r r0"->"push \"http://www.fouda.de\"";
    "fieldput <TF_Snow: java.lang.String copyright_text>"
    "push \"http://www.fouda.de\""->"fieldput <TF_Snow: java.lang.String copyright_text>";
    "fieldput <TF_Snow: java.lang.String copyright_text>"->"load.r r0";
    "push 30"
    "load.r r0"->"push 30";
    "fieldput <TF_Snow: int delay>"
    "push 30"->"fieldput <TF_Snow: int delay>";
    "fieldput <TF_Snow: int delay>"->"load.r r0";
    "new java.awt.Color"
    "load.r r0"->"new java.awt.Color";
    "dup1.r"
    "new java.awt.Color"->"dup1.r";
    "push 0"
    "dup1.r"->"push 0";
    "specialinvoke <java.awt.Color: void <init>(int)>"
    "push 0"->"specialinvoke <java.awt.Color: void <init>(int)>";
    "fieldput <TF_Snow: java.awt.Color bg>"
    "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <TF_Snow: java.awt.Color bg>";
    "fieldput <TF_Snow: java.awt.Color bg>"->"load.r r0";
    "load.r r0"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "push 16777215"
    "dup1.r"->"push 16777215";
    "push 16777215"->"specialinvoke <java.awt.Color: void <init>(int)>";
    "fieldput <TF_Snow: java.awt.Color fg>"
    "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <TF_Snow: java.awt.Color fg>";
    "fieldput <TF_Snow: java.awt.Color fg>"->"load.r r0";
    "push 500"
    "load.r r0"->"push 500";
    "fieldput <TF_Snow: int snow_number>"
    "push 500"->"fieldput <TF_Snow: int snow_number>";
    "fieldput <TF_Snow: int snow_number>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <TF_Snow: int snow_update>"
    "push 0"->"fieldput <TF_Snow: int snow_update>";
    "fieldput <TF_Snow: int snow_update>"->"load.r r0";
    "virtualinvoke <TF_Snow: void getParameters()>"
    "load.r r0"->"virtualinvoke <TF_Snow: void getParameters()>";
    "virtualinvoke <TF_Snow: void getParameters()>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <TF_Snow: java.awt.Color bg>"
    "load.r r0"->"fieldget <TF_Snow: java.awt.Color bg>";
    "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"
    "fieldget <TF_Snow: java.awt.Color bg>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
    "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"load.r r0";
    "new java.awt.MediaTracker"
    "load.r r0"->"new java.awt.MediaTracker";
    "new java.awt.MediaTracker"->"dup1.r";
    "dup1.r"->"load.r r0";
    "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"
    "load.r r0"->"specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>";
    "fieldput <TF_Snow: java.awt.MediaTracker tracker>"
    "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"->"fieldput <TF_Snow: java.awt.MediaTracker tracker>";
    "fieldput <TF_Snow: java.awt.MediaTracker tracker>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
    "fieldget <java.awt.Dimension: int width>"
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int width>";
    "fieldput <TF_Snow: int width>"
    "fieldget <java.awt.Dimension: int width>"->"fieldput <TF_Snow: int width>";
    "fieldput <TF_Snow: int width>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
    "fieldget <java.awt.Dimension: int height>"
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int height>";
    "fieldput <TF_Snow: int height>"
    "fieldget <java.awt.Dimension: int height>"->"fieldput <TF_Snow: int height>";
    "fieldput <TF_Snow: int height>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <TF_Snow: int width>"
    "load.r r0"->"fieldget <TF_Snow: int width>";
    "fieldget <TF_Snow: int width>"->"load.r r0";
    "fieldget <TF_Snow: int height>"
    "load.r r0"->"fieldget <TF_Snow: int height>";
    "mul.i"
    "fieldget <TF_Snow: int height>"->"mul.i";
    "newarray"
    "mul.i"->"newarray";
    "fieldput <TF_Snow: int[] PixelIndex>"
    "newarray"->"fieldput <TF_Snow: int[] PixelIndex>";
    "fieldput <TF_Snow: int[] PixelIndex>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <TF_Snow: int snow_number>"
    "load.r r0"->"fieldget <TF_Snow: int snow_number>";
    "fieldget <TF_Snow: int snow_number>"->"newarray";
    "fieldput <TF_Snow: int[] snow>"
    "newarray"->"fieldput <TF_Snow: int[] snow>";
    "fieldput <TF_Snow: int[] snow>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <TF_Snow: int snow_number>";
    "fieldget <TF_Snow: int snow_number>"->"newarray";
    "fieldput <TF_Snow: int[] old_snow>"
    "newarray"->"fieldput <TF_Snow: int[] old_snow>";
    "fieldput <TF_Snow: int[] old_snow>"->"push 0";
    "store.i i16"
    "push 0"->"store.i i16";
    "goto load.i i16"
    "store.i i16"->"goto load.i i16";
    "load.i i16"
    "goto load.i i16"->"load.i i16";
    "load.i i16"->"load.r r0";
    "load.r r0"->"fieldget <TF_Snow: int snow_number>";
    "ifcmplt.i load.r r0"
    "fieldget <TF_Snow: int snow_number>"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "virtualinvoke <TF_Snow: void SetupImages()>"
    "load.r r0"->"virtualinvoke <TF_Snow: void SetupImages()>";
    "virtualinvoke <TF_Snow: void SetupImages()>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <TF_Snow: int width>";
    "fieldget <TF_Snow: int width>"->"load.r r0";
    "load.r r0"->"fieldget <TF_Snow: int height>";
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"
    "fieldget <TF_Snow: int height>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
    "fieldput <TF_Snow: java.awt.Image im>"
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <TF_Snow: java.awt.Image im>";
    "fieldput <TF_Snow: java.awt.Image im>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <TF_Snow: java.awt.Image im>"
    "load.r r0"->"fieldget <TF_Snow: java.awt.Image im>";
    "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"
    "fieldget <TF_Snow: java.awt.Image im>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
    "fieldput <TF_Snow: java.awt.Graphics os>"
    "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <TF_Snow: java.awt.Graphics os>";
    "staticinvoke <java.lang.System: void gc()>"
    "fieldput <TF_Snow: java.awt.Graphics os>"->"staticinvoke <java.lang.System: void gc()>";
    "return"
    "staticinvoke <java.lang.System: void gc()>"->"return";
    "ifcmplt.i load.r r0"->"load.r r0";
    "fieldget <TF_Snow: int[] snow>"
    "load.r r0"->"fieldget <TF_Snow: int[] snow>";
    "fieldget <TF_Snow: int[] snow>"->"load.i i16";
    "staticinvoke <java.lang.Math: double random()>"
    "load.i i16"->"staticinvoke <java.lang.Math: double random()>";
    "staticinvoke <java.lang.Math: double random()>"->"load.r r0";
    "load.r r0"->"fieldget <TF_Snow: int width>";
    "i2d"
    "fieldget <TF_Snow: int width>"->"i2d";
    "mul.d"
    "i2d"->"mul.d";
    "d2i"
    "mul.d"->"d2i";
    "arraywrite.i"
    "d2i"->"arraywrite.i";
    "arraywrite.i"->"load.r r0";
    "load.r r0"->"fieldget <TF_Snow: int[] snow>";
    "fieldget <TF_Snow: int[] snow>"->"load.i i16";
    "push 1"
    "load.i i16"->"push 1";
    "add.i"
    "push 1"->"add.i";
    "add.i"->"staticinvoke <java.lang.Math: double random()>";
    "staticinvoke <java.lang.Math: double random()>"->"load.r r0";
    "load.r r0"->"fieldget <TF_Snow: int height>";
    "fieldget <TF_Snow: int height>"->"i2d";
    "i2d"->"mul.d";
    "mul.d"->"load.r r0";
    "load.r r0"->"fieldget <TF_Snow: int height>";
    "fieldget <TF_Snow: int height>"->"i2d";
    "sub.d"
    "i2d"->"sub.d";
    "sub.d"->"d2i";
    "d2i"->"arraywrite.i";
    "inc.i i16 2"
    "arraywrite.i"->"inc.i i16 2";
}
