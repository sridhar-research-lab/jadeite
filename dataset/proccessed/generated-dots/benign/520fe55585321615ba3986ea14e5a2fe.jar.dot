digraph "" {
    "r0 := @this: Upscroll"
    "load.r r0"
    "r0 := @this: Upscroll"->"load.r r0";
    "push \"fontStorrelse\""
    "load.r r0"->"push \"fontStorrelse\"";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"
    "push \"fontStorrelse\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "store.r r1"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r1";
    "load.r r1"
    "store.r r1"->"load.r r1";
    "ifnull load.r r0"
    "load.r r1"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r0";
    "load.r r0"->"load.r r1";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"
    "load.r r1"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <Upscroll: int t2>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <Upscroll: int t2>";
    "fieldput <Upscroll: int t2>"->"load.r r0";
    "new java.awt.Font"
    "load.r r0"->"new java.awt.Font";
    "dup1.r"
    "new java.awt.Font"->"dup1.r";
    "push \"Helvetica\""
    "dup1.r"->"push \"Helvetica\"";
    "push 1"
    "push \"Helvetica\""->"push 1";
    "push 1"->"load.r r0";
    "fieldget <Upscroll: int t2>"
    "load.r r0"->"fieldget <Upscroll: int t2>";
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"
    "fieldget <Upscroll: int t2>"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
    "fieldput <Upscroll: java.awt.Font current>"
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"fieldput <Upscroll: java.awt.Font current>";
    "fieldput <Upscroll: java.awt.Font current>"->"load.r r0";
    "push \"antalLinjer\""
    "load.r r0"->"push \"antalLinjer\"";
    "push \"antalLinjer\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r0";
    "load.r r0"->"load.r r1";
    "load.r r1"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <Upscroll: int linjer>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <Upscroll: int linjer>";
    "fieldput <Upscroll: int linjer>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <Upscroll: int linjer>"
    "load.r r0"->"fieldget <Upscroll: int linjer>";
    "newarray"
    "fieldget <Upscroll: int linjer>"->"newarray";
    "fieldput <Upscroll: java.lang.String[] text>"
    "newarray"->"fieldput <Upscroll: java.lang.String[] text>";
    "fieldput <Upscroll: java.lang.String[] text>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <Upscroll: int linjer>";
    "fieldget <Upscroll: int linjer>"->"newarray";
    "fieldput <Upscroll: int[] textX>"
    "newarray"->"fieldput <Upscroll: int[] textX>";
    "push 0"
    "fieldput <Upscroll: int[] textX>"->"push 0";
    "store.i r1"
    "push 0"->"store.i r1";
    "store.i r1"->"push 0";
    "store.i i17"
    "push 0"->"store.i i17";
    "goto load.i i17"
    "store.i i17"->"goto load.i i17";
    "load.i i17"
    "goto load.i i17"->"load.i i17";
    "load.i i17"->"load.r r0";
    "load.r r0"->"fieldget <Upscroll: int linjer>";
    "ifcmplt.i inc.i r1 1"
    "fieldget <Upscroll: int linjer>"->"ifcmplt.i inc.i r1 1";
    "ifcmplt.i inc.i r1 1"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
    "fieldget <java.awt.Dimension: int height>"
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int height>";
    "push 2"
    "fieldget <java.awt.Dimension: int height>"->"push 2";
    "div.i"
    "push 2"->"div.i";
    "fieldput <Upscroll: int midten>"
    "div.i"->"fieldput <Upscroll: int midten>";
    "fieldput <Upscroll: int midten>"->"load.r r0";
    "push \"farveSkift\""
    "load.r r0"->"push \"farveSkift\"";
    "push \"farveSkift\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r1";
    "load.r r1"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "ifne load.r r0"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"ifne load.r r0";
    "ifne load.r r0"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <Upscroll: boolean farveSkift>"
    "push 0"->"fieldput <Upscroll: boolean farveSkift>";
    "fieldput <Upscroll: boolean farveSkift>"->"load.r r0";
    "push \"ScrollFarveRGB\""
    "load.r r0"->"push \"ScrollFarveRGB\"";
    "push \"ScrollFarveRGB\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "store.r i17"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r i17";
    "load.r i17"
    "store.r i17"->"load.r i17";
    "load.r i17"->"ifnull load.r r0";
    "new java.util.StringTokenizer"
    "ifnull load.r r0"->"new java.util.StringTokenizer";
    "new java.util.StringTokenizer"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"load.r i17";
    "push \",\""
    "load.r i17"->"push \",\"";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"
    "push \",\""->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"load.r r0";
    "new java.awt.Color"
    "load.r r0"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"load.r r1";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"store.i i17";
    "store.i i17"->"load.i i17";
    "load.i i17"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "store.i $r9"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"store.i $r9";
    "load.i $r9"
    "store.i $r9"->"load.i $r9";
    "load.i $r9"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"store.i r1";
    "load.i r1"
    "store.i r1"->"load.i r1";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"
    "load.i r1"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "fieldput <Upscroll: java.awt.Color darkBlue>"
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <Upscroll: java.awt.Color darkBlue>";
    "fieldput <Upscroll: java.awt.Color darkBlue>"->"load.r r0";
    "load.r r0"->"load.i i17";
    "load.i i17"->"load.i $r9";
    "load.i $r9"->"load.i r1";
    "push 3"
    "load.i r1"->"push 3";
    "push 3"->"newarray";
    "staticinvoke <java.awt.Color: float[] RGBtoHSB(int,int,int,float[])>"
    "newarray"->"staticinvoke <java.awt.Color: float[] RGBtoHSB(int,int,int,float[])>";
    "fieldput <Upscroll: float[] HSB>"
    "staticinvoke <java.awt.Color: float[] RGBtoHSB(int,int,int,float[])>"->"fieldput <Upscroll: float[] HSB>";
    "fieldput <Upscroll: float[] HSB>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <Upscroll: float[] HSB>"
    "load.r r0"->"fieldget <Upscroll: float[] HSB>";
    "fieldget <Upscroll: float[] HSB>"->"push 0";
    "arrayread.f"
    "push 0"->"arrayread.f";
    "arrayread.f"->"load.r r0";
    "load.r r0"->"fieldget <Upscroll: float[] HSB>";
    "fieldget <Upscroll: float[] HSB>"->"push 1";
    "push 1"->"arrayread.f";
    "arrayread.f"->"load.r r0";
    "load.r r0"->"fieldget <Upscroll: float[] HSB>";
    "fieldget <Upscroll: float[] HSB>"->"push 2";
    "push 2"->"arrayread.f";
    "staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>"
    "arrayread.f"->"staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>";
    "fieldput <Upscroll: java.awt.Color original>"
    "staticinvoke <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>"->"fieldput <Upscroll: java.awt.Color original>";
    "fieldput <Upscroll: java.awt.Color original>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <Upscroll: float[] HSB>";
    "fieldget <Upscroll: float[] HSB>"->"push 2";
    "push 2"->"arrayread.f";
    "fieldput <Upscroll: float B>"
    "arrayread.f"->"fieldput <Upscroll: float B>";
    "fieldput <Upscroll: float B>"->"load.r r0";
    "push \"BaggrundsFarveRGB\""
    "load.r r0"->"push \"BaggrundsFarveRGB\"";
    "push \"BaggrundsFarveRGB\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r i17";
    "store.r i17"->"load.r i17";
    "load.r i17"->"ifnull load.r r0";
    "ifnull load.r r0"->"new java.util.StringTokenizer";
    "new java.util.StringTokenizer"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"load.r i17";
    "load.r i17"->"push \",\"";
    "push \",\""->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"load.r r0";
    "load.r r0"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "fieldput <Upscroll: java.awt.Color baggrund>"
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <Upscroll: java.awt.Color baggrund>";
    "fieldput <Upscroll: java.awt.Color baggrund>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <Upscroll: java.awt.Color baggrund>"
    "load.r r0"->"fieldget <Upscroll: java.awt.Color baggrund>";
    "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"
    "fieldget <Upscroll: java.awt.Color baggrund>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
    "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push 400"
    "load.r r0"->"push 400";
    "push 200"
    "push 400"->"push 200";
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"
    "push 200"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
    "fieldput <Upscroll: java.awt.Image bagved>"
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <Upscroll: java.awt.Image bagved>";
    "fieldput <Upscroll: java.awt.Image bagved>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <Upscroll: java.awt.Image bagved>"
    "load.r r0"->"fieldget <Upscroll: java.awt.Image bagved>";
    "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"
    "fieldget <Upscroll: java.awt.Image bagved>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
    "fieldput <Upscroll: java.awt.Graphics offscreen>"
    "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <Upscroll: java.awt.Graphics offscreen>";
    "return"
    "fieldput <Upscroll: java.awt.Graphics offscreen>"->"return";
    "inc.i r1 1"
    "ifcmplt.i inc.i r1 1"->"inc.i r1 1";
    "inc.i r1 1"->"load.r r0";
    "new java.lang.StringBuffer"
    "load.r r0"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "push \"Text\""
    "dup1.r"->"push \"Text\"";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"
    "push \"Text\""->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.i r1";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"
    "load.i r1"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "store.r $r9"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r $r9";
    "load.r $r9"
    "store.r $r9"->"load.r $r9";
    "load.r $r9"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r0";
    "fieldget <Upscroll: java.lang.String[] text>"
    "load.r r0"->"fieldget <Upscroll: java.lang.String[] text>";
    "fieldget <Upscroll: java.lang.String[] text>"->"load.i r1";
    "load.i r1"->"push 1";
    "sub.i"
    "push 1"->"sub.i";
    "sub.i"->"load.r $r9";
    "arraywrite.r"
    "load.r $r9"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <Upscroll: java.awt.Font current>"
    "load.r r0"->"fieldget <Upscroll: java.awt.Font current>";
    "virtualinvoke <java.awt.Component: java.awt.FontMetrics getFontMetrics(java.awt.Font)>"
    "fieldget <Upscroll: java.awt.Font current>"->"virtualinvoke <java.awt.Component: java.awt.FontMetrics getFontMetrics(java.awt.Font)>";
    "virtualinvoke <java.awt.Component: java.awt.FontMetrics getFontMetrics(java.awt.Font)>"->"load.r r0";
    "fieldget <Upscroll: int[] textX>"
    "load.r r0"->"fieldget <Upscroll: int[] textX>";
    "fieldget <Upscroll: int[] textX>"->"store.r $r9";
    "store.r $r9"->"load.r r0";
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
    "fieldget <java.awt.Dimension: int width>"
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int width>";
    "fieldget <java.awt.Dimension: int width>"->"push 2";
    "push 2"->"div.i";
    "store.i $i6"
    "div.i"->"store.i $i6";
    "store.i $i6"->"load.r r0";
    "load.r r0"->"fieldget <Upscroll: java.lang.String[] text>";
    "fieldget <Upscroll: java.lang.String[] text>"->"load.i r1";
    "load.i r1"->"push 1";
    "push 1"->"sub.i";
    "arrayread.r"
    "sub.i"->"arrayread.r";
    "virtualinvoke <java.awt.FontMetrics: int stringWidth(java.lang.String)>"
    "arrayread.r"->"virtualinvoke <java.awt.FontMetrics: int stringWidth(java.lang.String)>";
    "virtualinvoke <java.awt.FontMetrics: int stringWidth(java.lang.String)>"->"push 2";
    "push 2"->"div.i";
    "store.i $i8"
    "div.i"->"store.i $i8";
    "store.i $i8"->"load.r $r9";
    "load.r $r9"->"load.i r1";
    "load.i r1"->"push 1";
    "push 1"->"sub.i";
    "load.i $i6"
    "sub.i"->"load.i $i6";
    "load.i $i8"
    "load.i $i6"->"load.i $i8";
    "load.i $i8"->"sub.i";
    "arraywrite.i"
    "sub.i"->"arraywrite.i";
    "inc.i i17 1"
    "arraywrite.i"->"inc.i i17 1";
}
