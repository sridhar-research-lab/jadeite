digraph "" {
    "r0 := @this: RunApplet"
    "load.r r0"
    "r0 := @this: RunApplet"->"load.r r0";
    "new a.a.a.p"
    "load.r r0"->"new a.a.a.p";
    "dup1.r"
    "new a.a.a.p"->"dup1.r";
    "dup1.r"->"load.r r0";
    "specialinvoke <a.a.a.p: void <init>(java.applet.Applet)>"
    "load.r r0"->"specialinvoke <a.a.a.p: void <init>(java.applet.Applet)>";
    "fieldput <RunApplet: a.a.a.p a>"
    "specialinvoke <a.a.a.p: void <init>(java.applet.Applet)>"->"fieldput <RunApplet: a.a.a.p a>";
    "push \"networkaddress.cache.ttl\""
    "fieldput <RunApplet: a.a.a.p a>"->"push \"networkaddress.cache.ttl\"";
    "push \"0\""
    "push \"networkaddress.cache.ttl\""->"push \"0\"";
    "staticinvoke <java.security.Security: void setProperty(java.lang.String,java.lang.String)>"
    "push \"0\""->"staticinvoke <java.security.Security: void setProperty(java.lang.String,java.lang.String)>";
    "goto load.r r0"
    "staticinvoke <java.security.Security: void setProperty(java.lang.String,java.lang.String)>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "new a.a.a.n"
    "load.r r0"->"new a.a.a.n";
    "new a.a.a.n"->"dup1.r";
    "dup1.r"->"load.r r0";
    "specialinvoke <a.a.a.n: void <init>(java.applet.Applet)>"
    "load.r r0"->"specialinvoke <a.a.a.n: void <init>(java.applet.Applet)>";
    "fieldput <RunApplet: a.a.a.n h>"
    "specialinvoke <a.a.a.n: void <init>(java.applet.Applet)>"->"fieldput <RunApplet: a.a.a.n h>";
    "fieldput <RunApplet: a.a.a.n h>"->"load.r r0";
    "new a.a.a.q"
    "load.r r0"->"new a.a.a.q";
    "new a.a.a.q"->"dup1.r";
    "dup1.r"->"load.r r0";
    "specialinvoke <a.a.a.q: void <init>(java.applet.Applet)>"
    "load.r r0"->"specialinvoke <a.a.a.q: void <init>(java.applet.Applet)>";
    "fieldput <RunApplet: a.a.a.q g>"
    "specialinvoke <a.a.a.q: void <init>(java.applet.Applet)>"->"fieldput <RunApplet: a.a.a.q g>";
    "fieldput <RunApplet: a.a.a.q g>"->"load.r r0";
    "fieldget <RunApplet: a.a.a.q g>"
    "load.r r0"->"fieldget <RunApplet: a.a.a.q g>";
    "virtualinvoke <a.a.a.q: boolean b()>"
    "fieldget <RunApplet: a.a.a.q g>"->"virtualinvoke <a.a.a.q: boolean b()>";
    "ifne load.r r0"
    "virtualinvoke <a.a.a.q: boolean b()>"->"ifne load.r r0";
    "ifne load.r r0"->"load.r r0";
    "push 1"
    "load.r r0"->"push 1";
    "fieldput <RunApplet: boolean d>"
    "push 1"->"fieldput <RunApplet: boolean d>";
    "return"
    "fieldput <RunApplet: boolean d>"->"return";
    "ifne load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <RunApplet: a.a.a.q g>";
    "virtualinvoke <a.a.a.q: java.lang.String a()>"
    "fieldget <RunApplet: a.a.a.q g>"->"virtualinvoke <a.a.a.q: java.lang.String a()>";
    "staticinvoke <a.a.a.o: void a(java.lang.String)>"
    "virtualinvoke <a.a.a.q: java.lang.String a()>"->"staticinvoke <a.a.a.o: void a(java.lang.String)>";
    "new java.lang.StringBuilder"
    "staticinvoke <a.a.a.o: void a(java.lang.String)>"->"new java.lang.StringBuilder";
    "new java.lang.StringBuilder"->"dup1.r";
    "specialinvoke <java.lang.StringBuilder: void <init>()>"
    "dup1.r"->"specialinvoke <java.lang.StringBuilder: void <init>()>";
    "push \"--- Init RunApplet: \""
    "specialinvoke <java.lang.StringBuilder: void <init>()>"->"push \"--- Init RunApplet: \"";
    "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"
    "push \"--- Init RunApplet: \""->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"->"load.r r0";
    "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>"
    "load.r r0"->"virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>";
    "virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>"
    "virtualinvoke <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>"->"virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>";
    "staticinvoke <a.a.a.f: void b(java.lang.Object)>"
    "virtualinvoke <java.lang.StringBuilder: java.lang.String toString()>"->"staticinvoke <a.a.a.f: void b(java.lang.Object)>";
    "staticinvoke <a.a.a.f: void b(java.lang.Object)>"->"load.r r0";
    "new a.a.a.t"
    "load.r r0"->"new a.a.a.t";
    "new a.a.a.t"->"dup1.r";
    "push \"RunApplet\""
    "dup1.r"->"push \"RunApplet\"";
    "specialinvoke <a.a.a.t: void <init>(java.lang.String)>"
    "push \"RunApplet\""->"specialinvoke <a.a.a.t: void <init>(java.lang.String)>";
    "fieldput <RunApplet: a.a.a.t b>"
    "specialinvoke <a.a.a.t: void <init>(java.lang.String)>"->"fieldput <RunApplet: a.a.a.t b>";
    "push \"Setting up to start callbacks from start().\""
    "fieldput <RunApplet: a.a.a.t b>"->"push \"Setting up to start callbacks from start().\"";
    "push \"Setting up to start callbacks from start().\""->"staticinvoke <a.a.a.f: void b(java.lang.Object)>";
    "staticinvoke <a.a.a.f: void b(java.lang.Object)>"->"load.r r0";
    "load.r r0"->"push 1";
    "fieldput <RunApplet: boolean c>"
    "push 1"->"fieldput <RunApplet: boolean c>";
    "fieldput <RunApplet: boolean c>"->"load.r r0";
    "new a.a.a.l"
    "load.r r0"->"new a.a.a.l";
    "new a.a.a.l"->"dup1.r";
    "new g"
    "dup1.r"->"new g";
    "new g"->"dup1.r";
    "dup1.r"->"load.r r0";
    "specialinvoke <g: void <init>(RunApplet)>"
    "load.r r0"->"specialinvoke <g: void <init>(RunApplet)>";
    "specialinvoke <a.a.a.l: void <init>(java.lang.Runnable)>"
    "specialinvoke <g: void <init>(RunApplet)>"->"specialinvoke <a.a.a.l: void <init>(java.lang.Runnable)>";
    "fieldput <RunApplet: a.a.a.l f>"
    "specialinvoke <a.a.a.l: void <init>(java.lang.Runnable)>"->"fieldput <RunApplet: a.a.a.l f>";
    "fieldput <RunApplet: a.a.a.l f>"->"return";
    "store.r $r14"
    "staticinvoke <java.security.Security: void setProperty(java.lang.String,java.lang.String)>"->"store.r $r14";
    "store.r $r14"->"load.r r0";
    "load.r r0"->"push 1";
    "fieldput <RunApplet: boolean e>"
    "push 1"->"fieldput <RunApplet: boolean e>";
    "fieldput <RunApplet: boolean e>"->"return";
}
