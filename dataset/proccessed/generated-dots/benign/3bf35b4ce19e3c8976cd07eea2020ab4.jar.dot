digraph "" {
    "r0 := @this: com.mindprod.encodingrecogniser.EncodingRecogniser"
    "push 1"
    "r0 := @this: com.mindprod.encodingrecogniser.EncodingRecogniser"->"push 1";
    "push 5"
    "push 1"->"push 5";
    "push 0"
    "push 5"->"push 0";
    "load.r r0"
    "push 0"->"load.r r0";
    "staticinvoke <com.mindprod.common11.VersionCheck: boolean isJavaVersionOK(int,int,int,java.awt.Container)>"
    "load.r r0"->"staticinvoke <com.mindprod.common11.VersionCheck: boolean isJavaVersionOK(int,int,int,java.awt.Container)>";
    "ifne load.r r0"
    "staticinvoke <com.mindprod.common11.VersionCheck: boolean isJavaVersionOK(int,int,int,java.awt.Container)>"->"ifne load.r r0";
    "return"
    "ifne load.r r0"->"return";
    "ifne load.r r0"->"load.r r0";
    "specialinvoke <com.mindprod.encodingrecogniser.EncodingRecogniser: void buildMenu()>"
    "load.r r0"->"specialinvoke <com.mindprod.encodingrecogniser.EncodingRecogniser: void buildMenu()>";
    "specialinvoke <com.mindprod.encodingrecogniser.EncodingRecogniser: void buildMenu()>"->"load.r r0";
    "virtualinvoke <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Container getContentPane()>"
    "load.r r0"->"virtualinvoke <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Container getContentPane()>";
    "store.r r1"
    "virtualinvoke <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Container getContentPane()>"->"store.r r1";
    "load.r r1"
    "store.r r1"->"load.r r1";
    "new java.awt.GridBagLayout"
    "load.r r1"->"new java.awt.GridBagLayout";
    "dup1.r"
    "new java.awt.GridBagLayout"->"dup1.r";
    "specialinvoke <java.awt.GridBagLayout: void <init>()>"
    "dup1.r"->"specialinvoke <java.awt.GridBagLayout: void <init>()>";
    "virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>"
    "specialinvoke <java.awt.GridBagLayout: void <init>()>"->"virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>";
    "virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>"->"load.r r1";
    "staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color BACKGROUND_FOR_BODY>"
    "load.r r1"->"staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color BACKGROUND_FOR_BODY>";
    "virtualinvoke <java.awt.Container: void setBackground(java.awt.Color)>"
    "staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color BACKGROUND_FOR_BODY>"->"virtualinvoke <java.awt.Container: void setBackground(java.awt.Color)>";
    "virtualinvoke <java.awt.Container: void setBackground(java.awt.Color)>"->"load.r r0";
    "new javax.swing.JLabel"
    "load.r r0"->"new javax.swing.JLabel";
    "new javax.swing.JLabel"->"dup1.r";
    "push \"Encoding Recogniser 1.2\""
    "dup1.r"->"push \"Encoding Recogniser 1.2\"";
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>"
    "push \"Encoding Recogniser 1.2\""->"specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel title>"
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>"->"fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel title>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel title>"->"load.r r0";
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel title>"
    "load.r r0"->"fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel title>";
    "staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Font FONT_FOR_TITLE>"
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel title>"->"staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Font FONT_FOR_TITLE>";
    "virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>"
    "staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Font FONT_FOR_TITLE>"->"virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>";
    "virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel title>";
    "staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color FOREGROUND_FOR_TITLE>"
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel title>"->"staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color FOREGROUND_FOR_TITLE>";
    "virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>"
    "staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color FOREGROUND_FOR_TITLE>"->"virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"new javax.swing.JLabel";
    "new javax.swing.JLabel"->"dup1.r";
    "push \"released:2010-03-23 build:9411\""
    "dup1.r"->"push \"released:2010-03-23 build:9411\"";
    "push \"released:2010-03-23 build:9411\""->"specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel title2>"
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>"->"fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel title2>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel title2>"->"load.r r0";
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel title2>"
    "load.r r0"->"fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel title2>";
    "staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Font FONT_FOR_TITLE2>"
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel title2>"->"staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Font FONT_FOR_TITLE2>";
    "staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Font FONT_FOR_TITLE2>"->"virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>";
    "virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel title2>";
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel title2>"->"staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color FOREGROUND_FOR_TITLE>";
    "staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color FOREGROUND_FOR_TITLE>"->"virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>"->"load.r r0";
    "new com.mindprod.common13.JEButton"
    "load.r r0"->"new com.mindprod.common13.JEButton";
    "new com.mindprod.common13.JEButton"->"dup1.r";
    "push \"Choose File\""
    "dup1.r"->"push \"Choose File\"";
    "specialinvoke <com.mindprod.common13.JEButton: void <init>(java.lang.String)>"
    "push \"Choose File\""->"specialinvoke <com.mindprod.common13.JEButton: void <init>(java.lang.String)>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JButton chooseFile>"
    "specialinvoke <com.mindprod.common13.JEButton: void <init>(java.lang.String)>"->"fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JButton chooseFile>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JButton chooseFile>"->"load.r r0";
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JButton chooseFile>"
    "load.r r0"->"fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JButton chooseFile>";
    "push \"Choose a file to study\""
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JButton chooseFile>"->"push \"Choose a file to study\"";
    "virtualinvoke <javax.swing.JButton: void setToolTipText(java.lang.String)>"
    "push \"Choose a file to study\""->"virtualinvoke <javax.swing.JButton: void setToolTipText(java.lang.String)>";
    "virtualinvoke <javax.swing.JButton: void setToolTipText(java.lang.String)>"->"load.r r0";
    "new javax.swing.JTextField"
    "load.r r0"->"new javax.swing.JTextField";
    "new javax.swing.JTextField"->"dup1.r";
    "specialinvoke <javax.swing.JTextField: void <init>()>"
    "dup1.r"->"specialinvoke <javax.swing.JTextField: void <init>()>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextField fileName>"
    "specialinvoke <javax.swing.JTextField: void <init>()>"->"fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextField fileName>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextField fileName>"->"load.r r0";
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextField fileName>"
    "load.r r0"->"fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextField fileName>";
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextField fileName>"->"push 0";
    "virtualinvoke <javax.swing.JTextField: void setEditable(boolean)>"
    "push 0"->"virtualinvoke <javax.swing.JTextField: void setEditable(boolean)>";
    "virtualinvoke <javax.swing.JTextField: void setEditable(boolean)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextField fileName>";
    "staticget <java.awt.Color: java.awt.Color RED>"
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextField fileName>"->"staticget <java.awt.Color: java.awt.Color RED>";
    "virtualinvoke <javax.swing.JTextField: void setForeground(java.awt.Color)>"
    "staticget <java.awt.Color: java.awt.Color RED>"->"virtualinvoke <javax.swing.JTextField: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JTextField: void setForeground(java.awt.Color)>"->"load.r r0";
    "new javax.swing.JComboBox"
    "load.r r0"->"new javax.swing.JComboBox";
    "new javax.swing.JComboBox"->"dup1.r";
    "staticinvoke <java.nio.charset.Charset: java.util.SortedMap availableCharsets()>"
    "dup1.r"->"staticinvoke <java.nio.charset.Charset: java.util.SortedMap availableCharsets()>";
    "interfaceinvoke <java.util.SortedMap: java.util.Set keySet()> 0"
    "staticinvoke <java.nio.charset.Charset: java.util.SortedMap availableCharsets()>"->"interfaceinvoke <java.util.SortedMap: java.util.Set keySet()> 0";
    "interfaceinvoke <java.util.SortedMap: java.util.Set keySet()> 0"->"dup1.r";
    "interfaceinvoke <java.util.Set: int size()> 0"
    "dup1.r"->"interfaceinvoke <java.util.Set: int size()> 0";
    "newarray"
    "interfaceinvoke <java.util.Set: int size()> 0"->"newarray";
    "interfaceinvoke <java.util.Set: java.lang.Object[] toArray(java.lang.Object[])> 1"
    "newarray"->"interfaceinvoke <java.util.Set: java.lang.Object[] toArray(java.lang.Object[])> 1";
    "specialinvoke <javax.swing.JComboBox: void <init>(java.lang.Object[])>"
    "interfaceinvoke <java.util.Set: java.lang.Object[] toArray(java.lang.Object[])> 1"->"specialinvoke <javax.swing.JComboBox: void <init>(java.lang.Object[])>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JComboBox chooseEncoding>"
    "specialinvoke <javax.swing.JComboBox: void <init>(java.lang.Object[])>"->"fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JComboBox chooseEncoding>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JComboBox chooseEncoding>"->"load.r r0";
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JComboBox chooseEncoding>"
    "load.r r0"->"fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JComboBox chooseEncoding>";
    "staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>"
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JComboBox chooseEncoding>"->"staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>";
    "virtualinvoke <java.nio.charset.Charset: java.lang.String name()>"
    "staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>"->"virtualinvoke <java.nio.charset.Charset: java.lang.String name()>";
    "virtualinvoke <javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>"
    "virtualinvoke <java.nio.charset.Charset: java.lang.String name()>"->"virtualinvoke <javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>";
    "goto load.r r0"
    "virtualinvoke <javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"new javax.swing.JLabel";
    "new javax.swing.JLabel"->"dup1.r";
    "push \"file to check\""
    "dup1.r"->"push \"file to check\"";
    "push 2"
    "push \"file to check\""->"push 2";
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String,int)>"
    "push 2"->"specialinvoke <javax.swing.JLabel: void <init>(java.lang.String,int)>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel fileLabel>"
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String,int)>"->"fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel fileLabel>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel fileLabel>"->"load.r r0";
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel fileLabel>"
    "load.r r0"->"fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel fileLabel>";
    "staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color FOREGROUND_FOR_LABEL>"
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel fileLabel>"->"staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color FOREGROUND_FOR_LABEL>";
    "staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color FOREGROUND_FOR_LABEL>"->"virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"new javax.swing.JLabel";
    "new javax.swing.JLabel"->"dup1.r";
    "push \"encoding candidate\""
    "dup1.r"->"push \"encoding candidate\"";
    "push 4"
    "push \"encoding candidate\""->"push 4";
    "push 4"->"specialinvoke <javax.swing.JLabel: void <init>(java.lang.String,int)>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel encodingLabel>"
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String,int)>"->"fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel encodingLabel>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel encodingLabel>"->"load.r r0";
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel encodingLabel>"
    "load.r r0"->"fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel encodingLabel>";
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel encodingLabel>"->"staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color FOREGROUND_FOR_LABEL>";
    "staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color FOREGROUND_FOR_LABEL>"->"virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"new javax.swing.JLabel";
    "new javax.swing.JLabel"->"dup1.r";
    "push \"raw hex bytes\""
    "dup1.r"->"push \"raw hex bytes\"";
    "push \"raw hex bytes\""->"specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel hexByteLabel>"
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>"->"fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel hexByteLabel>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel hexByteLabel>"->"load.r r0";
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel hexByteLabel>"
    "load.r r0"->"fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel hexByteLabel>";
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel hexByteLabel>"->"staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color FOREGROUND_FOR_LABEL>";
    "staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color FOREGROUND_FOR_LABEL>"->"virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"new javax.swing.JLabel";
    "new javax.swing.JLabel"->"dup1.r";
    "push \"decoded hex chars\""
    "dup1.r"->"push \"decoded hex chars\"";
    "push \"decoded hex chars\""->"specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel hexCharLabel>"
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>"->"fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel hexCharLabel>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel hexCharLabel>"->"load.r r0";
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel hexCharLabel>"
    "load.r r0"->"fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel hexCharLabel>";
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel hexCharLabel>"->"staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color FOREGROUND_FOR_LABEL>";
    "staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color FOREGROUND_FOR_LABEL>"->"virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"new javax.swing.JTextField";
    "new javax.swing.JTextField"->"dup1.r";
    "dup1.r"->"specialinvoke <javax.swing.JTextField: void <init>()>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextField hexBytes>"
    "specialinvoke <javax.swing.JTextField: void <init>()>"->"fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextField hexBytes>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextField hexBytes>"->"load.r r0";
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextField hexBytes>"
    "load.r r0"->"fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextField hexBytes>";
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextField hexBytes>"->"push 0";
    "push 0"->"virtualinvoke <javax.swing.JTextField: void setEditable(boolean)>";
    "virtualinvoke <javax.swing.JTextField: void setEditable(boolean)>"->"load.r r0";
    "load.r r0"->"new javax.swing.JTextField";
    "new javax.swing.JTextField"->"dup1.r";
    "dup1.r"->"specialinvoke <javax.swing.JTextField: void <init>()>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextField hexChars>"
    "specialinvoke <javax.swing.JTextField: void <init>()>"->"fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextField hexChars>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextField hexChars>"->"load.r r0";
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextField hexChars>"
    "load.r r0"->"fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextField hexChars>";
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextField hexChars>"->"push 0";
    "push 0"->"virtualinvoke <javax.swing.JTextField: void setEditable(boolean)>";
    "virtualinvoke <javax.swing.JTextField: void setEditable(boolean)>"->"load.r r0";
    "new javax.swing.JTextArea"
    "load.r r0"->"new javax.swing.JTextArea";
    "new javax.swing.JTextArea"->"dup1.r";
    "specialinvoke <javax.swing.JTextArea: void <init>()>"
    "dup1.r"->"specialinvoke <javax.swing.JTextArea: void <init>()>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextArea displayFileContents>"
    "specialinvoke <javax.swing.JTextArea: void <init>()>"->"fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextArea displayFileContents>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextArea displayFileContents>"->"load.r r0";
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextArea displayFileContents>"
    "load.r r0"->"fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextArea displayFileContents>";
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextArea displayFileContents>"->"push 0";
    "virtualinvoke <javax.swing.JTextArea: void setEditable(boolean)>"
    "push 0"->"virtualinvoke <javax.swing.JTextArea: void setEditable(boolean)>";
    "virtualinvoke <javax.swing.JTextArea: void setEditable(boolean)>"->"load.r r0";
    "new javax.swing.JScrollPane"
    "load.r r0"->"new javax.swing.JScrollPane";
    "new javax.swing.JScrollPane"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextArea displayFileContents>";
    "push 20"
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JTextArea displayFileContents>"->"push 20";
    "push 30"
    "push 20"->"push 30";
    "specialinvoke <javax.swing.JScrollPane: void <init>(java.awt.Component,int,int)>"
    "push 30"->"specialinvoke <javax.swing.JScrollPane: void <init>(java.awt.Component,int,int)>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JScrollPane scroller>"
    "specialinvoke <javax.swing.JScrollPane: void <init>(java.awt.Component,int,int)>"->"fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JScrollPane scroller>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JScrollPane scroller>"->"load.r r0";
    "load.r r0"->"new javax.swing.JLabel";
    "new javax.swing.JLabel"->"dup1.r";
    "push \"Choose a file, then try various encodings till you find an encoding that displays it properly.\""
    "dup1.r"->"push \"Choose a file, then try various encodings till you find an encoding that displays it properly.\"";
    "push \"Choose a file, then try various encodings till you find an encoding that displays it properly.\""->"push 0";
    "push 0"->"specialinvoke <javax.swing.JLabel: void <init>(java.lang.String,int)>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel instructions>"
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String,int)>"->"fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel instructions>";
    "fieldput <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel instructions>"->"load.r r0";
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel instructions>"
    "load.r r0"->"fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel instructions>";
    "staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Font FONT_FOR_INSTRUCTIONS>"
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel instructions>"->"staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Font FONT_FOR_INSTRUCTIONS>";
    "staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Font FONT_FOR_INSTRUCTIONS>"->"virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>";
    "virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel instructions>";
    "staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color BACKGROUND_FOR_INSTRUCTIONS>"
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel instructions>"->"staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color BACKGROUND_FOR_INSTRUCTIONS>";
    "virtualinvoke <javax.swing.JLabel: void setBackground(java.awt.Color)>"
    "staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color BACKGROUND_FOR_INSTRUCTIONS>"->"virtualinvoke <javax.swing.JLabel: void setBackground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JLabel: void setBackground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel instructions>";
    "staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color FOREGROUND_FOR_INSTRUCTIONS>"
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JLabel instructions>"->"staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color FOREGROUND_FOR_INSTRUCTIONS>";
    "staticget <com.mindprod.encodingrecogniser.EncodingRecogniser: java.awt.Color FOREGROUND_FOR_INSTRUCTIONS>"->"virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"load.r r1";
    "specialinvoke <com.mindprod.encodingrecogniser.EncodingRecogniser: void layoutComponents(java.awt.Container)>"
    "load.r r1"->"specialinvoke <com.mindprod.encodingrecogniser.EncodingRecogniser: void layoutComponents(java.awt.Container)>";
    "specialinvoke <com.mindprod.encodingrecogniser.EncodingRecogniser: void layoutComponents(java.awt.Container)>"->"load.r r0";
    "specialinvoke <com.mindprod.encodingrecogniser.EncodingRecogniser: void hookComponents()>"
    "load.r r0"->"specialinvoke <com.mindprod.encodingrecogniser.EncodingRecogniser: void hookComponents()>";
    "specialinvoke <com.mindprod.encodingrecogniser.EncodingRecogniser: void hookComponents()>"->"return";
    "store.r $r56"
    "virtualinvoke <javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>"->"store.r $r56";
    "store.r $r56"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JComboBox chooseEncoding>";
    "fieldget <com.mindprod.encodingrecogniser.EncodingRecogniser: javax.swing.JComboBox chooseEncoding>"->"push 0";
    "virtualinvoke <javax.swing.JComboBox: void setSelectedIndex(int)>"
    "push 0"->"virtualinvoke <javax.swing.JComboBox: void setSelectedIndex(int)>";
}
