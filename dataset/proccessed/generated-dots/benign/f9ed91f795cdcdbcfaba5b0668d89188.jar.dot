digraph "" {
    "r0 := @this: com.mindprod.inwords.InWords"
    "push 1"
    "r0 := @this: com.mindprod.inwords.InWords"->"push 1";
    "push 5"
    "push 1"->"push 5";
    "push 0"
    "push 5"->"push 0";
    "load.r r0"
    "push 0"->"load.r r0";
    "staticinvoke <com.mindprod.common11.VersionCheck: boolean isJavaVersionOK(int,int,int,java.awt.Container)>"
    "load.r r0"->"staticinvoke <com.mindprod.common11.VersionCheck: boolean isJavaVersionOK(int,int,int,java.awt.Container)>";
    "ifne staticinvoke <com.mindprod.common13.Common13: void setLaf()>"
    "staticinvoke <com.mindprod.common11.VersionCheck: boolean isJavaVersionOK(int,int,int,java.awt.Container)>"->"ifne staticinvoke <com.mindprod.common13.Common13: void setLaf()>";
    "return"
    "ifne staticinvoke <com.mindprod.common13.Common13: void setLaf()>"->"return";
    "staticinvoke <com.mindprod.common13.Common13: void setLaf()>"
    "ifne staticinvoke <com.mindprod.common13.Common13: void setLaf()>"->"staticinvoke <com.mindprod.common13.Common13: void setLaf()>";
    "staticinvoke <com.mindprod.common13.Common13: void setLaf()>"->"load.r r0";
    "virtualinvoke <com.mindprod.inwords.InWords: java.awt.Container getContentPane()>"
    "load.r r0"->"virtualinvoke <com.mindprod.inwords.InWords: java.awt.Container getContentPane()>";
    "store.r r1"
    "virtualinvoke <com.mindprod.inwords.InWords: java.awt.Container getContentPane()>"->"store.r r1";
    "load.r r1"
    "store.r r1"->"load.r r1";
    "staticget <com.mindprod.inwords.InWords: java.awt.Color BACKGROUND_FOR_BODY>"
    "load.r r1"->"staticget <com.mindprod.inwords.InWords: java.awt.Color BACKGROUND_FOR_BODY>";
    "virtualinvoke <java.awt.Container: void setBackground(java.awt.Color)>"
    "staticget <com.mindprod.inwords.InWords: java.awt.Color BACKGROUND_FOR_BODY>"->"virtualinvoke <java.awt.Container: void setBackground(java.awt.Color)>";
    "virtualinvoke <java.awt.Container: void setBackground(java.awt.Color)>"->"load.r r1";
    "new java.awt.GridBagLayout"
    "load.r r1"->"new java.awt.GridBagLayout";
    "dup1.r"
    "new java.awt.GridBagLayout"->"dup1.r";
    "specialinvoke <java.awt.GridBagLayout: void <init>()>"
    "dup1.r"->"specialinvoke <java.awt.GridBagLayout: void <init>()>";
    "virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>"
    "specialinvoke <java.awt.GridBagLayout: void <init>()>"->"virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>";
    "virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>"->"load.r r0";
    "new com.mindprod.common13.JEButton"
    "load.r r0"->"new com.mindprod.common13.JEButton";
    "new com.mindprod.common13.JEButton"->"dup1.r";
    "push \"About\""
    "dup1.r"->"push \"About\"";
    "specialinvoke <com.mindprod.common13.JEButton: void <init>(java.lang.String)>"
    "push \"About\""->"specialinvoke <com.mindprod.common13.JEButton: void <init>(java.lang.String)>";
    "fieldput <com.mindprod.inwords.InWords: javax.swing.JButton about>"
    "specialinvoke <com.mindprod.common13.JEButton: void <init>(java.lang.String)>"->"fieldput <com.mindprod.inwords.InWords: javax.swing.JButton about>";
    "fieldput <com.mindprod.inwords.InWords: javax.swing.JButton about>"->"load.r r0";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JButton about>"
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JButton about>";
    "push \"About InWords Amanuensis 4.6\""
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JButton about>"->"push \"About InWords Amanuensis 4.6\"";
    "virtualinvoke <javax.swing.JButton: void setToolTipText(java.lang.String)>"
    "push \"About InWords Amanuensis 4.6\""->"virtualinvoke <javax.swing.JButton: void setToolTipText(java.lang.String)>";
    "virtualinvoke <javax.swing.JButton: void setToolTipText(java.lang.String)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JButton about>";
    "new com.mindprod.inwords.InWords$1"
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JButton about>"->"new com.mindprod.inwords.InWords$1";
    "new com.mindprod.inwords.InWords$1"->"dup1.r";
    "dup1.r"->"load.r r0";
    "specialinvoke <com.mindprod.inwords.InWords$1: void <init>(com.mindprod.inwords.InWords)>"
    "load.r r0"->"specialinvoke <com.mindprod.inwords.InWords$1: void <init>(com.mindprod.inwords.InWords)>";
    "virtualinvoke <javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>"
    "specialinvoke <com.mindprod.inwords.InWords$1: void <init>(com.mindprod.inwords.InWords)>"->"virtualinvoke <javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>";
    "virtualinvoke <javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>"->"load.r r0";
    "new javax.swing.JLabel"
    "load.r r0"->"new javax.swing.JLabel";
    "new javax.swing.JLabel"->"dup1.r";
    "push \"InWords Amanuensis 4.6\""
    "dup1.r"->"push \"InWords Amanuensis 4.6\"";
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>"
    "push \"InWords Amanuensis 4.6\""->"specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>";
    "fieldput <com.mindprod.inwords.InWords: javax.swing.JLabel title>"
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>"->"fieldput <com.mindprod.inwords.InWords: javax.swing.JLabel title>";
    "fieldput <com.mindprod.inwords.InWords: javax.swing.JLabel title>"->"load.r r0";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel title>"
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel title>";
    "staticget <com.mindprod.inwords.InWords: java.awt.Font FONT_FOR_TITLE>"
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel title>"->"staticget <com.mindprod.inwords.InWords: java.awt.Font FONT_FOR_TITLE>";
    "virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>"
    "staticget <com.mindprod.inwords.InWords: java.awt.Font FONT_FOR_TITLE>"->"virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>";
    "virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel title>";
    "staticget <com.mindprod.inwords.InWords: java.awt.Color FOREGROUND_FOR_TITLE>"
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel title>"->"staticget <com.mindprod.inwords.InWords: java.awt.Color FOREGROUND_FOR_TITLE>";
    "virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>"
    "staticget <com.mindprod.inwords.InWords: java.awt.Color FOREGROUND_FOR_TITLE>"->"virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"new javax.swing.JLabel";
    "new javax.swing.JLabel"->"dup1.r";
    "push \"released:2009-05-01 build:9411\""
    "dup1.r"->"push \"released:2009-05-01 build:9411\"";
    "push \"released:2009-05-01 build:9411\""->"specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>";
    "fieldput <com.mindprod.inwords.InWords: javax.swing.JLabel title2>"
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>"->"fieldput <com.mindprod.inwords.InWords: javax.swing.JLabel title2>";
    "fieldput <com.mindprod.inwords.InWords: javax.swing.JLabel title2>"->"load.r r0";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel title2>"
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel title2>";
    "staticget <com.mindprod.inwords.InWords: java.awt.Font FONT_FOR_TITLE2>"
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel title2>"->"staticget <com.mindprod.inwords.InWords: java.awt.Font FONT_FOR_TITLE2>";
    "staticget <com.mindprod.inwords.InWords: java.awt.Font FONT_FOR_TITLE2>"->"virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>";
    "virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel title2>";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel title2>"->"staticget <com.mindprod.inwords.InWords: java.awt.Color FOREGROUND_FOR_TITLE>";
    "staticget <com.mindprod.inwords.InWords: java.awt.Color FOREGROUND_FOR_TITLE>"->"virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>";
    "staticinvoke <com.mindprod.inwords.InWords: void findLanguages()>"
    "virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>"->"staticinvoke <com.mindprod.inwords.InWords: void findLanguages()>";
    "staticinvoke <com.mindprod.inwords.InWords: void findLanguages()>"->"load.r r0";
    "new javax.swing.JComboBox"
    "load.r r0"->"new javax.swing.JComboBox";
    "new javax.swing.JComboBox"->"dup1.r";
    "staticget <com.mindprod.inwords.InWords: java.lang.String[] languageNames>"
    "dup1.r"->"staticget <com.mindprod.inwords.InWords: java.lang.String[] languageNames>";
    "specialinvoke <javax.swing.JComboBox: void <init>(java.lang.Object[])>"
    "staticget <com.mindprod.inwords.InWords: java.lang.String[] languageNames>"->"specialinvoke <javax.swing.JComboBox: void <init>(java.lang.Object[])>";
    "fieldput <com.mindprod.inwords.InWords: javax.swing.JComboBox language>"
    "specialinvoke <javax.swing.JComboBox: void <init>(java.lang.Object[])>"->"fieldput <com.mindprod.inwords.InWords: javax.swing.JComboBox language>";
    "fieldput <com.mindprod.inwords.InWords: javax.swing.JComboBox language>"->"load.r r0";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JComboBox language>"
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JComboBox language>";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JComboBox language>"->"push 0";
    "virtualinvoke <javax.swing.JComboBox: void setEditable(boolean)>"
    "push 0"->"virtualinvoke <javax.swing.JComboBox: void setEditable(boolean)>";
    "virtualinvoke <javax.swing.JComboBox: void setEditable(boolean)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JComboBox language>";
    "push \"Dialog\""
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JComboBox language>"->"push \"Dialog\"";
    "push \"Dialog\""->"push 1";
    "push 12"
    "push 1"->"push 12";
    "staticinvoke <com.mindprod.common15.FontFactory: java.awt.Font build(java.lang.String,int,int)>"
    "push 12"->"staticinvoke <com.mindprod.common15.FontFactory: java.awt.Font build(java.lang.String,int,int)>";
    "virtualinvoke <javax.swing.JComboBox: void setFont(java.awt.Font)>"
    "staticinvoke <com.mindprod.common15.FontFactory: java.awt.Font build(java.lang.String,int,int)>"->"virtualinvoke <javax.swing.JComboBox: void setFont(java.awt.Font)>";
    "virtualinvoke <javax.swing.JComboBox: void setFont(java.awt.Font)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JComboBox language>";
    "push \"English (North American)\""
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JComboBox language>"->"push \"English (North American)\"";
    "virtualinvoke <javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>"
    "push \"English (North American)\""->"virtualinvoke <javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>";
    "virtualinvoke <javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JComboBox language>";
    "new com.mindprod.inwords.InWords$2"
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JComboBox language>"->"new com.mindprod.inwords.InWords$2";
    "new com.mindprod.inwords.InWords$2"->"dup1.r";
    "dup1.r"->"load.r r0";
    "specialinvoke <com.mindprod.inwords.InWords$2: void <init>(com.mindprod.inwords.InWords)>"
    "load.r r0"->"specialinvoke <com.mindprod.inwords.InWords$2: void <init>(com.mindprod.inwords.InWords)>";
    "virtualinvoke <javax.swing.JComboBox: void addItemListener(java.awt.event.ItemListener)>"
    "specialinvoke <com.mindprod.inwords.InWords$2: void <init>(com.mindprod.inwords.InWords)>"->"virtualinvoke <javax.swing.JComboBox: void addItemListener(java.awt.event.ItemListener)>";
    "virtualinvoke <javax.swing.JComboBox: void addItemListener(java.awt.event.ItemListener)>"->"load.r r0";
    "load.r r0"->"new javax.swing.JLabel";
    "new javax.swing.JLabel"->"dup1.r";
    "push \"language\""
    "dup1.r"->"push \"language\"";
    "push \"language\""->"specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>";
    "fieldput <com.mindprod.inwords.InWords: javax.swing.JLabel languageLabel>"
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>"->"fieldput <com.mindprod.inwords.InWords: javax.swing.JLabel languageLabel>";
    "fieldput <com.mindprod.inwords.InWords: javax.swing.JLabel languageLabel>"->"load.r r0";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel languageLabel>"
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel languageLabel>";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel languageLabel>"->"push \"Dialog\"";
    "push \"Dialog\""->"push 1";
    "push 15"
    "push 1"->"push 15";
    "push 15"->"staticinvoke <com.mindprod.common15.FontFactory: java.awt.Font build(java.lang.String,int,int)>";
    "staticinvoke <com.mindprod.common15.FontFactory: java.awt.Font build(java.lang.String,int,int)>"->"virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>";
    "virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel languageLabel>";
    "staticget <com.mindprod.inwords.InWords: java.awt.Color FOREGROUND_FOR_LABEL>"
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel languageLabel>"->"staticget <com.mindprod.inwords.InWords: java.awt.Color FOREGROUND_FOR_LABEL>";
    "staticget <com.mindprod.inwords.InWords: java.awt.Color FOREGROUND_FOR_LABEL>"->"virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>"->"load.r r0";
    "new javax.swing.JSpinner"
    "load.r r0"->"new javax.swing.JSpinner";
    "new javax.swing.JSpinner"->"dup1.r";
    "specialinvoke <javax.swing.JSpinner: void <init>()>"
    "dup1.r"->"specialinvoke <javax.swing.JSpinner: void <init>()>";
    "fieldput <com.mindprod.inwords.InWords: javax.swing.JSpinner spinner>"
    "specialinvoke <javax.swing.JSpinner: void <init>()>"->"fieldput <com.mindprod.inwords.InWords: javax.swing.JSpinner spinner>";
    "fieldput <com.mindprod.inwords.InWords: javax.swing.JSpinner spinner>"->"load.r r0";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JSpinner spinner>"
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JSpinner spinner>";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JSpinner spinner>"->"push \"Dialog\"";
    "push \"Dialog\""->"push 1";
    "push 1"->"push 15";
    "push 15"->"staticinvoke <com.mindprod.common15.FontFactory: java.awt.Font build(java.lang.String,int,int)>";
    "virtualinvoke <javax.swing.JSpinner: void setFont(java.awt.Font)>"
    "staticinvoke <com.mindprod.common15.FontFactory: java.awt.Font build(java.lang.String,int,int)>"->"virtualinvoke <javax.swing.JSpinner: void setFont(java.awt.Font)>";
    "virtualinvoke <javax.swing.JSpinner: void setFont(java.awt.Font)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JSpinner spinner>";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JSpinner spinner>"->"push 1";
    "virtualinvoke <javax.swing.JSpinner: void setEnabled(boolean)>"
    "push 1"->"virtualinvoke <javax.swing.JSpinner: void setEnabled(boolean)>";
    "new java.awt.Dimension"
    "virtualinvoke <javax.swing.JSpinner: void setEnabled(boolean)>"->"new java.awt.Dimension";
    "store.r $r36"
    "new java.awt.Dimension"->"store.r $r36";
    "load.r $r36"
    "store.r $r36"->"load.r $r36";
    "push 200"
    "load.r $r36"->"push 200";
    "push 30"
    "push 200"->"push 30";
    "specialinvoke <java.awt.Dimension: void <init>(int,int)>"
    "push 30"->"specialinvoke <java.awt.Dimension: void <init>(int,int)>";
    "specialinvoke <java.awt.Dimension: void <init>(int,int)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JSpinner spinner>";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JSpinner spinner>"->"load.r $r36";
    "virtualinvoke <javax.swing.JSpinner: void setMinimumSize(java.awt.Dimension)>"
    "load.r $r36"->"virtualinvoke <javax.swing.JSpinner: void setMinimumSize(java.awt.Dimension)>";
    "virtualinvoke <javax.swing.JSpinner: void setMinimumSize(java.awt.Dimension)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JSpinner spinner>";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JSpinner spinner>"->"load.r $r36";
    "virtualinvoke <javax.swing.JSpinner: void setPreferredSize(java.awt.Dimension)>"
    "load.r $r36"->"virtualinvoke <javax.swing.JSpinner: void setPreferredSize(java.awt.Dimension)>";
    "virtualinvoke <javax.swing.JSpinner: void setPreferredSize(java.awt.Dimension)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JSpinner spinner>";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JSpinner spinner>"->"load.r $r36";
    "virtualinvoke <javax.swing.JSpinner: void setMaximumSize(java.awt.Dimension)>"
    "load.r $r36"->"virtualinvoke <javax.swing.JSpinner: void setMaximumSize(java.awt.Dimension)>";
    "virtualinvoke <javax.swing.JSpinner: void setMaximumSize(java.awt.Dimension)>"->"load.r r0";
    "new javax.swing.SpinnerNumberModel"
    "load.r r0"->"new javax.swing.SpinnerNumberModel";
    "new javax.swing.SpinnerNumberModel"->"dup1.r";
    "push 12345.0"
    "dup1.r"->"push 12345.0";
    "push -9.223372036854776E18"
    "push 12345.0"->"push -9.223372036854776E18";
    "push 9.223372036854776E18"
    "push -9.223372036854776E18"->"push 9.223372036854776E18";
    "push 1.0"
    "push 9.223372036854776E18"->"push 1.0";
    "specialinvoke <javax.swing.SpinnerNumberModel: void <init>(double,double,double,double)>"
    "push 1.0"->"specialinvoke <javax.swing.SpinnerNumberModel: void <init>(double,double,double,double)>";
    "fieldput <com.mindprod.inwords.InWords: javax.swing.SpinnerNumberModel spinnerNumberModel>"
    "specialinvoke <javax.swing.SpinnerNumberModel: void <init>(double,double,double,double)>"->"fieldput <com.mindprod.inwords.InWords: javax.swing.SpinnerNumberModel spinnerNumberModel>";
    "fieldput <com.mindprod.inwords.InWords: javax.swing.SpinnerNumberModel spinnerNumberModel>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JSpinner spinner>";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JSpinner spinner>"->"load.r r0";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.SpinnerNumberModel spinnerNumberModel>"
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.SpinnerNumberModel spinnerNumberModel>";
    "virtualinvoke <javax.swing.JSpinner: void setModel(javax.swing.SpinnerModel)>"
    "fieldget <com.mindprod.inwords.InWords: javax.swing.SpinnerNumberModel spinnerNumberModel>"->"virtualinvoke <javax.swing.JSpinner: void setModel(javax.swing.SpinnerModel)>";
    "virtualinvoke <javax.swing.JSpinner: void setModel(javax.swing.SpinnerModel)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JSpinner spinner>";
    "new com.mindprod.inwords.InWords$3"
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JSpinner spinner>"->"new com.mindprod.inwords.InWords$3";
    "new com.mindprod.inwords.InWords$3"->"dup1.r";
    "dup1.r"->"load.r r0";
    "specialinvoke <com.mindprod.inwords.InWords$3: void <init>(com.mindprod.inwords.InWords)>"
    "load.r r0"->"specialinvoke <com.mindprod.inwords.InWords$3: void <init>(com.mindprod.inwords.InWords)>";
    "virtualinvoke <javax.swing.JSpinner: void addChangeListener(javax.swing.event.ChangeListener)>"
    "specialinvoke <com.mindprod.inwords.InWords$3: void <init>(com.mindprod.inwords.InWords)>"->"virtualinvoke <javax.swing.JSpinner: void addChangeListener(javax.swing.event.ChangeListener)>";
    "virtualinvoke <javax.swing.JSpinner: void addChangeListener(javax.swing.event.ChangeListener)>"->"load.r r0";
    "load.r r0"->"new javax.swing.JLabel";
    "new javax.swing.JLabel"->"dup1.r";
    "push \"number\""
    "dup1.r"->"push \"number\"";
    "push \"number\""->"specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>";
    "fieldput <com.mindprod.inwords.InWords: javax.swing.JLabel theNumberLabel>"
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>"->"fieldput <com.mindprod.inwords.InWords: javax.swing.JLabel theNumberLabel>";
    "fieldput <com.mindprod.inwords.InWords: javax.swing.JLabel theNumberLabel>"->"load.r r0";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel theNumberLabel>"
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel theNumberLabel>";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel theNumberLabel>"->"push \"Dialog\"";
    "push \"Dialog\""->"push 1";
    "push 1"->"push 15";
    "push 15"->"staticinvoke <com.mindprod.common15.FontFactory: java.awt.Font build(java.lang.String,int,int)>";
    "staticinvoke <com.mindprod.common15.FontFactory: java.awt.Font build(java.lang.String,int,int)>"->"virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>";
    "virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel theNumberLabel>";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel theNumberLabel>"->"staticget <com.mindprod.inwords.InWords: java.awt.Color FOREGROUND_FOR_LABEL>";
    "staticget <com.mindprod.inwords.InWords: java.awt.Color FOREGROUND_FOR_LABEL>"->"virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>"->"load.r r0";
    "new javax.swing.JTextArea"
    "load.r r0"->"new javax.swing.JTextArea";
    "new javax.swing.JTextArea"->"dup1.r";
    "specialinvoke <javax.swing.JTextArea: void <init>()>"
    "dup1.r"->"specialinvoke <javax.swing.JTextArea: void <init>()>";
    "fieldput <com.mindprod.inwords.InWords: javax.swing.JTextArea display>"
    "specialinvoke <javax.swing.JTextArea: void <init>()>"->"fieldput <com.mindprod.inwords.InWords: javax.swing.JTextArea display>";
    "fieldput <com.mindprod.inwords.InWords: javax.swing.JTextArea display>"->"load.r r0";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JTextArea display>"
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JTextArea display>";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JTextArea display>"->"push 1";
    "virtualinvoke <javax.swing.JTextArea: void setLineWrap(boolean)>"
    "push 1"->"virtualinvoke <javax.swing.JTextArea: void setLineWrap(boolean)>";
    "virtualinvoke <javax.swing.JTextArea: void setLineWrap(boolean)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JTextArea display>";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JTextArea display>"->"push 1";
    "virtualinvoke <javax.swing.JTextArea: void setWrapStyleWord(boolean)>"
    "push 1"->"virtualinvoke <javax.swing.JTextArea: void setWrapStyleWord(boolean)>";
    "virtualinvoke <javax.swing.JTextArea: void setWrapStyleWord(boolean)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JTextArea display>";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JTextArea display>"->"push 0";
    "virtualinvoke <javax.swing.JTextArea: void setEditable(boolean)>"
    "push 0"->"virtualinvoke <javax.swing.JTextArea: void setEditable(boolean)>";
    "virtualinvoke <javax.swing.JTextArea: void setEditable(boolean)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JTextArea display>";
    "push \"Unicode\""
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JTextArea display>"->"push \"Unicode\"";
    "push \"Unicode\""->"push 0";
    "push 0"->"push 15";
    "push 15"->"staticinvoke <com.mindprod.common15.FontFactory: java.awt.Font build(java.lang.String,int,int)>";
    "virtualinvoke <javax.swing.JTextArea: void setFont(java.awt.Font)>"
    "staticinvoke <com.mindprod.common15.FontFactory: java.awt.Font build(java.lang.String,int,int)>"->"virtualinvoke <javax.swing.JTextArea: void setFont(java.awt.Font)>";
    "virtualinvoke <javax.swing.JTextArea: void setFont(java.awt.Font)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JTextArea display>";
    "staticget <com.mindprod.inwords.InWords: java.awt.Color FOREGROUND_FOR_DISPLAY>"
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JTextArea display>"->"staticget <com.mindprod.inwords.InWords: java.awt.Color FOREGROUND_FOR_DISPLAY>";
    "virtualinvoke <javax.swing.JTextArea: void setForeground(java.awt.Color)>"
    "staticget <com.mindprod.inwords.InWords: java.awt.Color FOREGROUND_FOR_DISPLAY>"->"virtualinvoke <javax.swing.JTextArea: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JTextArea: void setForeground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"new javax.swing.JLabel";
    "new javax.swing.JLabel"->"dup1.r";
    "push \"Select language, enter number (with or without commas), and hit enter.\""
    "dup1.r"->"push \"Select language, enter number (with or without commas), and hit enter.\"";
    "push \"Select language, enter number (with or without commas), and hit enter.\""->"specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>";
    "fieldput <com.mindprod.inwords.InWords: javax.swing.JLabel instructions>"
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>"->"fieldput <com.mindprod.inwords.InWords: javax.swing.JLabel instructions>";
    "fieldput <com.mindprod.inwords.InWords: javax.swing.JLabel instructions>"->"load.r r0";
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel instructions>"
    "load.r r0"->"fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel instructions>";
    "staticget <com.mindprod.inwords.InWords: java.awt.Color FOREGROUND_FOR_INSTRUCTIONS>"
    "fieldget <com.mindprod.inwords.InWords: javax.swing.JLabel instructions>"->"staticget <com.mindprod.inwords.InWords: java.awt.Color FOREGROUND_FOR_INSTRUCTIONS>";
    "staticget <com.mindprod.inwords.InWords: java.awt.Color FOREGROUND_FOR_INSTRUCTIONS>"->"virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>"->"load.r r0";
    "specialinvoke <com.mindprod.inwords.InWords: void refresh()>"
    "load.r r0"->"specialinvoke <com.mindprod.inwords.InWords: void refresh()>";
    "specialinvoke <com.mindprod.inwords.InWords: void refresh()>"->"load.r r0";
    "load.r r0"->"load.r r1";
    "specialinvoke <com.mindprod.inwords.InWords: void layoutComponents(java.awt.Container)>"
    "load.r r1"->"specialinvoke <com.mindprod.inwords.InWords: void layoutComponents(java.awt.Container)>";
    "specialinvoke <com.mindprod.inwords.InWords: void layoutComponents(java.awt.Container)>"->"load.r r0";
    "virtualinvoke <com.mindprod.inwords.InWords: void validate()>"
    "load.r r0"->"virtualinvoke <com.mindprod.inwords.InWords: void validate()>";
    "virtualinvoke <com.mindprod.inwords.InWords: void validate()>"->"load.r r0";
    "load.r r0"->"push 1";
    "virtualinvoke <com.mindprod.inwords.InWords: void setVisible(boolean)>"
    "push 1"->"virtualinvoke <com.mindprod.inwords.InWords: void setVisible(boolean)>";
    "virtualinvoke <com.mindprod.inwords.InWords: void setVisible(boolean)>"->"return";
}
