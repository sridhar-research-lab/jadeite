digraph "" {
    "r0 := @this: Tunnel"
    "load.r r0"
    "r0 := @this: Tunnel"->"load.r r0";
    "load.r r0"->"load.r r0";
    "staticget <Tunnel: java.lang.String 'case'>"
    "load.r r0"->"staticget <Tunnel: java.lang.String 'case'>";
    "virtualinvoke <Tunnel: java.lang.String getParameter(java.lang.String)>"
    "staticget <Tunnel: java.lang.String 'case'>"->"virtualinvoke <Tunnel: java.lang.String getParameter(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"
    "virtualinvoke <Tunnel: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <Tunnel: int o>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <Tunnel: int o>";
    "fieldput <Tunnel: int o>"->"load.r r0";
    "push 1"
    "load.r r0"->"push 1";
    "push 1"->"load.r r0";
    "fieldget <Tunnel: int o>"
    "load.r r0"->"fieldget <Tunnel: int o>";
    "shl.i"
    "fieldget <Tunnel: int o>"->"shl.i";
    "fieldput <Tunnel: int 'int'>"
    "shl.i"->"fieldput <Tunnel: int 'int'>";
    "goto load.r r0"
    "fieldput <Tunnel: int 'int'>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <Tunnel: int 'int'>"
    "load.r r0"->"fieldget <Tunnel: int 'int'>";
    "push 2"
    "fieldget <Tunnel: int 'int'>"->"push 2";
    "sub.i"
    "push 2"->"sub.i";
    "fieldput <Tunnel: int 'null'>"
    "sub.i"->"fieldput <Tunnel: int 'null'>";
    "fieldput <Tunnel: int 'null'>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <Tunnel: int 'int'>";
    "fieldget <Tunnel: int 'int'>"->"push 1";
    "shr.i"
    "push 1"->"shr.i";
    "fieldput <Tunnel: int J>"
    "shr.i"->"fieldput <Tunnel: int J>";
    "fieldput <Tunnel: int J>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <Tunnel: int 'int'>";
    "fieldget <Tunnel: int 'int'>"->"load.r r0";
    "load.r r0"->"fieldget <Tunnel: int 'int'>";
    "mul.i"
    "fieldget <Tunnel: int 'int'>"->"mul.i";
    "mul.i"->"push 1";
    "push 1"->"sub.i";
    "fieldput <Tunnel: int c>"
    "sub.i"->"fieldput <Tunnel: int c>";
    "fieldput <Tunnel: int c>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "staticget <Tunnel: java.lang.String D>"
    "load.r r0"->"staticget <Tunnel: java.lang.String D>";
    "staticget <Tunnel: java.lang.String D>"->"virtualinvoke <Tunnel: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <Tunnel: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <Tunnel: int t>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <Tunnel: int t>";
    "fieldput <Tunnel: int t>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "staticget <java.awt.Color: java.awt.Color black>"
    "load.r r0"->"staticget <java.awt.Color: java.awt.Color black>";
    "virtualinvoke <Tunnel: void setBackground(java.awt.Color)>"
    "staticget <java.awt.Color: java.awt.Color black>"->"virtualinvoke <Tunnel: void setBackground(java.awt.Color)>";
    "virtualinvoke <Tunnel: void setBackground(java.awt.Color)>"->"load.r r0";
    "staticget <java.awt.Color: java.awt.Color white>"
    "load.r r0"->"staticget <java.awt.Color: java.awt.Color white>";
    "virtualinvoke <Tunnel: void setForeground(java.awt.Color)>"
    "staticget <java.awt.Color: java.awt.Color white>"->"virtualinvoke <Tunnel: void setForeground(java.awt.Color)>";
    "virtualinvoke <Tunnel: void setForeground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <Tunnel: int 'int'>";
    "fieldget <Tunnel: int 'int'>"->"load.r r0";
    "load.r r0"->"fieldget <Tunnel: int 'int'>";
    "fieldget <Tunnel: int 'int'>"->"mul.i";
    "newarray"
    "mul.i"->"newarray";
    "fieldput <Tunnel: int[] for>"
    "newarray"->"fieldput <Tunnel: int[] for>";
    "fieldput <Tunnel: int[] for>"->"load.r r0";
    "new java.awt.image.DirectColorModel"
    "load.r r0"->"new java.awt.image.DirectColorModel";
    "store.r $r8"
    "new java.awt.image.DirectColorModel"->"store.r $r8";
    "load.r $r8"
    "store.r $r8"->"load.r $r8";
    "push 32"
    "load.r $r8"->"push 32";
    "push 16711680"
    "push 32"->"push 16711680";
    "push 65280"
    "push 16711680"->"push 65280";
    "push 255"
    "push 65280"->"push 255";
    "push 0"
    "push 255"->"push 0";
    "specialinvoke <java.awt.image.DirectColorModel: void <init>(int,int,int,int,int)>"
    "push 0"->"specialinvoke <java.awt.image.DirectColorModel: void <init>(int,int,int,int,int)>";
    "new java.awt.image.MemoryImageSource"
    "specialinvoke <java.awt.image.DirectColorModel: void <init>(int,int,int,int,int)>"->"new java.awt.image.MemoryImageSource";
    "dup1.r"
    "new java.awt.image.MemoryImageSource"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <Tunnel: int 'int'>";
    "fieldget <Tunnel: int 'int'>"->"load.r r0";
    "load.r r0"->"fieldget <Tunnel: int 'int'>";
    "fieldget <Tunnel: int 'int'>"->"load.r $r8";
    "load.r $r8"->"load.r r0";
    "fieldget <Tunnel: int[] for>"
    "load.r r0"->"fieldget <Tunnel: int[] for>";
    "fieldget <Tunnel: int[] for>"->"push 0";
    "push 0"->"load.r r0";
    "load.r r0"->"fieldget <Tunnel: int 'int'>";
    "specialinvoke <java.awt.image.MemoryImageSource: void <init>(int,int,java.awt.image.ColorModel,int[],int,int)>"
    "fieldget <Tunnel: int 'int'>"->"specialinvoke <java.awt.image.MemoryImageSource: void <init>(int,int,java.awt.image.ColorModel,int[],int,int)>";
    "fieldput <Tunnel: java.awt.image.MemoryImageSource E>"
    "specialinvoke <java.awt.image.MemoryImageSource: void <init>(int,int,java.awt.image.ColorModel,int[],int,int)>"->"fieldput <Tunnel: java.awt.image.MemoryImageSource E>";
    "fieldput <Tunnel: java.awt.image.MemoryImageSource E>"->"load.r r0";
    "fieldget <Tunnel: java.awt.image.MemoryImageSource E>"
    "load.r r0"->"fieldget <Tunnel: java.awt.image.MemoryImageSource E>";
    "fieldget <Tunnel: java.awt.image.MemoryImageSource E>"->"push 1";
    "virtualinvoke <java.awt.image.MemoryImageSource: void setAnimated(boolean)>"
    "push 1"->"virtualinvoke <java.awt.image.MemoryImageSource: void setAnimated(boolean)>";
    "virtualinvoke <java.awt.image.MemoryImageSource: void setAnimated(boolean)>"->"load.r r0";
    "load.r r0"->"fieldget <Tunnel: java.awt.image.MemoryImageSource E>";
    "fieldget <Tunnel: java.awt.image.MemoryImageSource E>"->"push 1";
    "virtualinvoke <java.awt.image.MemoryImageSource: void setFullBufferUpdates(boolean)>"
    "push 1"->"virtualinvoke <java.awt.image.MemoryImageSource: void setFullBufferUpdates(boolean)>";
    "virtualinvoke <java.awt.image.MemoryImageSource: void setFullBufferUpdates(boolean)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <Tunnel: java.awt.image.MemoryImageSource E>";
    "virtualinvoke <Tunnel: java.awt.Image createImage(java.awt.image.ImageProducer)>"
    "fieldget <Tunnel: java.awt.image.MemoryImageSource E>"->"virtualinvoke <Tunnel: java.awt.Image createImage(java.awt.image.ImageProducer)>";
    "fieldput <Tunnel: java.awt.Image I>"
    "virtualinvoke <Tunnel: java.awt.Image createImage(java.awt.image.ImageProducer)>"->"fieldput <Tunnel: java.awt.Image I>";
    "fieldput <Tunnel: java.awt.Image I>"->"load.r r0";
    "new Tunnel$a"
    "load.r r0"->"new Tunnel$a";
    "new Tunnel$a"->"dup1.r";
    "dup1.r"->"load.r r0";
    "push null"
    "load.r r0"->"push null";
    "specialinvoke <Tunnel$a: void <init>(Tunnel,Tunnel$1)>"
    "push null"->"specialinvoke <Tunnel$a: void <init>(Tunnel,Tunnel$1)>";
    "virtualinvoke <Tunnel: void addMouseListener(java.awt.event.MouseListener)>"
    "specialinvoke <Tunnel$a: void <init>(Tunnel,Tunnel$1)>"->"virtualinvoke <Tunnel: void addMouseListener(java.awt.event.MouseListener)>";
    "virtualinvoke <Tunnel: void addMouseListener(java.awt.event.MouseListener)>"->"load.r r0";
    "new Tunnel$b"
    "load.r r0"->"new Tunnel$b";
    "new Tunnel$b"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"push null";
    "specialinvoke <Tunnel$b: void <init>(Tunnel,Tunnel$1)>"
    "push null"->"specialinvoke <Tunnel$b: void <init>(Tunnel,Tunnel$1)>";
    "virtualinvoke <Tunnel: void addMouseMotionListener(java.awt.event.MouseMotionListener)>"
    "specialinvoke <Tunnel$b: void <init>(Tunnel,Tunnel$1)>"->"virtualinvoke <Tunnel: void addMouseMotionListener(java.awt.event.MouseMotionListener)>";
    "staticinvoke <java.lang.System: void gc()>"
    "virtualinvoke <Tunnel: void addMouseMotionListener(java.awt.event.MouseMotionListener)>"->"staticinvoke <java.lang.System: void gc()>";
    "return"
    "staticinvoke <java.lang.System: void gc()>"->"return";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"store.r $r8";
    "store.r $r8"->"load.r r0";
    "push 3"
    "load.r r0"->"push 3";
    "push 3"->"fieldput <Tunnel: int t>";
    "shl.i"->"store.r $r8";
    "store.r $r8"->"load.r r0";
    "load.r r0"->"push 255";
    "push 255"->"fieldput <Tunnel: int 'int'>";
    "fieldput <Tunnel: int 'int'>"->"load.r r0";
    "push 8"
    "load.r r0"->"push 8";
    "push 8"->"fieldput <Tunnel: int o>";
}
