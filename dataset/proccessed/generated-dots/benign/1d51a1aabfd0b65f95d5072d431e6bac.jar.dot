digraph "" {
    "r0 := @this: CabriJava"
    "load.r r0"
    "r0 := @this: CabriJava"->"load.r r0";
    "specialinvoke <java.applet.Applet: void init()>"
    "load.r r0"->"specialinvoke <java.applet.Applet: void init()>";
    "staticget <java.lang.System: java.io.PrintStream out>"
    "specialinvoke <java.applet.Applet: void init()>"->"staticget <java.lang.System: java.io.PrintStream out>";
    "push \"Cabri Java 1.0 release 1-June-2001\nCopyright \u00a9 1998-2001 by Cabri Geometry (CNRS-UJF)\nSee http://www.cabri.net/cabrijava for new release.\""
    "staticget <java.lang.System: java.io.PrintStream out>"->"push \"Cabri Java 1.0 release 1-June-2001\nCopyright \u00a9 1998-2001 by Cabri Geometry (CNRS-UJF)\nSee http://www.cabri.net/cabrijava for new release.\"";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"
    "push \"Cabri Java 1.0 release 1-June-2001\nCopyright \u00a9 1998-2001 by Cabri Geometry (CNRS-UJF)\nSee http://www.cabri.net/cabrijava for new release.\""->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"load.r r0";
    "virtualinvoke <java.applet.Applet: java.applet.AppletContext getAppletContext()>"
    "load.r r0"->"virtualinvoke <java.applet.Applet: java.applet.AppletContext getAppletContext()>";
    "staticput <CabriJava: java.applet.AppletContext aF>"
    "virtualinvoke <java.applet.Applet: java.applet.AppletContext getAppletContext()>"->"staticput <CabriJava: java.applet.AppletContext aF>";
    "staticget <CabriJava: java.applet.AppletContext aF>"
    "staticput <CabriJava: java.applet.AppletContext aF>"->"staticget <CabriJava: java.applet.AppletContext aF>";
    "virtualinvoke <java.lang.Object: java.lang.String toString()>"
    "staticget <CabriJava: java.applet.AppletContext aF>"->"virtualinvoke <java.lang.Object: java.lang.String toString()>";
    "store.r r1"
    "virtualinvoke <java.lang.Object: java.lang.String toString()>"->"store.r r1";
    "load.r r1"
    "store.r r1"->"load.r r1";
    "push \"netscape.applet.\""
    "load.r r1"->"push \"netscape.applet.\"";
    "virtualinvoke <java.lang.String: boolean startsWith(java.lang.String)>"
    "push \"netscape.applet.\""->"virtualinvoke <java.lang.String: boolean startsWith(java.lang.String)>";
    "ifeq load.r r1"
    "virtualinvoke <java.lang.String: boolean startsWith(java.lang.String)>"->"ifeq load.r r1";
    "ifeq load.r r1"->"load.r r0";
    "push \"NETSCAPE\""
    "load.r r0"->"push \"NETSCAPE\"";
    "fieldput <CabriJava: java.lang.String 'byte'>"
    "push \"NETSCAPE\""->"fieldput <CabriJava: java.lang.String 'byte'>";
    "goto load.r r0"
    "fieldput <CabriJava: java.lang.String 'byte'>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "fieldget <CabriJava: java.lang.String 'byte'>"
    "load.r r0"->"fieldget <CabriJava: java.lang.String 'byte'>";
    "push \"MICROSOFT\""
    "fieldget <CabriJava: java.lang.String 'byte'>"->"push \"MICROSOFT\"";
    "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"
    "push \"MICROSOFT\""->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
    "ifne load.r r0"
    "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"ifne load.r r0";
    "ifne load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: java.awt.Toolkit getToolkit()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Toolkit getToolkit()>";
    "virtualinvoke <java.awt.Toolkit: java.awt.datatransfer.Clipboard getSystemClipboard()>"
    "virtualinvoke <java.awt.Component: java.awt.Toolkit getToolkit()>"->"virtualinvoke <java.awt.Toolkit: java.awt.datatransfer.Clipboard getSystemClipboard()>";
    "fieldput <CabriJava: java.awt.datatransfer.Clipboard bh>"
    "virtualinvoke <java.awt.Toolkit: java.awt.datatransfer.Clipboard getSystemClipboard()>"->"fieldput <CabriJava: java.awt.datatransfer.Clipboard bh>";
    "fieldput <CabriJava: java.awt.datatransfer.Clipboard bh>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "push \"lang\""
    "load.r r0"->"push \"lang\"";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"
    "push \"lang\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r1";
    "store.r r1"->"load.r r1";
    "ifnull load.r r0"
    "load.r r1"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r0";
    "load.r r0"->"load.r r1";
    "fieldput <CabriJava: java.lang.String aK>"
    "load.r r1"->"fieldput <CabriJava: java.lang.String aK>";
    "fieldput <CabriJava: java.lang.String aK>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "fieldget <CabriJava: java.lang.String aK>"
    "load.r r0"->"fieldget <CabriJava: java.lang.String aK>";
    "push \"cs\""
    "fieldget <CabriJava: java.lang.String aK>"->"push \"cs\"";
    "push \"cs\""->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
    "ifeq load.r r0"
    "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "push \"cz\""
    "load.r r0"->"push \"cz\"";
    "push \"cz\""->"fieldput <CabriJava: java.lang.String aK>";
    "fieldput <CabriJava: java.lang.String aK>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.lang.String aK>";
    "specialinvoke <CabriJava: void 'if'(java.lang.String)>"
    "fieldget <CabriJava: java.lang.String aK>"->"specialinvoke <CabriJava: void 'if'(java.lang.String)>";
    "push 0"
    "specialinvoke <CabriJava: void 'if'(java.lang.String)>"->"push 0";
    "store.i r9"
    "push 0"->"store.i r9";
    "goto load.i r9"
    "store.i r9"->"goto load.i r9";
    "load.i r9"
    "goto load.i r9"->"load.i r9";
    "load.i r9"->"load.r r0";
    "fieldget <CabriJava: java.lang.String 'null'>"
    "load.r r0"->"fieldget <CabriJava: java.lang.String 'null'>";
    "virtualinvoke <java.lang.String: int length()>"
    "fieldget <CabriJava: java.lang.String 'null'>"->"virtualinvoke <java.lang.String: int length()>";
    "ifcmplt.i load.r r0"
    "virtualinvoke <java.lang.String: int length()>"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "push \"os.name\""
    "load.r r0"->"push \"os.name\"";
    "staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>"
    "push \"os.name\""->"staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>";
    "fieldput <CabriJava: java.lang.String aE>"
    "staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>"->"fieldput <CabriJava: java.lang.String aE>";
    "fieldput <CabriJava: java.lang.String aE>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: java.awt.Container getParent()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Container getParent()>";
    "fieldput <CabriJava: java.awt.Container ai>"
    "virtualinvoke <java.awt.Component: java.awt.Container getParent()>"->"fieldput <CabriJava: java.awt.Container ai>";
    "fieldput <CabriJava: java.awt.Container ai>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "fieldget <CabriJava: java.awt.Container ai>"
    "load.r r0"->"fieldget <CabriJava: java.awt.Container ai>";
    "instanceof"
    "fieldget <CabriJava: java.awt.Container ai>"->"instanceof";
    "instanceof"->"ifne load.r r0";
    "ifne load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Container ai>";
    "ifnonnull load.r r0"
    "fieldget <CabriJava: java.awt.Container ai>"->"ifnonnull load.r r0";
    "ifnonnull load.r r0"->"load.r r0";
    "push 1"
    "load.r r0"->"push 1";
    "specialinvoke <CabriJava: void a(int)>"
    "push 1"->"specialinvoke <CabriJava: void a(int)>";
    "specialinvoke <CabriJava: void a(int)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>";
    "fieldput <CabriJava: java.awt.Dimension be>"
    "virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>"->"fieldput <CabriJava: java.awt.Dimension be>";
    "fieldput <CabriJava: java.awt.Dimension be>"->"load.r r0";
    "push null"
    "load.r r0"->"push null";
    "virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>"
    "push null"->"virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>";
    "virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>"->"load.r r0";
    "new java.awt.MediaTracker"
    "load.r r0"->"new java.awt.MediaTracker";
    "dup1.r"
    "new java.awt.MediaTracker"->"dup1.r";
    "dup1.r"->"load.r r0";
    "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"
    "load.r r0"->"specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>";
    "fieldput <CabriJava: java.awt.MediaTracker a3>"
    "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"->"fieldput <CabriJava: java.awt.MediaTracker a3>";
    "fieldput <CabriJava: java.awt.MediaTracker a3>"->"load.r r0";
    "new java.util.Vector"
    "load.r r0"->"new java.util.Vector";
    "new java.util.Vector"->"dup1.r";
    "specialinvoke <java.util.Vector: void <init>()>"
    "dup1.r"->"specialinvoke <java.util.Vector: void <init>()>";
    "fieldput <CabriJava: java.util.Vector M>"
    "specialinvoke <java.util.Vector: void <init>()>"->"fieldput <CabriJava: java.util.Vector M>";
    "fieldput <CabriJava: java.util.Vector M>"->"load.r r0";
    "load.r r0"->"new java.util.Vector";
    "new java.util.Vector"->"dup1.r";
    "dup1.r"->"specialinvoke <java.util.Vector: void <init>()>";
    "fieldput <CabriJava: java.util.Vector do>"
    "specialinvoke <java.util.Vector: void <init>()>"->"fieldput <CabriJava: java.util.Vector do>";
    "fieldput <CabriJava: java.util.Vector do>"->"load.r r0";
    "load.r r0"->"new java.util.Vector";
    "new java.util.Vector"->"dup1.r";
    "dup1.r"->"specialinvoke <java.util.Vector: void <init>()>";
    "fieldput <CabriJava: java.util.Vector aO>"
    "specialinvoke <java.util.Vector: void <init>()>"->"fieldput <CabriJava: java.util.Vector aO>";
    "fieldput <CabriJava: java.util.Vector aO>"->"load.r r0";
    "load.r r0"->"new java.util.Vector";
    "new java.util.Vector"->"dup1.r";
    "dup1.r"->"specialinvoke <java.util.Vector: void <init>()>";
    "fieldput <CabriJava: java.util.Vector H>"
    "specialinvoke <java.util.Vector: void <init>()>"->"fieldput <CabriJava: java.util.Vector H>";
    "fieldput <CabriJava: java.util.Vector H>"->"load.r r0";
    "load.r r0"->"new java.util.Vector";
    "new java.util.Vector"->"dup1.r";
    "dup1.r"->"specialinvoke <java.util.Vector: void <init>()>";
    "fieldput <CabriJava: java.util.Vector bu>"
    "specialinvoke <java.util.Vector: void <init>()>"->"fieldput <CabriJava: java.util.Vector bu>";
    "fieldput <CabriJava: java.util.Vector bu>"->"load.r r0";
    "load.r r0"->"new java.util.Vector";
    "new java.util.Vector"->"dup1.r";
    "dup1.r"->"specialinvoke <java.util.Vector: void <init>()>";
    "fieldput <CabriJava: java.util.Vector bz>"
    "specialinvoke <java.util.Vector: void <init>()>"->"fieldput <CabriJava: java.util.Vector bz>";
    "fieldput <CabriJava: java.util.Vector bz>"->"load.r r0";
    "load.r r0"->"new java.util.Vector";
    "new java.util.Vector"->"dup1.r";
    "dup1.r"->"specialinvoke <java.util.Vector: void <init>()>";
    "fieldput <CabriJava: java.util.Vector w>"
    "specialinvoke <java.util.Vector: void <init>()>"->"fieldput <CabriJava: java.util.Vector w>";
    "fieldput <CabriJava: java.util.Vector w>"->"load.r r0";
    "load.r r0"->"new java.util.Vector";
    "new java.util.Vector"->"dup1.r";
    "dup1.r"->"specialinvoke <java.util.Vector: void <init>()>";
    "fieldput <CabriJava: java.util.Vector P>"
    "specialinvoke <java.util.Vector: void <init>()>"->"fieldput <CabriJava: java.util.Vector P>";
    "fieldput <CabriJava: java.util.Vector P>"->"load.r r0";
    "load.r r0"->"push null";
    "fieldput <CabriJava: a1 Y>"
    "push null"->"fieldput <CabriJava: a1 Y>";
    "fieldput <CabriJava: a1 Y>"->"load.r r0";
    "load.r r0"->"push 1";
    "fieldput <CabriJava: boolean aa>"
    "push 1"->"fieldput <CabriJava: boolean aa>";
    "fieldput <CabriJava: boolean aa>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>"
    "load.r r0"->"virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>";
    "virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>"
    "load.r r0"->"virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>";
    "virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>"->"load.r r0";
    "new java.util.Date"
    "load.r r0"->"new java.util.Date";
    "new java.util.Date"->"dup1.r";
    "specialinvoke <java.util.Date: void <init>()>"
    "dup1.r"->"specialinvoke <java.util.Date: void <init>()>";
    "virtualinvoke <java.util.Date: long getTime()>"
    "specialinvoke <java.util.Date: void <init>()>"->"virtualinvoke <java.util.Date: long getTime()>";
    "fieldput <CabriJava: long 'goto'>"
    "virtualinvoke <java.util.Date: long getTime()>"->"fieldput <CabriJava: long 'goto'>";
    "fieldput <CabriJava: long 'goto'>"->"load.r r0";
    "push \"bgcolor\""
    "load.r r0"->"push \"bgcolor\"";
    "push \"bgcolor\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r1";
    "push \"#\""
    "load.r r1"->"push \"#\"";
    "push \"#\""->"virtualinvoke <java.lang.String: boolean startsWith(java.lang.String)>";
    "virtualinvoke <java.lang.String: boolean startsWith(java.lang.String)>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "new java.awt.Color"
    "load.r r0"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"load.r r1";
    "load.r r1"->"push 1";
    "virtualinvoke <java.lang.String: java.lang.String substring(int)>"
    "push 1"->"virtualinvoke <java.lang.String: java.lang.String substring(int)>";
    "push 16"
    "virtualinvoke <java.lang.String: java.lang.String substring(int)>"->"push 16";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>"
    "push 16"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>";
    "specialinvoke <java.awt.Color: void <init>(int)>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
    "fieldput <CabriJava: java.awt.Color aL>"
    "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <CabriJava: java.awt.Color aL>";
    "fieldput <CabriJava: java.awt.Color aL>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "push \"bordercolor\""
    "load.r r0"->"push \"bordercolor\"";
    "push \"bordercolor\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r1";
    "load.r r1"->"push \"#\"";
    "push \"#\""->"virtualinvoke <java.lang.String: boolean startsWith(java.lang.String)>";
    "virtualinvoke <java.lang.String: boolean startsWith(java.lang.String)>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"load.r r1";
    "load.r r1"->"push 1";
    "push 1"->"virtualinvoke <java.lang.String: java.lang.String substring(int)>";
    "virtualinvoke <java.lang.String: java.lang.String substring(int)>"->"push 16";
    "push 16"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
    "fieldput <CabriJava: java.awt.Color aR>"
    "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <CabriJava: java.awt.Color aR>";
    "fieldput <CabriJava: java.awt.Color aR>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "push \"border\""
    "load.r r0"->"push \"border\"";
    "push \"border\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"ifnonnull load.r r0";
    "ifnonnull load.r r0"->"load.r r0";
    "load.r r0"->"push 1";
    "fieldput <CabriJava: int aD>"
    "push 1"->"fieldput <CabriJava: int aD>";
    "fieldput <CabriJava: int aD>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "push \"xposition\""
    "load.r r0"->"push \"xposition\"";
    "push \"xposition\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r0";
    "load.r r0"->"load.r r1";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"
    "load.r r1"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <CabriJava: int au>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <CabriJava: int au>";
    "fieldput <CabriJava: int au>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "push \"yposition\""
    "load.r r0"->"push \"yposition\"";
    "push \"yposition\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r0";
    "load.r r0"->"load.r r1";
    "load.r r1"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <CabriJava: int ar>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <CabriJava: int ar>";
    "fieldput <CabriJava: int ar>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "push \"opaque\""
    "load.r r0"->"push \"opaque\"";
    "push \"opaque\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"ifnonnull load.r r0";
    "ifnonnull load.r r0"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <CabriJava: boolean bg>"
    "push 0"->"fieldput <CabriJava: boolean bg>";
    "fieldput <CabriJava: boolean bg>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <CabriJava: java.awt.Dimension be>"
    "load.r r0"->"fieldget <CabriJava: java.awt.Dimension be>";
    "fieldget <java.awt.Dimension: int width>"
    "fieldget <CabriJava: java.awt.Dimension be>"->"fieldget <java.awt.Dimension: int width>";
    "fieldget <java.awt.Dimension: int width>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Dimension be>";
    "fieldget <java.awt.Dimension: int height>"
    "fieldget <CabriJava: java.awt.Dimension be>"->"fieldget <java.awt.Dimension: int height>";
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"
    "fieldget <java.awt.Dimension: int height>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
    "fieldput <CabriJava: java.awt.Image a6>"
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <CabriJava: java.awt.Image a6>";
    "fieldput <CabriJava: java.awt.Image a6>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <CabriJava: java.awt.Image a6>"
    "load.r r0"->"fieldget <CabriJava: java.awt.Image a6>";
    "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"
    "fieldget <CabriJava: java.awt.Image a6>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
    "fieldput <CabriJava: java.awt.Graphics ba>"
    "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <CabriJava: java.awt.Graphics ba>";
    "fieldput <CabriJava: java.awt.Graphics ba>"->"load.r r0";
    "push \"background\""
    "load.r r0"->"push \"background\"";
    "push \"background\""->"store.r r1";
    "store.r r1"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "fieldget <CabriJava: java.awt.Image R>"
    "load.r r0"->"fieldget <CabriJava: java.awt.Image R>";
    "fieldget <CabriJava: java.awt.Image R>"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r0";
    "fieldget <CabriJava: java.awt.MediaTracker a3>"
    "load.r r0"->"fieldget <CabriJava: java.awt.MediaTracker a3>";
    "fieldget <CabriJava: java.awt.MediaTracker a3>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Image R>";
    "fieldget <CabriJava: java.awt.Image R>"->"push 0";
    "push 0"->"store.r r1";
    "store.r r1"->"load.r r0";
    "load.r r0"->"push null";
    "fieldput <CabriJava: java.awt.Image R>"
    "push null"->"fieldput <CabriJava: java.awt.Image R>";
    "fieldput <CabriJava: java.awt.Image R>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Image R>";
    "fieldget <CabriJava: java.awt.Image R>"->"ifnonnull load.r r0";
    "ifnonnull load.r r0"->"load.r r0";
    "fieldget <CabriJava: java.awt.Graphics ba>"
    "load.r r0"->"fieldget <CabriJava: java.awt.Graphics ba>";
    "fieldget <CabriJava: java.awt.Graphics ba>"->"load.r r0";
    "fieldget <CabriJava: java.awt.Color aL>"
    "load.r r0"->"fieldget <CabriJava: java.awt.Color aL>";
    "virtualinvoke <java.awt.Graphics: void setColor(java.awt.Color)>"
    "fieldget <CabriJava: java.awt.Color aL>"->"virtualinvoke <java.awt.Graphics: void setColor(java.awt.Color)>";
    "virtualinvoke <java.awt.Graphics: void setColor(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Graphics ba>";
    "fieldget <CabriJava: java.awt.Graphics ba>"->"push 0";
    "push 0"->"push 0";
    "push 0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Dimension be>";
    "fieldget <CabriJava: java.awt.Dimension be>"->"fieldget <java.awt.Dimension: int width>";
    "fieldget <java.awt.Dimension: int width>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Dimension be>";
    "fieldget <CabriJava: java.awt.Dimension be>"->"fieldget <java.awt.Dimension: int height>";
    "virtualinvoke <java.awt.Graphics: void fillRect(int,int,int,int)>"
    "fieldget <java.awt.Dimension: int height>"->"virtualinvoke <java.awt.Graphics: void fillRect(int,int,int,int)>";
    "virtualinvoke <java.awt.Graphics: void fillRect(int,int,int,int)>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "fieldget <CabriJava: int aD>"
    "load.r r0"->"fieldget <CabriJava: int aD>";
    "ifle load.r r0"
    "fieldget <CabriJava: int aD>"->"ifle load.r r0";
    "ifle load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Graphics ba>";
    "fieldget <CabriJava: java.awt.Graphics ba>"->"load.r r0";
    "fieldget <CabriJava: java.awt.Color aR>"
    "load.r r0"->"fieldget <CabriJava: java.awt.Color aR>";
    "fieldget <CabriJava: java.awt.Color aR>"->"virtualinvoke <java.awt.Graphics: void setColor(java.awt.Color)>";
    "virtualinvoke <java.awt.Graphics: void setColor(java.awt.Color)>"->"push 0";
    "store.i r1"
    "push 0"->"store.i r1";
    "goto load.i r1"
    "store.i r1"->"goto load.i r1";
    "load.i r1"
    "goto load.i r1"->"load.i r1";
    "load.i r1"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: int aD>";
    "fieldget <CabriJava: int aD>"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Graphics ba>";
    "fieldget <CabriJava: java.awt.Graphics ba>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: int aD>";
    "fieldget <CabriJava: int aD>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: int aD>";
    "fieldget <CabriJava: int aD>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Dimension be>";
    "fieldget <CabriJava: java.awt.Dimension be>"->"fieldget <java.awt.Dimension: int width>";
    "push 2"
    "fieldget <java.awt.Dimension: int width>"->"push 2";
    "push 2"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: int aD>";
    "mul.i"
    "fieldget <CabriJava: int aD>"->"mul.i";
    "sub.i"
    "mul.i"->"sub.i";
    "sub.i"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Dimension be>";
    "fieldget <CabriJava: java.awt.Dimension be>"->"fieldget <java.awt.Dimension: int height>";
    "fieldget <java.awt.Dimension: int height>"->"push 2";
    "push 2"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: int aD>";
    "fieldget <CabriJava: int aD>"->"mul.i";
    "mul.i"->"sub.i";
    "virtualinvoke <java.awt.Graphics: void clipRect(int,int,int,int)>"
    "sub.i"->"virtualinvoke <java.awt.Graphics: void clipRect(int,int,int,int)>";
    "virtualinvoke <java.awt.Graphics: void clipRect(int,int,int,int)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Dimension be>";
    "fieldget <CabriJava: java.awt.Dimension be>"->"fieldget <java.awt.Dimension: int width>";
    "fieldget <java.awt.Dimension: int width>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Dimension be>";
    "fieldget <CabriJava: java.awt.Dimension be>"->"fieldget <java.awt.Dimension: int height>";
    "fieldget <java.awt.Dimension: int height>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
    "fieldput <CabriJava: java.awt.Image b>"
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <CabriJava: java.awt.Image b>";
    "fieldput <CabriJava: java.awt.Image b>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <CabriJava: java.awt.Image b>"
    "load.r r0"->"fieldget <CabriJava: java.awt.Image b>";
    "fieldget <CabriJava: java.awt.Image b>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
    "fieldput <CabriJava: java.awt.Graphics aY>"
    "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <CabriJava: java.awt.Graphics aY>";
    "fieldput <CabriJava: java.awt.Graphics aY>"->"load.r r0";
    "fieldget <CabriJava: java.lang.String aE>"
    "load.r r0"->"fieldget <CabriJava: java.lang.String aE>";
    "push \"Mac\""
    "fieldget <CabriJava: java.lang.String aE>"->"push \"Mac\"";
    "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"
    "push \"Mac\""->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
    "push -1"
    "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"push -1";
    "ifcmpeq.i new java.awt.Font"
    "push -1"->"ifcmpeq.i new java.awt.Font";
    "ifcmpeq.i new java.awt.Font"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.lang.String aE>";
    "push \"Win\""
    "fieldget <CabriJava: java.lang.String aE>"->"push \"Win\"";
    "push \"Win\""->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
    "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"push -1";
    "push -1"->"ifcmpeq.i new java.awt.Font";
    "new java.awt.Font"
    "ifcmpeq.i new java.awt.Font"->"new java.awt.Font";
    "new java.awt.Font"->"dup1.r";
    "push \"TimesRoman\""
    "dup1.r"->"push \"TimesRoman\"";
    "push \"TimesRoman\""->"push 0";
    "push 10"
    "push 0"->"push 10";
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"
    "push 10"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"store.r r1";
    "store.r r1"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <CabriJava: java.awt.Graphics aY>"
    "load.r r0"->"fieldget <CabriJava: java.awt.Graphics aY>";
    "fieldget <CabriJava: java.awt.Graphics aY>"->"load.r r1";
    "virtualinvoke <java.awt.Graphics: java.awt.FontMetrics getFontMetrics(java.awt.Font)>"
    "load.r r1"->"virtualinvoke <java.awt.Graphics: java.awt.FontMetrics getFontMetrics(java.awt.Font)>";
    "fieldput <CabriJava: java.awt.FontMetrics aj>"
    "virtualinvoke <java.awt.Graphics: java.awt.FontMetrics getFontMetrics(java.awt.Font)>"->"fieldput <CabriJava: java.awt.FontMetrics aj>";
    "fieldput <CabriJava: java.awt.FontMetrics aj>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Graphics aY>";
    "fieldget <CabriJava: java.awt.Graphics aY>"->"load.r r1";
    "virtualinvoke <java.awt.Graphics: void setFont(java.awt.Font)>"
    "load.r r1"->"virtualinvoke <java.awt.Graphics: void setFont(java.awt.Font)>";
    "virtualinvoke <java.awt.Graphics: void setFont(java.awt.Font)>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Graphics aY>";
    "fieldget <CabriJava: java.awt.Graphics aY>"->"push 0";
    "push 0"->"push 0";
    "push 0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Dimension be>";
    "fieldget <CabriJava: java.awt.Dimension be>"->"fieldget <java.awt.Dimension: int width>";
    "fieldget <java.awt.Dimension: int width>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Dimension be>";
    "fieldget <CabriJava: java.awt.Dimension be>"->"fieldget <java.awt.Dimension: int height>";
    "fieldget <java.awt.Dimension: int height>"->"virtualinvoke <java.awt.Graphics: void clipRect(int,int,int,int)>";
    "virtualinvoke <java.awt.Graphics: void clipRect(int,int,int,int)>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "push \"controller\""
    "load.r r0"->"push \"controller\"";
    "push \"controller\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"ifnonnull load.r r0";
    "ifnonnull load.r r0"->"load.r r0";
    "load.r r0"->"push 1";
    "fieldput <CabriJava: boolean 'new'>"
    "push 1"->"fieldput <CabriJava: boolean 'new'>";
    "fieldput <CabriJava: boolean 'new'>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "fieldget <CabriJava: boolean 'new'>"
    "load.r r0"->"fieldget <CabriJava: boolean 'new'>";
    "fieldget <CabriJava: boolean 'new'>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "new java.io.BufferedInputStream"
    "load.r r0"->"new java.io.BufferedInputStream";
    "new java.io.BufferedInputStream"->"dup1.r";
    "dup1.r"->"load.r r0";
    "virtualinvoke <java.lang.Object: java.lang.Class getClass()>"
    "load.r r0"->"virtualinvoke <java.lang.Object: java.lang.Class getClass()>";
    "push \"tools.gif\""
    "virtualinvoke <java.lang.Object: java.lang.Class getClass()>"->"push \"tools.gif\"";
    "virtualinvoke <java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>"
    "push \"tools.gif\""->"virtualinvoke <java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>";
    "specialinvoke <java.io.BufferedInputStream: void <init>(java.io.InputStream)>"
    "virtualinvoke <java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>"->"specialinvoke <java.io.BufferedInputStream: void <init>(java.io.InputStream)>";
    "push 10000"
    "specialinvoke <java.io.BufferedInputStream: void <init>(java.io.InputStream)>"->"push 10000";
    "newarray"
    "push 10000"->"newarray";
    "newarray"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"push 0";
    "push 0"->"push 10000";
    "virtualinvoke <java.io.BufferedInputStream: int read(byte[],int,int)>"
    "push 10000"->"virtualinvoke <java.io.BufferedInputStream: int read(byte[],int,int)>";
    "store.i $i2"
    "virtualinvoke <java.io.BufferedInputStream: int read(byte[],int,int)>"->"store.i $i2";
    "staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>"
    "store.i $i2"->"staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>";
    "staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>"->"load.r r1";
    "load.r r1"->"push 0";
    "load.i $i2"
    "push 0"->"load.i $i2";
    "virtualinvoke <java.awt.Toolkit: java.awt.Image createImage(byte[],int,int)>"
    "load.i $i2"->"virtualinvoke <java.awt.Toolkit: java.awt.Image createImage(byte[],int,int)>";
    "fieldput <CabriJava: java.awt.Image bt>"
    "virtualinvoke <java.awt.Toolkit: java.awt.Image createImage(byte[],int,int)>"->"fieldput <CabriJava: java.awt.Image bt>";
    "fieldput <CabriJava: java.awt.Image bt>"->"push 0";
    "push 0"->"store.i r1";
    "store.i r1"->"goto load.i r1";
    "goto load.i r1"->"load.i r1";
    "push 25"
    "load.i r1"->"push 25";
    "push 25"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Dimension be>";
    "fieldget <CabriJava: java.awt.Dimension be>"->"fieldget <java.awt.Dimension: int width>";
    "fieldget <java.awt.Dimension: int width>"->"push 2";
    "push 2"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: int aD>";
    "fieldget <CabriJava: int aD>"->"mul.i";
    "mul.i"->"sub.i";
    "sub.i"->"store.i r1";
    "store.i r1"->"load.i r1";
    "push 112"
    "load.i r1"->"push 112";
    "ifcmpgt.i load.r r0"
    "push 112"->"ifcmpgt.i load.r r0";
    "ifcmpgt.i load.r r0"->"load.r r0";
    "load.r r0"->"push 16";
    "fieldput <CabriJava: int o>"
    "push 16"->"fieldput <CabriJava: int o>";
    "fieldput <CabriJava: int o>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <CabriJava: int o>"
    "load.r r0"->"fieldget <CabriJava: int o>";
    "fieldput <CabriJava: int E>"
    "fieldget <CabriJava: int o>"->"fieldput <CabriJava: int E>";
    "fieldput <CabriJava: int E>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.MediaTracker a3>";
    "virtualinvoke <java.awt.MediaTracker: void waitForAll()>"
    "fieldget <CabriJava: java.awt.MediaTracker a3>"->"virtualinvoke <java.awt.MediaTracker: void waitForAll()>";
    "virtualinvoke <java.awt.MediaTracker: void waitForAll()>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "push \"input\""
    "load.r r0"->"push \"input\"";
    "push \"input\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r1";
    "push \"<QUOTE>\""
    "load.r r1"->"push \"<QUOTE>\"";
    "push \"<QUOTE>\""->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
    "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"store.i $i2";
    "push \"\""
    "store.i $i2"->"push \"\"";
    "store.r r9"
    "push \"\""->"store.r r9";
    "goto load.i $i2"
    "store.r r9"->"goto load.i $i2";
    "goto load.i $i2"->"load.i $i2";
    "load.i $i2"->"push -1";
    "ifcmpne.i new java.lang.StringBuffer"
    "push -1"->"ifcmpne.i new java.lang.StringBuffer";
    "new java.lang.StringBuffer"
    "ifcmpne.i new java.lang.StringBuffer"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "load.r r9"
    "dup1.r"->"load.r r9";
    "staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>"
    "load.r r9"->"staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"
    "staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>"->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.r r1";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
    "load.r r1"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"store.r r1";
    "store.r r1"->"load.r r1";
    "push \"<BR>\""
    "load.r r1"->"push \"<BR>\"";
    "push \"<BR>\""->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
    "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"store.i $i2";
    "store.i $i2"->"push \"\"";
    "push \"\""->"store.r r9";
    "store.r r9"->"goto load.i $i2";
    "goto load.i $i2"->"load.i $i2";
    "load.i $i2"->"push -1";
    "ifcmpne.i load.r r9"
    "push -1"->"ifcmpne.i load.r r9";
    "ifcmpne.i load.r r9"->"load.r r0";
    "load.r r0"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "dup1.r"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "dup1.r"->"load.r r9";
    "load.r r9"->"staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>";
    "staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>"->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "fieldput <CabriJava: java.lang.StringBuffer 'long'>"
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"fieldput <CabriJava: java.lang.StringBuffer 'long'>";
    "fieldput <CabriJava: java.lang.StringBuffer 'long'>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <CabriJava: java.lang.StringBuffer 'long'>"
    "load.r r0"->"fieldget <CabriJava: java.lang.StringBuffer 'long'>";
    "virtualinvoke <java.lang.StringBuffer: int length()>"
    "fieldget <CabriJava: java.lang.StringBuffer 'long'>"->"virtualinvoke <java.lang.StringBuffer: int length()>";
    "fieldput <CabriJava: int q>"
    "virtualinvoke <java.lang.StringBuffer: int length()>"->"fieldput <CabriJava: int q>";
    "fieldput <CabriJava: int q>"->"load.r r0";
    "push \"zipfile\""
    "load.r r0"->"push \"zipfile\"";
    "push \"zipfile\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r1";
    "staticinvoke <java.lang.System: void gc()>"
    "store.r r1"->"staticinvoke <java.lang.System: void gc()>";
    "staticinvoke <java.lang.System: void gc()>"->"load.r r0";
    "push \"file\""
    "load.r r0"->"push \"file\"";
    "push \"file\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "store.r $i2"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r $i2";
    "store.r $i2"->"load.r r0";
    "load.r r0"->"push null";
    "fieldput <CabriJava: java.net.URL ac>"
    "push null"->"fieldput <CabriJava: java.net.URL ac>";
    "fieldput <CabriJava: java.net.URL ac>"->"load.r r1";
    "ifnonnull load.r $i2"
    "load.r r1"->"ifnonnull load.r $i2";
    "load.r $i2"
    "ifnonnull load.r $i2"->"load.r $i2";
    "load.r $i2"->"ifnonnull load.r $i2";
    "ifnonnull load.r $i2"->"load.r r0";
    "fieldget <CabriJava: int q>"
    "load.r r0"->"fieldget <CabriJava: int q>";
    "ifne load.r $i2"
    "fieldget <CabriJava: int q>"->"ifne load.r $i2";
    "ifne load.r $i2"->"load.r r0";
    "push \"Missing Cabri figure file\nFile parameter not found\""
    "load.r r0"->"push \"Missing Cabri figure file\nFile parameter not found\"";
    "push \"Missing Cabri figure file\nFile parameter not found\""->"push 2";
    "push \"Missing figure file\""
    "push 2"->"push \"Missing figure file\"";
    "virtualinvoke <CabriJava: void a(java.lang.String,int,java.lang.String)>"
    "push \"Missing figure file\""->"virtualinvoke <CabriJava: void a(java.lang.String,int,java.lang.String)>";
    "virtualinvoke <CabriJava: void a(java.lang.String,int,java.lang.String)>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"new java.util.Vector";
    "new java.util.Vector"->"dup1.r";
    "dup1.r"->"specialinvoke <java.util.Vector: void <init>()>";
    "fieldput <CabriJava: java.util.Vector ao>"
    "specialinvoke <java.util.Vector: void <init>()>"->"fieldput <CabriJava: java.util.Vector ao>";
    "fieldput <CabriJava: java.util.Vector ao>"->"load.r r0";
    "load.r r0"->"new java.util.Vector";
    "new java.util.Vector"->"dup1.r";
    "dup1.r"->"specialinvoke <java.util.Vector: void <init>()>";
    "fieldput <CabriJava: java.util.Vector d>"
    "specialinvoke <java.util.Vector: void <init>()>"->"fieldput <CabriJava: java.util.Vector d>";
    "fieldput <CabriJava: java.util.Vector d>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <CabriJava: int aV>"
    "push 0"->"fieldput <CabriJava: int aV>";
    "fieldput <CabriJava: int aV>"->"load.r r0";
    "fieldget <CabriJava: java.util.Vector M>"
    "load.r r0"->"fieldget <CabriJava: java.util.Vector M>";
    "virtualinvoke <java.util.Vector: int size()>"
    "fieldget <CabriJava: java.util.Vector M>"->"virtualinvoke <java.util.Vector: int size()>";
    "virtualinvoke <java.util.Vector: int size()>"->"push 1";
    "push 1"->"sub.i";
    "sub.i"->"store.i r1";
    "store.i r1"->"goto load.i r1";
    "goto load.i r1"->"load.i r1";
    "ifge load.r r0"
    "load.i r1"->"ifge load.r r0";
    "ifge load.r r0"->"load.r r0";
    "fieldget <CabriJava: java.util.Vector ao>"
    "load.r r0"->"fieldget <CabriJava: java.util.Vector ao>";
    "virtualinvoke <java.util.Vector: void trimToSize()>"
    "fieldget <CabriJava: java.util.Vector ao>"->"virtualinvoke <java.util.Vector: void trimToSize()>";
    "virtualinvoke <java.util.Vector: void trimToSize()>"->"load.r r0";
    "fieldget <CabriJava: java.util.Vector d>"
    "load.r r0"->"fieldget <CabriJava: java.util.Vector d>";
    "fieldget <CabriJava: java.util.Vector d>"->"virtualinvoke <java.util.Vector: void trimToSize()>";
    "virtualinvoke <java.util.Vector: void trimToSize()>"->"load.r r0";
    "push \"step\""
    "load.r r0"->"push \"step\"";
    "push \"step\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r $i2";
    "store.r $i2"->"load.r $i2";
    "load.r $i2"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r0";
    "fieldget <CabriJava: java.net.URL ac>"
    "load.r r0"->"fieldget <CabriJava: java.net.URL ac>";
    "fieldget <CabriJava: java.net.URL ac>"->"ifnull load.r r0";
    "new java.util.StringTokenizer"
    "ifnull load.r r0"->"new java.util.StringTokenizer";
    "new java.util.StringTokenizer"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"load.r $i2";
    "push \", \""
    "load.r $i2"->"push \", \"";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"
    "push \", \""->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"load.r r1";
    "virtualinvoke <java.util.StringTokenizer: int countTokens()>"
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: int countTokens()>";
    "virtualinvoke <java.util.StringTokenizer: int countTokens()>"->"push 2";
    "ifcmpge.i load.r r1"
    "push 2"->"ifcmpge.i load.r r1";
    "ifcmpge.i load.r r1"->"staticget <java.lang.System: java.io.PrintStream out>";
    "push \"STEP param wrong : not valid element couple\""
    "staticget <java.lang.System: java.io.PrintStream out>"->"push \"STEP param wrong : not valid element couple\"";
    "push \"STEP param wrong : not valid element couple\""->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "fieldget <CabriJava: int S>"
    "load.r r0"->"fieldget <CabriJava: int S>";
    "iflt load.r r0"
    "fieldget <CabriJava: int S>"->"iflt load.r r0";
    "iflt load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: int S>";
    "fieldget <CabriJava: int S>"->"load.r r0";
    "fieldget <CabriJava: int aV>"
    "load.r r0"->"fieldget <CabriJava: int aV>";
    "ifcmple.i load.r r0"
    "fieldget <CabriJava: int aV>"->"ifcmple.i load.r r0";
    "ifcmple.i load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: int aV>";
    "fieldput <CabriJava: int S>"
    "fieldget <CabriJava: int aV>"->"fieldput <CabriJava: int S>";
    "fieldput <CabriJava: int S>"->"load.r r0";
    "push \"loop\""
    "load.r r0"->"push \"loop\"";
    "push \"loop\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r1";
    "staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>"
    "load.r r1"->"staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>";
    "virtualinvoke <java.lang.Boolean: boolean booleanValue()>"
    "staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Boolean: boolean booleanValue()>";
    "virtualinvoke <java.lang.Boolean: boolean booleanValue()>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"push 1";
    "fieldput <CabriJava: int U>"
    "push 1"->"fieldput <CabriJava: int U>";
    "fieldput <CabriJava: int U>"->"load.r r0";
    "load.r r0"->"push 1";
    "fieldput <CabriJava: boolean K>"
    "push 1"->"fieldput <CabriJava: boolean K>";
    "fieldput <CabriJava: boolean K>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "push \"autocontrol\""
    "load.r r0"->"push \"autocontrol\"";
    "push \"autocontrol\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r0";
    "load.r r0"->"load.r r1";
    "load.r r1"->"staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>";
    "staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Boolean: boolean booleanValue()>";
    "virtualinvoke <java.lang.Boolean: boolean booleanValue()>"->"fieldput <CabriJava: boolean K>";
    "fieldput <CabriJava: boolean K>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "push \"trace\""
    "load.r r0"->"push \"trace\"";
    "push \"trace\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r $i2";
    "store.r $i2"->"load.r $i2";
    "load.r $i2"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.net.URL ac>";
    "fieldget <CabriJava: java.net.URL ac>"->"ifnull load.r r0";
    "ifnull load.r r0"->"new java.util.StringTokenizer";
    "new java.util.StringTokenizer"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"load.r $i2";
    "load.r $i2"->"push \", \"";
    "push \", \""->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: int countTokens()>";
    "virtualinvoke <java.util.StringTokenizer: int countTokens()>"->"push 2";
    "push 2"->"ifcmpge.i load.r r1";
    "ifcmpge.i load.r r1"->"staticget <java.lang.System: java.io.PrintStream out>";
    "push \"TRACE param wrong : not valid value \""
    "staticget <java.lang.System: java.io.PrintStream out>"->"push \"TRACE param wrong : not valid value \"";
    "push \"TRACE param wrong : not valid value \""->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "push \"spring\""
    "load.r r0"->"push \"spring\"";
    "push \"spring\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r $i2";
    "store.r $i2"->"load.r $i2";
    "load.r $i2"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.net.URL ac>";
    "fieldget <CabriJava: java.net.URL ac>"->"ifnull load.r r0";
    "ifnull load.r r0"->"new java.util.StringTokenizer";
    "new java.util.StringTokenizer"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"load.r $i2";
    "load.r $i2"->"push \", \"";
    "push \", \""->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: int countTokens()>";
    "virtualinvoke <java.util.StringTokenizer: int countTokens()>"->"push 2";
    "push 2"->"ifcmpge.i load.r r1";
    "ifcmpge.i load.r r1"->"staticget <java.lang.System: java.io.PrintStream out>";
    "push \"SPRING param wrong : not valid value \""
    "staticget <java.lang.System: java.io.PrintStream out>"->"push \"SPRING param wrong : not valid value \"";
    "push \"SPRING param wrong : not valid value \""->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"push 0";
    "push 0"->"fieldput <CabriJava: boolean aa>";
    "return"
    "fieldput <CabriJava: boolean aa>"->"return";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"staticget <java.lang.System: java.io.PrintStream out>";
    "staticget <java.lang.System: java.io.PrintStream out>"->"store.r r1";
    "store.r r1"->"staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>";
    "staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>"->"staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>";
    "staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>"->"store.r $i2";
    "store.r $i2"->"load.r r1";
    "load.r r1"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "dup1.r"->"load.r $i2";
    "load.r $i2"->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "push \"SPRING param wrong : not valid value\""
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"push \"SPRING param wrong : not valid value\"";
    "push \"SPRING param wrong : not valid value\""->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"goto load.r r0";
    "ifcmpge.i load.r r1"->"load.r r1";
    "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
    "ifne push \"pos\""
    "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifne push \"pos\"";
    "ifne push \"pos\""->"goto load.r r0";
    "push \"pos\""
    "ifne push \"pos\""->"push \"pos\"";
    "store.r $r97"
    "push \"pos\""->"store.r $r97";
    "store.r $r97"->"push 0";
    "store.i $z27"
    "push 0"->"store.i $z27";
    "store.i $z27"->"push 0";
    "store.i $r85"
    "push 0"->"store.i $r85";
    "store.i $r85"->"load.r r1";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"store.r r9";
    "store.r r9"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "store.i i0"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"store.i i0";
    "load.i i0"
    "store.i i0"->"load.i i0";
    "load.i i0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.util.Vector M>";
    "fieldget <CabriJava: java.util.Vector M>"->"virtualinvoke <java.util.Vector: int size()>";
    "virtualinvoke <java.util.Vector: int size()>"->"ifcmple.i load.r r0";
    "ifcmple.i load.r r0"->"staticget <java.lang.System: java.io.PrintStream out>";
    "staticget <java.lang.System: java.io.PrintStream out>"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "push \"SPRING param wrong : non-existent element number \""
    "dup1.r"->"push \"SPRING param wrong : non-existent element number \"";
    "push \"SPRING param wrong : non-existent element number \""->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.i i0";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"
    "load.i i0"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"goto load.r r0";
    "ifcmple.i load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.util.Vector M>";
    "fieldget <CabriJava: java.util.Vector M>"->"load.i i0";
    "load.i i0"->"push 1";
    "push 1"->"sub.i";
    "virtualinvoke <java.util.Vector: java.lang.Object elementAt(int)>"
    "sub.i"->"virtualinvoke <java.util.Vector: java.lang.Object elementAt(int)>";
    "checkcast"
    "virtualinvoke <java.util.Vector: java.lang.Object elementAt(int)>"->"checkcast";
    "checkcast"->"store.r $i2";
    "store.r $i2"->"load.r $i2";
    "fieldget <a1: java.lang.String do>"
    "load.r $i2"->"fieldget <a1: java.lang.String do>";
    "fieldget <a1: java.lang.String do>"->"load.r r9";
    "load.r r9"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
    "ifne load.r r9"
    "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"ifne load.r r9";
    "ifne load.r r9"->"staticget <java.lang.System: java.io.PrintStream out>";
    "staticget <java.lang.System: java.io.PrintStream out>"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "push \"SPRING param wrong : wrong element \""
    "dup1.r"->"push \"SPRING param wrong : wrong element \"";
    "push \"SPRING param wrong : wrong element \""->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.r r9";
    "load.r r9"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "push \" \""
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"push \" \"";
    "push \" \""->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"load.i i0";
    "load.i i0"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"goto load.r r0";
    "ifne load.r r9"->"load.r r9";
    "push \"point\""
    "load.r r9"->"push \"point\"";
    "push \"point\""->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
    "ifne load.r r1"
    "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"ifne load.r r1";
    "ifne load.r r1"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"store.r $r97";
    "store.r $r97"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"store.i $z27";
    "store.i $z27"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"store.i $r85";
    "store.i $r85"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "store.r r342"
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"store.r r342";
    "store.r r342"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"store.i i0";
    "store.i i0"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"store.i r9";
    "load.r $r97"
    "store.i r9"->"load.r $r97";
    "load.r $r97"->"push \"pos\"";
    "push \"pos\""->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
    "ifeq staticget <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"ifeq staticget <java.lang.System: java.io.PrintStream out>";
    "load.r r342"
    "ifeq staticget <java.lang.System: java.io.PrintStream out>"->"load.r r342";
    "push \"size\""
    "load.r r342"->"push \"size\"";
    "push \"size\""->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
    "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"ifne load.r $i2";
    "ifne load.r $i2"->"staticget <java.lang.System: java.io.PrintStream out>";
    "staticget <java.lang.System: java.io.PrintStream out>"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "push \"SPRING param wrong : wrong coding : \""
    "dup1.r"->"push \"SPRING param wrong : wrong coding : \"";
    "push \"SPRING param wrong : wrong coding : \""->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.r $r97";
    "load.r $r97"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "push \" \u2260 pos \""
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"push \" \u2260 pos \"";
    "push \" \u2260 pos \""->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"load.r $r97";
    "load.r $r97"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "push \" or \""
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"push \" or \"";
    "push \" or \""->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"load.r r342";
    "load.r r342"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "push \" \u2260 size\""
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"push \" \u2260 size\"";
    "push \" \u2260 size\""->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"goto load.r r0";
    "ifne load.r $i2"->"load.r $i2";
    "load.r $i2"->"instanceof";
    "ifne new ak"
    "instanceof"->"ifne new ak";
    "new ak"
    "ifne new ak"->"new ak";
    "new ak"->"store.r $r97";
    "store.r $r97"->"load.r $r97";
    "load.i $z27"
    "load.r $r97"->"load.i $z27";
    "i2d"
    "load.i $z27"->"i2d";
    "i2d"->"load.r r0";
    "fieldget <CabriJava: double aA>"
    "load.r r0"->"fieldget <CabriJava: double aA>";
    "mul.d"
    "fieldget <CabriJava: double aA>"->"mul.d";
    "push 10.0"
    "mul.d"->"push 10.0";
    "div.d"
    "push 10.0"->"div.d";
    "load.i $r85"
    "div.d"->"load.i $r85";
    "load.i $r85"->"i2d";
    "i2d"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: double aA>";
    "fieldget <CabriJava: double aA>"->"mul.d";
    "mul.d"->"push 10.0";
    "push 10.0"->"div.d";
    "specialinvoke <ak: void <init>(double,double)>"
    "div.d"->"specialinvoke <ak: void <init>(double,double)>";
    "specialinvoke <ak: void <init>(double,double)>"->"load.r $r97";
    "store.r $z27"
    "load.r $r97"->"store.r $z27";
    "store.r $z27"->"load.r $r97";
    "load.r $r97"->"load.r $i2";
    "push 0L"
    "load.r $i2"->"push 0L";
    "virtualinvoke <ak: void a(a1,long)>"
    "push 0L"->"virtualinvoke <ak: void a(a1,long)>";
    "goto new ak"
    "virtualinvoke <ak: void a(a1,long)>"->"goto new ak";
    "goto new ak"->"new ak";
    "store.r $r85"
    "new ak"->"store.r $r85";
    "load.r $r85"
    "store.r $r85"->"load.r $r85";
    "load.r $r85"->"load.i i0";
    "load.i i0"->"i2d";
    "i2d"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: double aA>";
    "fieldget <CabriJava: double aA>"->"mul.d";
    "mul.d"->"push 10.0";
    "push 10.0"->"div.d";
    "new a5"
    "div.d"->"new a5";
    "store.r i0"
    "new a5"->"store.r i0";
    "load.r $z27"
    "store.r i0"->"load.r $z27";
    "fieldget <ak: double bk>"
    "load.r $z27"->"fieldget <ak: double bk>";
    "add.d"
    "fieldget <ak: double bk>"->"add.d";
    "add.d"->"load.r $z27";
    "fieldget <ak: double bj>"
    "load.r $z27"->"fieldget <ak: double bj>";
    "fieldget <ak: double bj>"->"load.i r9";
    "load.i r9"->"i2d";
    "i2d"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: double aA>";
    "fieldget <CabriJava: double aA>"->"mul.d";
    "mul.d"->"push 10.0";
    "push 10.0"->"div.d";
    "div.d"->"add.d";
    "add.d"->"specialinvoke <ak: void <init>(double,double)>";
    "load.r i0"
    "specialinvoke <ak: void <init>(double,double)>"->"load.r i0";
    "load.r i0"->"load.r $i2";
    "load.r $i2"->"load.r $z27";
    "load.r $z27"->"load.r $r85";
    "load.r $r85"->"push null";
    "push null"->"load.r r0";
    "specialinvoke <a5: void <init>(a1,ak,ak,java.util.Vector,CabriJava)>"
    "load.r r0"->"specialinvoke <a5: void <init>(a1,ak,ak,java.util.Vector,CabriJava)>";
    "specialinvoke <a5: void <init>(a1,ak,ak,java.util.Vector,CabriJava)>"->"load.r i0";
    "virtualinvoke <a5: void a()>"
    "load.r i0"->"virtualinvoke <a5: void a()>";
    "virtualinvoke <a5: void a()>"->"load.r i0";
    "virtualinvoke <a5: void 'if'()>"
    "load.r i0"->"virtualinvoke <a5: void 'if'()>";
    "virtualinvoke <a5: void 'if'()>"->"load.r r0";
    "fieldget <CabriJava: java.util.Vector bz>"
    "load.r r0"->"fieldget <CabriJava: java.util.Vector bz>";
    "fieldget <CabriJava: java.util.Vector bz>"->"load.r i0";
    "virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>"
    "load.r i0"->"virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>";
    "virtualinvoke <java.util.Vector: void addElement(java.lang.Object)>"->"load.r i0";
    "fieldget <a5: a1 do>"
    "load.r i0"->"fieldget <a5: a1 do>";
    "fieldget <a5: a1 do>"->"instanceof";
    "ifeq load.r i0"
    "instanceof"->"ifeq load.r i0";
    "ifeq load.r i0"->"load.r i0";
    "load.r i0"->"fieldget <a5: a1 do>";
    "fieldget <a5: a1 do>"->"checkcast";
    "fieldget <ak: boolean bd>"
    "checkcast"->"fieldget <ak: boolean bd>";
    "ifne load.r i0"
    "fieldget <ak: boolean bd>"->"ifne load.r i0";
    "ifne load.r i0"->"load.r i0";
    "load.r i0"->"fieldget <a5: a1 do>";
    "fieldget <a5: a1 do>"->"instanceof";
    "instanceof"->"ifne load.r i0";
    "ifne load.r i0"->"load.r i0";
    "load.r i0"->"fieldget <a5: a1 do>";
    "fieldget <a5: a1 do>"->"instanceof";
    "instanceof"->"ifne load.r i0";
    "ifne load.r i0"->"load.r i0";
    "load.r i0"->"fieldget <a5: a1 do>";
    "fieldget <a5: a1 do>"->"instanceof";
    "instanceof"->"ifeq load.r i0";
    "ifeq load.r i0"->"load.r i0";
    "load.r i0"->"fieldget <a5: a1 do>";
    "fieldget <a5: a1 do>"->"instanceof";
    "instanceof"->"ifeq load.r i0";
    "ifeq load.r i0"->"load.r i0";
    "load.r i0"->"fieldget <a5: a1 do>";
    "fieldget <a5: a1 do>"->"instanceof";
    "instanceof"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r i0";
    "load.r i0"->"fieldget <a5: a1 do>";
    "fieldget <a5: a1 do>"->"checkcast";
    "fieldget <o: int K>"
    "checkcast"->"fieldget <o: int K>";
    "fieldget <o: int K>"->"push 1";
    "ifcmpne.i load.r r0"
    "push 1"->"ifcmpne.i load.r r0";
    "ifcmpne.i load.r r0"->"load.r i0";
    "virtualinvoke <a5: void do()>"
    "load.r i0"->"virtualinvoke <a5: void do()>";
    "virtualinvoke <a5: void do()>"->"load.r r0";
    "load.r r0"->"push 1";
    "fieldput <CabriJava: boolean aQ>"
    "push 1"->"fieldput <CabriJava: boolean aQ>";
    "ifne new ak"->"new ak";
    "new ak"->"dup1.r";
    "dup1.r"->"load.r $i2";
    "load.r $i2"->"checkcast";
    "checkcast"->"fieldget <ak: double bk>";
    "fieldget <ak: double bk>"->"load.r $i2";
    "load.r $i2"->"checkcast";
    "checkcast"->"fieldget <ak: double bj>";
    "fieldget <ak: double bj>"->"specialinvoke <ak: void <init>(double,double)>";
    "specialinvoke <ak: void <init>(double,double)>"->"store.r $z27";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"store.r r1";
    "store.r r1"->"staticget <java.lang.System: java.io.PrintStream out>";
    "staticget <java.lang.System: java.io.PrintStream out>"->"push \"TRACE param wrong : not valid value \"";
    "push \"TRACE param wrong : not valid value \""->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"goto load.r r0";
    "ifcmpge.i load.r r1"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
    "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifne load.r r1";
    "ifne load.r r1"->"goto load.r r0";
    "ifne load.r r1"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"store.r $i2";
    "store.r $i2"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"store.i r9";
    "store.i r9"->"load.i r9";
    "load.i r9"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.util.Vector M>";
    "fieldget <CabriJava: java.util.Vector M>"->"virtualinvoke <java.util.Vector: int size()>";
    "virtualinvoke <java.util.Vector: int size()>"->"ifcmple.i load.r r0";
    "ifcmple.i load.r r0"->"staticget <java.lang.System: java.io.PrintStream out>";
    "staticget <java.lang.System: java.io.PrintStream out>"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "push \"TRACE param wrong : illegal element number \""
    "dup1.r"->"push \"TRACE param wrong : illegal element number \"";
    "push \"TRACE param wrong : illegal element number \""->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.i r9";
    "load.i r9"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "goto load.r r1"
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"goto load.r r1";
    "ifcmple.i load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.util.Vector M>";
    "fieldget <CabriJava: java.util.Vector M>"->"load.i r9";
    "load.i r9"->"push 1";
    "push 1"->"sub.i";
    "sub.i"->"virtualinvoke <java.util.Vector: java.lang.Object elementAt(int)>";
    "virtualinvoke <java.util.Vector: java.lang.Object elementAt(int)>"->"checkcast";
    "checkcast"->"store.r $z27";
    "store.r $z27"->"load.r $z27";
    "load.r $z27"->"fieldget <a1: java.lang.String do>";
    "fieldget <a1: java.lang.String do>"->"load.r $i2";
    "load.r $i2"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
    "ifne load.r $z27"
    "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"ifne load.r $z27";
    "ifne load.r $z27"->"staticget <java.lang.System: java.io.PrintStream out>";
    "staticget <java.lang.System: java.io.PrintStream out>"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "push \"TRACE param wrong : wrong element \""
    "dup1.r"->"push \"TRACE param wrong : wrong element \"";
    "push \"TRACE param wrong : wrong element \""->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.r $i2";
    "load.r $i2"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"push \" \"";
    "push \" \""->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"load.i r9";
    "load.i r9"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"goto load.r r1";
    "ifne load.r $z27"->"load.r $z27";
    "load.r $z27"->"push 1";
    "fieldput <a1: boolean 'if'>"
    "push 1"->"fieldput <a1: boolean 'if'>";
    "virtualinvoke <java.lang.Boolean: boolean booleanValue()>"->"store.r r1";
    "store.r r1"->"staticget <java.lang.System: java.io.PrintStream out>";
    "push \"AUTOCONTROL param not TRUE or FALSE \""
    "staticget <java.lang.System: java.io.PrintStream out>"->"push \"AUTOCONTROL param not TRUE or FALSE \"";
    "push \"AUTOCONTROL param not TRUE or FALSE \""->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"load.r r0";
    "load.r r0"->"push 0";
    "push 0"->"fieldput <CabriJava: boolean K>";
    "fieldput <CabriJava: boolean K>"->"goto load.r r0";
    "push 1"->"store.r r1";
    "store.r r1"->"staticget <java.lang.System: java.io.PrintStream out>";
    "push \"LOOP param not TRUE or FALSE \""
    "staticget <java.lang.System: java.io.PrintStream out>"->"push \"LOOP param not TRUE or FALSE \"";
    "push \"LOOP param not TRUE or FALSE \""->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"goto load.r r0";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"store.r r1";
    "store.r r1"->"staticget <java.lang.System: java.io.PrintStream out>";
    "staticget <java.lang.System: java.io.PrintStream out>"->"push \"STEP param wrong : not valid element couple\"";
    "push \"STEP param wrong : not valid element couple\""->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"goto load.r r0";
    "ifcmpge.i load.r r1"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
    "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifne load.r r0";
    "ifne load.r r0"->"goto load.r r0";
    "ifne load.r r0"->"load.r r0";
    "load.r r0"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "fieldput <CabriJava: java.lang.String bw>"
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"fieldput <CabriJava: java.lang.String bw>";
    "fieldput <CabriJava: java.lang.String bw>"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"store.i $i2";
    "store.i $i2"->"load.i $i2";
    "load.i $i2"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.util.Vector M>";
    "fieldget <CabriJava: java.util.Vector M>"->"virtualinvoke <java.util.Vector: int size()>";
    "virtualinvoke <java.util.Vector: int size()>"->"ifcmple.i load.r r0";
    "ifcmple.i load.r r0"->"staticget <java.lang.System: java.io.PrintStream out>";
    "staticget <java.lang.System: java.io.PrintStream out>"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "push \"STEP param wrong : illegal element number \""
    "dup1.r"->"push \"STEP param wrong : illegal element number \"";
    "push \"STEP param wrong : illegal element number \""->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.i $i2";
    "load.i $i2"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"goto load.r r1";
    "ifcmple.i load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.util.Vector M>";
    "fieldget <CabriJava: java.util.Vector M>"->"load.i $i2";
    "load.i $i2"->"push 1";
    "push 1"->"sub.i";
    "sub.i"->"virtualinvoke <java.util.Vector: java.lang.Object elementAt(int)>";
    "virtualinvoke <java.util.Vector: java.lang.Object elementAt(int)>"->"checkcast";
    "checkcast"->"store.r $i2";
    "store.r $i2"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.util.Vector d>";
    "fieldget <CabriJava: java.util.Vector d>"->"load.r $i2";
    "virtualinvoke <java.util.Vector: int indexOf(java.lang.Object)>"
    "load.r $i2"->"virtualinvoke <java.util.Vector: int indexOf(java.lang.Object)>";
    "virtualinvoke <java.util.Vector: int indexOf(java.lang.Object)>"->"push 1";
    "add.i"
    "push 1"->"add.i";
    "add.i"->"fieldput <CabriJava: int S>";
    "fieldput <CabriJava: int S>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: int S>";
    "fieldget <CabriJava: int S>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: int o>";
    "push 32"
    "fieldget <CabriJava: int o>"->"push 32";
    "push 32"->"sub.i";
    "push 5"
    "sub.i"->"push 5";
    "push 5"->"add.i";
    "add.i"->"mul.i";
    "mul.i"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: int aV>";
    "div.i"
    "fieldget <CabriJava: int aV>"->"div.i";
    "div.i"->"push 32";
    "push 32"->"add.i";
    "add.i"->"push 5";
    "push 5"->"sub.i";
    "sub.i"->"fieldput <CabriJava: int E>";
    "fieldput <CabriJava: int E>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: boolean 'new'>";
    "fieldget <CabriJava: boolean 'new'>"->"ifeq load.r r1";
    "ifeq load.r r1"->"load.r r0";
    "load.r r0"->"push 1";
    "push 1"->"fieldput <CabriJava: boolean K>";
    "ifge load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.util.Vector M>";
    "fieldget <CabriJava: java.util.Vector M>"->"load.i r1";
    "load.i r1"->"virtualinvoke <java.util.Vector: java.lang.Object elementAt(int)>";
    "virtualinvoke <java.util.Vector: java.lang.Object elementAt(int)>"->"checkcast";
    "checkcast"->"store.r $i2";
    "store.r $i2"->"load.r $i2";
    "fieldget <a1: boolean 'byte'>"
    "load.r $i2"->"fieldget <a1: boolean 'byte'>";
    "ifeq inc.i r1 -1"
    "fieldget <a1: boolean 'byte'>"->"ifeq inc.i r1 -1";
    "ifeq inc.i r1 -1"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: int aV>";
    "fieldget <CabriJava: int aV>"->"push 1";
    "push 1"->"add.i";
    "add.i"->"fieldput <CabriJava: int aV>";
    "fieldput <CabriJava: int aV>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.util.Vector d>";
    "fieldget <CabriJava: java.util.Vector d>"->"load.r $i2";
    "load.r $i2"->"push 0";
    "virtualinvoke <java.util.Vector: void insertElementAt(java.lang.Object,int)>"
    "push 0"->"virtualinvoke <java.util.Vector: void insertElementAt(java.lang.Object,int)>";
    "virtualinvoke <java.util.Vector: void insertElementAt(java.lang.Object,int)>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.util.Vector ao>";
    "fieldget <CabriJava: java.util.Vector ao>"->"load.r $i2";
    "fieldget <a1: java.awt.Color try>"
    "load.r $i2"->"fieldget <a1: java.awt.Color try>";
    "fieldget <a1: java.awt.Color try>"->"push 0";
    "push 0"->"virtualinvoke <java.util.Vector: void insertElementAt(java.lang.Object,int)>";
    "inc.i r1 -1"
    "virtualinvoke <java.util.Vector: void insertElementAt(java.lang.Object,int)>"->"inc.i r1 -1";
    "ifne load.r $i2"->"load.r $i2";
    "load.r $i2"->"ifnonnull load.r r0";
    "ifnonnull load.r r0"->"load.r r1";
    "ifnull load.r r1"
    "load.r r1"->"ifnull load.r r1";
    "ifnull load.r r1"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.MediaTracker a3>";
    "fieldget <CabriJava: java.awt.MediaTracker a3>"->"push 0";
    "virtualinvoke <java.awt.MediaTracker: void waitForID(int)>"
    "push 0"->"virtualinvoke <java.awt.MediaTracker: void waitForID(int)>";
    "virtualinvoke <java.awt.MediaTracker: void waitForID(int)>"->"goto load.r r1";
    "goto load.r r1"->"load.r r1";
    "load.r r1"->"ifnonnull load.r r0";
    "ifnonnull load.r r0"->"load.r r0";
    "new java.net.URL"
    "load.r r0"->"new java.net.URL";
    "new java.net.URL"->"dup1.r";
    "dup1.r"->"load.r r0";
    "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"
    "load.r r0"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
    "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"load.r $i2";
    "specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>"
    "load.r $i2"->"specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>";
    "specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>"->"fieldput <CabriJava: java.net.URL ac>";
    "fieldput <CabriJava: java.net.URL ac>"->"goto load.r r1";
    "goto load.r r1"->"load.r r1";
    "load.r r1"->"ifnonnull load.r r0";
    "ifnonnull load.r r0"->"load.r r0";
    "load.r r0"->"push null";
    "specialinvoke <CabriJava: void a(java.lang.String)>"
    "push null"->"specialinvoke <CabriJava: void a(java.lang.String)>";
    "specialinvoke <CabriJava: void a(java.lang.String)>"->"goto load.r r0";
    "ifnonnull load.r r0"->"load.r r0";
    "load.r r0"->"load.r $i2";
    "load.r $i2"->"specialinvoke <CabriJava: void a(java.lang.String)>";
    "specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>"->"store.r r9";
    "store.r r9"->"load.r r1";
    "load.r r1"->"ifnonnull load.r r0";
    "ifnonnull load.r r0"->"load.r r0";
    "load.r r0"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "push \"Malformed URL for Cabri figure : \""
    "dup1.r"->"push \"Malformed URL for Cabri figure : \"";
    "push \"Malformed URL for Cabri figure : \""->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.r $i2";
    "load.r $i2"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "push \"\n\""
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"push \"\n\"";
    "push \"\n\""->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.net.URL ac>";
    "fieldget <CabriJava: java.net.URL ac>"->"staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>";
    "staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"push 2";
    "push \"Malformed URL\""
    "push 2"->"push \"Malformed URL\"";
    "push \"Malformed URL\""->"virtualinvoke <CabriJava: void a(java.lang.String,int,java.lang.String)>";
    "virtualinvoke <CabriJava: void a(java.lang.String,int,java.lang.String)>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"push null";
    "push null"->"fieldput <CabriJava: java.net.URL ac>";
    "fieldput <CabriJava: java.net.URL ac>"->"goto load.r r1";
    "ifnonnull load.r r0"->"load.r r0";
    "load.r r0"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "push \"Malformed URL for Cabri figure zip archive: \""
    "dup1.r"->"push \"Malformed URL for Cabri figure zip archive: \"";
    "push \"Malformed URL for Cabri figure zip archive: \""->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"push \"\n\"";
    "push \"\n\""->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.net.URL ac>";
    "fieldget <CabriJava: java.net.URL ac>"->"staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>";
    "staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"push 2";
    "push 2"->"push \"Malformed URL\"";
    "push \"Malformed URL\""->"virtualinvoke <CabriJava: void a(java.lang.String,int,java.lang.String)>";
    "ifnonnull load.r r0"->"load.r r0";
    "load.r r0"->"new java.net.URL";
    "new java.net.URL"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
    "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"load.r r1";
    "load.r r1"->"specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>";
    "specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>"->"fieldput <CabriJava: java.net.URL ac>";
    "fieldput <CabriJava: java.net.URL ac>"->"goto load.r r1";
    "virtualinvoke <java.awt.MediaTracker: void waitForID(int)>"->"store.r r9";
    "store.r r9"->"load.r r0";
    "load.r r0"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "push \"Bad URL for Cabri figure : \""
    "dup1.r"->"push \"Bad URL for Cabri figure : \"";
    "push \"Bad URL for Cabri figure : \""->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.r $i2";
    "load.r $i2"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"push \"\n\"";
    "push \"\n\""->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "push \"File not found\""
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"push \"File not found\"";
    "push \"File not found\""->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"push 2";
    "push \"Bad URL\""
    "push 2"->"push \"Bad URL\"";
    "push \"Bad URL\""->"virtualinvoke <CabriJava: void a(java.lang.String,int,java.lang.String)>";
    "ifcmpne.i load.r r9"->"load.r r9";
    "load.r r9"->"load.r r1";
    "load.r r1"->"push 0";
    "push 0"->"load.i $i2";
    "virtualinvoke <java.lang.String: java.lang.String substring(int,int)>"
    "load.i $i2"->"virtualinvoke <java.lang.String: java.lang.String substring(int,int)>";
    "virtualinvoke <java.lang.String: java.lang.String concat(java.lang.String)>"
    "virtualinvoke <java.lang.String: java.lang.String substring(int,int)>"->"virtualinvoke <java.lang.String: java.lang.String concat(java.lang.String)>";
    "virtualinvoke <java.lang.String: java.lang.String concat(java.lang.String)>"->"store.r r9";
    "store.r r9"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.lang.String aE>";
    "fieldget <CabriJava: java.lang.String aE>"->"push \"Win\"";
    "push \"Win\""->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
    "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"push -1";
    "ifcmple.i load.r r1"
    "push -1"->"ifcmple.i load.r r1";
    "ifcmple.i load.r r1"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.lang.String 'byte'>";
    "fieldget <CabriJava: java.lang.String 'byte'>"->"push \"MICROSOFT\"";
    "push \"MICROSOFT\""->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
    "ifne new java.lang.StringBuffer"
    "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"ifne new java.lang.StringBuffer";
    "ifne new java.lang.StringBuffer"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.lang.String 'byte'>";
    "fieldget <CabriJava: java.lang.String 'byte'>"->"push \"NETSCAPE\"";
    "push \"NETSCAPE\""->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
    "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"ifeq load.r r1";
    "ifeq load.r r1"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "dup1.r"->"load.r r9";
    "load.r r9"->"staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>";
    "staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>"->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"push \"\n\"";
    "push \"\n\""->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"store.r r9";
    "store.r r9"->"load.r r1";
    "load.r r1"->"load.i $i2";
    "push 4"
    "load.i $i2"->"push 4";
    "push 4"->"add.i";
    "add.i"->"virtualinvoke <java.lang.String: java.lang.String substring(int)>";
    "virtualinvoke <java.lang.String: java.lang.String substring(int)>"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"push \"<BR>\"";
    "push \"<BR>\""->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
    "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"store.i $i2";
    "ifcmpne.i new java.lang.StringBuffer"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "dup1.r"->"load.r r9";
    "load.r r9"->"load.r r1";
    "load.r r1"->"push 0";
    "push 0"->"load.i $i2";
    "load.i $i2"->"virtualinvoke <java.lang.String: java.lang.String substring(int,int)>";
    "virtualinvoke <java.lang.String: java.lang.String substring(int,int)>"->"virtualinvoke <java.lang.String: java.lang.String concat(java.lang.String)>";
    "virtualinvoke <java.lang.String: java.lang.String concat(java.lang.String)>"->"staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>";
    "staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>"->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "push \"\'\""
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"push \"\'\"";
    "push \"\'\""->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"store.r r9";
    "store.r r9"->"load.r r1";
    "load.r r1"->"load.i $i2";
    "push 7"
    "load.i $i2"->"push 7";
    "push 7"->"add.i";
    "add.i"->"virtualinvoke <java.lang.String: java.lang.String substring(int)>";
    "virtualinvoke <java.lang.String: java.lang.String substring(int)>"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"push \"<QUOTE>\"";
    "push \"<QUOTE>\""->"virtualinvoke <java.lang.String: int indexOf(java.lang.String)>";
    "virtualinvoke <java.lang.String: int indexOf(java.lang.String)>"->"store.i $i2";
    "virtualinvoke <java.awt.MediaTracker: void waitForAll()>"->"store.r r1";
    "store.r r1"->"load.r r0";
    "fieldget <CabriJava: java.awt.Image bt>"
    "load.r r0"->"fieldget <CabriJava: java.awt.Image bt>";
    "fieldget <CabriJava: java.awt.Image bt>"->"ifnonnull load.r r0";
    "ifnonnull load.r r0"->"staticget <java.lang.System: java.io.PrintStream out>";
    "push \"Missing tools.gif file image... \""
    "staticget <java.lang.System: java.io.PrintStream out>"->"push \"Missing tools.gif file image... \"";
    "push \"Missing tools.gif file image... \""->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"load.r r0";
    "load.r r0"->"push 0";
    "push 0"->"fieldput <CabriJava: boolean 'new'>";
    "fieldput <CabriJava: boolean 'new'>"->"goto load.r r0";
    "ifcmpgt.i load.r r0"->"load.r r0";
    "load.r r0"->"load.i r1";
    "push 96"
    "load.i r1"->"push 96";
    "push 96"->"sub.i";
    "sub.i"->"fieldput <CabriJava: int o>";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "new java.awt.image.FilteredImageSource"
    "load.r r0"->"new java.awt.image.FilteredImageSource";
    "new java.awt.image.FilteredImageSource"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Image bt>";
    "virtualinvoke <java.awt.Image: java.awt.image.ImageProducer getSource()>"
    "fieldget <CabriJava: java.awt.Image bt>"->"virtualinvoke <java.awt.Image: java.awt.image.ImageProducer getSource()>";
    "new java.awt.image.CropImageFilter"
    "virtualinvoke <java.awt.Image: java.awt.image.ImageProducer getSource()>"->"new java.awt.image.CropImageFilter";
    "new java.awt.image.CropImageFilter"->"dup1.r";
    "dup1.r"->"load.i r1";
    "load.i r1"->"push 16";
    "push 16"->"mul.i";
    "mul.i"->"push 0";
    "push 0"->"push 16";
    "push 16"->"push 16";
    "specialinvoke <java.awt.image.CropImageFilter: void <init>(int,int,int,int)>"
    "push 16"->"specialinvoke <java.awt.image.CropImageFilter: void <init>(int,int,int,int)>";
    "specialinvoke <java.awt.image.FilteredImageSource: void <init>(java.awt.image.ImageProducer,java.awt.image.ImageFilter)>"
    "specialinvoke <java.awt.image.CropImageFilter: void <init>(int,int,int,int)>"->"specialinvoke <java.awt.image.FilteredImageSource: void <init>(java.awt.image.ImageProducer,java.awt.image.ImageFilter)>";
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>"
    "specialinvoke <java.awt.image.FilteredImageSource: void <init>(java.awt.image.ImageProducer,java.awt.image.ImageFilter)>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>";
    "fieldput <CabriJava: java.awt.Image v>"
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>"->"fieldput <CabriJava: java.awt.Image v>";
    "fieldput <CabriJava: java.awt.Image v>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.MediaTracker a3>";
    "fieldget <CabriJava: java.awt.MediaTracker a3>"->"load.r r0";
    "fieldget <CabriJava: java.awt.Image v>"
    "load.r r0"->"fieldget <CabriJava: java.awt.Image v>";
    "fieldget <CabriJava: java.awt.Image v>"->"load.i r1";
    "load.i r1"->"push 1";
    "push 1"->"add.i";
    "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"
    "add.i"->"virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>";
    "staticget <CabriJava: java.awt.Image[] a7>"
    "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"->"staticget <CabriJava: java.awt.Image[] a7>";
    "staticget <CabriJava: java.awt.Image[] a7>"->"load.i r1";
    "load.i r1"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Image v>";
    "arraywrite.r"
    "fieldget <CabriJava: java.awt.Image v>"->"arraywrite.r";
    "inc.i r1 1"
    "arraywrite.r"->"inc.i r1 1";
    "ifnonnull load.r r0"->"load.r r0";
    "load.r r0"->"load.r r1";
    "load.r r1"->"staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>";
    "staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Boolean: boolean booleanValue()>";
    "virtualinvoke <java.lang.Boolean: boolean booleanValue()>"->"fieldput <CabriJava: boolean 'new'>";
    "fieldput <CabriJava: boolean 'new'>"->"goto load.r r0";
    "virtualinvoke <java.lang.Boolean: boolean booleanValue()>"->"store.r r1";
    "store.r r1"->"staticget <java.lang.System: java.io.PrintStream out>";
    "push \"CONTROLLER param not TRUE or FALSE \""
    "staticget <java.lang.System: java.io.PrintStream out>"->"push \"CONTROLLER param not TRUE or FALSE \"";
    "push \"CONTROLLER param not TRUE or FALSE \""->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"load.r r0";
    "load.r r0"->"push 1";
    "push 1"->"fieldput <CabriJava: boolean 'new'>";
    "fieldput <CabriJava: boolean 'new'>"->"goto load.r r0";
    "virtualinvoke <java.awt.Graphics: void clipRect(int,int,int,int)>"->"store.r r1";
    "staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>"
    "store.r r1"->"staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>";
    "virtualinvoke <java.lang.Runtime: void gc()>"
    "staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>"->"virtualinvoke <java.lang.Runtime: void gc()>";
    "ifcmpeq.i new java.awt.Font"->"new java.awt.Font";
    "new java.awt.Font"->"dup1.r";
    "push \"SansSerif\""
    "dup1.r"->"push \"SansSerif\"";
    "push \"SansSerif\""->"push 0";
    "push 9"
    "push 0"->"push 9";
    "push 9"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"store.r r1";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Graphics ba>";
    "fieldget <CabriJava: java.awt.Graphics ba>"->"load.i r1";
    "load.i r1"->"load.i r1";
    "load.i r1"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Dimension be>";
    "fieldget <CabriJava: java.awt.Dimension be>"->"fieldget <java.awt.Dimension: int width>";
    "fieldget <java.awt.Dimension: int width>"->"push 1";
    "push 1"->"sub.i";
    "sub.i"->"push 2";
    "push 2"->"load.i r1";
    "load.i r1"->"mul.i";
    "mul.i"->"sub.i";
    "sub.i"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Dimension be>";
    "fieldget <CabriJava: java.awt.Dimension be>"->"fieldget <java.awt.Dimension: int height>";
    "fieldget <java.awt.Dimension: int height>"->"push 1";
    "push 1"->"sub.i";
    "sub.i"->"push 2";
    "push 2"->"load.i r1";
    "load.i r1"->"mul.i";
    "mul.i"->"sub.i";
    "virtualinvoke <java.awt.Graphics: void drawRect(int,int,int,int)>"
    "sub.i"->"virtualinvoke <java.awt.Graphics: void drawRect(int,int,int,int)>";
    "virtualinvoke <java.awt.Graphics: void drawRect(int,int,int,int)>"->"inc.i r1 1";
    "ifnonnull load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: int aD>";
    "fieldget <CabriJava: int aD>"->"store.i r1";
    "store.i r1"->"goto load.i r1";
    "goto load.i r1"->"load.i r1";
    "load.i r1"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Dimension be>";
    "fieldget <CabriJava: java.awt.Dimension be>"->"fieldget <java.awt.Dimension: int width>";
    "fieldget <java.awt.Dimension: int width>"->"push 1";
    "push 1"->"sub.i";
    "sub.i"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: int aD>";
    "fieldget <CabriJava: int aD>"->"sub.i";
    "sub.i"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"goto load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: int aD>";
    "fieldget <CabriJava: int aD>"->"store.i $i2";
    "store.i $i2"->"goto load.i $i2";
    "goto load.i $i2"->"load.i $i2";
    "load.i $i2"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Dimension be>";
    "fieldget <CabriJava: java.awt.Dimension be>"->"fieldget <java.awt.Dimension: int height>";
    "fieldget <java.awt.Dimension: int height>"->"push 1";
    "push 1"->"sub.i";
    "sub.i"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: int aD>";
    "fieldget <CabriJava: int aD>"->"sub.i";
    "sub.i"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.i r1";
    "load.i r1"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Image R>";
    "fieldget <CabriJava: java.awt.Image R>"->"push null";
    "virtualinvoke <java.awt.Image: int getWidth(java.awt.image.ImageObserver)>"
    "push null"->"virtualinvoke <java.awt.Image: int getWidth(java.awt.image.ImageObserver)>";
    "virtualinvoke <java.awt.Image: int getWidth(java.awt.image.ImageObserver)>"->"add.i";
    "add.i"->"store.i r1";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Graphics ba>";
    "fieldget <CabriJava: java.awt.Graphics ba>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Image R>";
    "fieldget <CabriJava: java.awt.Image R>"->"load.i r1";
    "load.i r1"->"load.i $i2";
    "load.i $i2"->"load.r r0";
    "virtualinvoke <java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>"
    "load.r r0"->"virtualinvoke <java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>";
    "pop"
    "virtualinvoke <java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>"->"pop";
    "pop"->"load.i $i2";
    "load.i $i2"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Image R>";
    "fieldget <CabriJava: java.awt.Image R>"->"push null";
    "virtualinvoke <java.awt.Image: int getHeight(java.awt.image.ImageObserver)>"
    "push null"->"virtualinvoke <java.awt.Image: int getHeight(java.awt.image.ImageObserver)>";
    "virtualinvoke <java.awt.Image: int getHeight(java.awt.image.ImageObserver)>"->"add.i";
    "add.i"->"store.i $i2";
    "push 0"->"virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>";
    "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.MediaTracker a3>";
    "fieldget <CabriJava: java.awt.MediaTracker a3>"->"push 0";
    "push 0"->"virtualinvoke <java.awt.MediaTracker: void waitForID(int)>";
    "virtualinvoke <java.awt.MediaTracker: void waitForID(int)>"->"goto load.r r0";
    "ifnull load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Graphics ba>";
    "fieldget <CabriJava: java.awt.Graphics ba>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Color aL>";
    "fieldget <CabriJava: java.awt.Color aL>"->"virtualinvoke <java.awt.Graphics: void setColor(java.awt.Color)>";
    "virtualinvoke <java.awt.Graphics: void setColor(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Graphics ba>";
    "fieldget <CabriJava: java.awt.Graphics ba>"->"push 0";
    "push 0"->"push 0";
    "push 0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Dimension be>";
    "fieldget <CabriJava: java.awt.Dimension be>"->"fieldget <java.awt.Dimension: int width>";
    "fieldget <java.awt.Dimension: int width>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Dimension be>";
    "fieldget <CabriJava: java.awt.Dimension be>"->"fieldget <java.awt.Dimension: int height>";
    "fieldget <java.awt.Dimension: int height>"->"virtualinvoke <java.awt.Graphics: void fillRect(int,int,int,int)>";
    "push \"background\""->"store.r r1";
    "store.r r1"->"load.r r0";
    "fieldget <CabriJava: java.io.DataInputStream X>"
    "load.r r0"->"fieldget <CabriJava: java.io.DataInputStream X>";
    "fieldget <CabriJava: java.io.DataInputStream X>"->"ifnonnull load.r r0";
    "ifnonnull load.r r0"->"staticget <java.lang.System: java.io.PrintStream out>";
    "staticget <java.lang.System: java.io.PrintStream out>"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "push \" Missing background image : \""
    "dup1.r"->"push \" Missing background image : \"";
    "push \" Missing background image : \""->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.r r0";
    "fieldget <CabriJava: java.lang.String aS>"
    "load.r r0"->"fieldget <CabriJava: java.lang.String aS>";
    "fieldget <CabriJava: java.lang.String aS>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"load.r r0";
    "load.r r0"->"push null";
    "push null"->"fieldput <CabriJava: java.awt.Image R>";
    "push \"background\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
    "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"load.r r1";
    "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"
    "load.r r1"->"virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"fieldput <CabriJava: java.awt.Image R>";
    "fieldput <CabriJava: java.awt.Image R>"->"load.r r0";
    "load.r r0"->"new java.net.URL";
    "new java.net.URL"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
    "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"load.r r1";
    "load.r r1"->"specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>";
    "specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>"->"fieldput <CabriJava: java.net.URL ac>";
    "fieldput <CabriJava: java.net.URL ac>"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.net.URL ac>";
    "virtualinvoke <java.net.URL: java.net.URLConnection openConnection()>"
    "fieldget <CabriJava: java.net.URL ac>"->"virtualinvoke <java.net.URL: java.net.URLConnection openConnection()>";
    "virtualinvoke <java.net.URL: java.net.URLConnection openConnection()>"->"push 1";
    "virtualinvoke <java.net.URLConnection: void setUseCaches(boolean)>"
    "push 1"->"virtualinvoke <java.net.URLConnection: void setUseCaches(boolean)>";
    "virtualinvoke <java.net.URLConnection: void setUseCaches(boolean)>"->"load.r r0";
    "new java.io.DataInputStream"
    "load.r r0"->"new java.io.DataInputStream";
    "new java.io.DataInputStream"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.net.URL ac>";
    "virtualinvoke <java.net.URL: java.io.InputStream openStream()>"
    "fieldget <CabriJava: java.net.URL ac>"->"virtualinvoke <java.net.URL: java.io.InputStream openStream()>";
    "specialinvoke <java.io.DataInputStream: void <init>(java.io.InputStream)>"
    "virtualinvoke <java.net.URL: java.io.InputStream openStream()>"->"specialinvoke <java.io.DataInputStream: void <init>(java.io.InputStream)>";
    "fieldput <CabriJava: java.io.DataInputStream X>"
    "specialinvoke <java.io.DataInputStream: void <init>(java.io.InputStream)>"->"fieldput <CabriJava: java.io.DataInputStream X>";
    "fieldput <CabriJava: java.io.DataInputStream X>"->"goto load.r r0";
    "ifnonnull load.r r0"->"load.r r0";
    "load.r r0"->"load.r r1";
    "load.r r1"->"staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>";
    "staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Boolean: boolean booleanValue()>";
    "virtualinvoke <java.lang.Boolean: boolean booleanValue()>"->"fieldput <CabriJava: boolean bg>";
    "fieldput <CabriJava: boolean bg>"->"goto load.r r0";
    "virtualinvoke <java.lang.Boolean: boolean booleanValue()>"->"store.r r1";
    "store.r r1"->"staticget <java.lang.System: java.io.PrintStream out>";
    "push \"OPAQUE param not TRUE or FALSE \""
    "staticget <java.lang.System: java.io.PrintStream out>"->"push \"OPAQUE param not TRUE or FALSE \"";
    "push \"OPAQUE param not TRUE or FALSE \""->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"load.r r0";
    "load.r r0"->"push 0";
    "push 0"->"fieldput <CabriJava: boolean bg>";
    "fieldput <CabriJava: boolean bg>"->"goto load.r r0";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"store.r r1";
    "store.r r1"->"staticget <java.lang.System: java.io.PrintStream out>";
    "push \"YPOSITION param not in integer notation \""
    "staticget <java.lang.System: java.io.PrintStream out>"->"push \"YPOSITION param not in integer notation \"";
    "push \"YPOSITION param not in integer notation \""->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"load.r r0";
    "load.r r0"->"push 0";
    "push 0"->"fieldput <CabriJava: int ar>";
    "fieldput <CabriJava: int ar>"->"goto load.r r0";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"store.r r1";
    "store.r r1"->"staticget <java.lang.System: java.io.PrintStream out>";
    "push \"XPOSITION param not in integer notation \""
    "staticget <java.lang.System: java.io.PrintStream out>"->"push \"XPOSITION param not in integer notation \"";
    "push \"XPOSITION param not in integer notation \""->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"load.r r0";
    "load.r r0"->"push 0";
    "push 0"->"fieldput <CabriJava: int au>";
    "fieldput <CabriJava: int au>"->"goto load.r r0";
    "ifnonnull load.r r0"->"load.r r0";
    "load.r r0"->"load.r r1";
    "load.r r1"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <CabriJava: int aD>";
    "fieldput <CabriJava: int aD>"->"goto load.r r0";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"store.r r1";
    "store.r r1"->"staticget <java.lang.System: java.io.PrintStream out>";
    "push \"BORDER param not integer\""
    "staticget <java.lang.System: java.io.PrintStream out>"->"push \"BORDER param not integer\"";
    "push \"BORDER param not integer\""->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"load.r r0";
    "load.r r0"->"push 1";
    "push 1"->"fieldput <CabriJava: int aD>";
    "fieldput <CabriJava: int aD>"->"goto load.r r0";
    "specialinvoke <java.awt.Color: void <init>(int)>"->"store.r r1";
    "store.r r1"->"staticget <java.lang.System: java.io.PrintStream out>";
    "push \"BORDERCOLOR param not a number \""
    "staticget <java.lang.System: java.io.PrintStream out>"->"push \"BORDERCOLOR param not a number \"";
    "push \"BORDERCOLOR param not a number \""->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"load.r r0";
    "staticget <java.awt.Color: java.awt.Color black>"
    "load.r r0"->"staticget <java.awt.Color: java.awt.Color black>";
    "staticget <java.awt.Color: java.awt.Color black>"->"fieldput <CabriJava: java.awt.Color aR>";
    "fieldput <CabriJava: java.awt.Color aR>"->"goto load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"load.r r1";
    "load.r r1"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
    "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <CabriJava: java.awt.Color aR>";
    "fieldput <CabriJava: java.awt.Color aR>"->"goto load.r r0";
    "ifnull load.r r0"->"load.r r0";
    "load.r r0"->"staticget <java.awt.Color: java.awt.Color black>";
    "staticget <java.awt.Color: java.awt.Color black>"->"fieldput <CabriJava: java.awt.Color aR>";
    "specialinvoke <java.awt.Color: void <init>(int)>"->"store.r r1";
    "store.r r1"->"staticget <java.lang.System: java.io.PrintStream out>";
    "push \"BGCOLOR param not a number \""
    "staticget <java.lang.System: java.io.PrintStream out>"->"push \"BGCOLOR param not a number \"";
    "push \"BGCOLOR param not a number \""->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"load.r r0";
    "staticget <java.awt.Color: java.awt.Color white>"
    "load.r r0"->"staticget <java.awt.Color: java.awt.Color white>";
    "staticget <java.awt.Color: java.awt.Color white>"->"fieldput <CabriJava: java.awt.Color aL>";
    "fieldput <CabriJava: java.awt.Color aL>"->"goto load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"load.r r1";
    "load.r r1"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
    "specialinvoke <java.awt.Color: void <init>(int)>"->"fieldput <CabriJava: java.awt.Color aL>";
    "fieldput <CabriJava: java.awt.Color aL>"->"goto load.r r0";
    "ifnull load.r r0"->"load.r r0";
    "load.r r0"->"staticget <java.awt.Color: java.awt.Color white>";
    "staticget <java.awt.Color: java.awt.Color white>"->"fieldput <CabriJava: java.awt.Color aL>";
    "ifnonnull load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.awt.Container ai>";
    "fieldget <CabriJava: java.awt.Container ai>"->"virtualinvoke <java.awt.Component: java.awt.Container getParent()>";
    "virtualinvoke <java.awt.Component: java.awt.Container getParent()>"->"fieldput <CabriJava: java.awt.Container ai>";
    "staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>"->"store.r r1";
    "store.r r1"->"staticget <java.lang.System: java.io.PrintStream out>";
    "staticget <java.lang.System: java.io.PrintStream out>"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "push \"Could not read system properties : \""
    "dup1.r"->"push \"Could not read system properties : \"";
    "push \"Could not read system properties : \""->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.r r1";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>"
    "load.r r1"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>";
    "push \"SECURITY EXCEPTION !\""
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>"->"push \"SECURITY EXCEPTION !\"";
    "push \"SECURITY EXCEPTION !\""->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "ifcmplt.i load.r r0"->"load.r r0";
    "fieldget <CabriJava: boolean[] as>"
    "load.r r0"->"fieldget <CabriJava: boolean[] as>";
    "fieldget <CabriJava: boolean[] as>"->"store.r r1";
    "store.r r1"->"load.i r9";
    "load.i r9"->"push 2";
    "push 2"->"div.i";
    "div.i"->"store.i $i2";
    "store.i $i2"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <CabriJava: java.lang.String 'null'>";
    "fieldget <CabriJava: java.lang.String 'null'>"->"load.i r9";
    "load.i r9"->"load.i r9";
    "load.i r9"->"push 2";
    "push 2"->"add.i";
    "add.i"->"virtualinvoke <java.lang.String: java.lang.String substring(int,int)>";
    "specialinvoke <CabriJava: java.io.InputStream 'new'(java.lang.String)>"
    "virtualinvoke <java.lang.String: java.lang.String substring(int,int)>"->"specialinvoke <CabriJava: java.io.InputStream 'new'(java.lang.String)>";
    "ifnonnull push 1"
    "specialinvoke <CabriJava: java.io.InputStream 'new'(java.lang.String)>"->"ifnonnull push 1";
    "ifnonnull push 1"->"push 0";
    "store.b $z27"
    "push 0"->"store.b $z27";
    "store.b $z27"->"goto load.r r1";
    "goto load.r r1"->"load.r r1";
    "load.r r1"->"load.i $i2";
    "load.b $z27"
    "load.i $i2"->"load.b $z27";
    "arraywrite.b"
    "load.b $z27"->"arraywrite.b";
    "inc.i r9 2"
    "arraywrite.b"->"inc.i r9 2";
    "ifnonnull push 1"->"push 1";
    "push 1"->"store.b $z27";
    "ifnull load.r r0"->"load.r r0";
    "push \"en\""
    "load.r r0"->"push \"en\"";
    "push \"en\""->"fieldput <CabriJava: java.lang.String aK>";
    "virtualinvoke <java.awt.Toolkit: java.awt.datatransfer.Clipboard getSystemClipboard()>"->"store.r r1";
    "store.r r1"->"load.r r0";
    "load.r r0"->"push null";
    "push null"->"fieldput <CabriJava: java.awt.datatransfer.Clipboard bh>";
    "fieldput <CabriJava: java.awt.datatransfer.Clipboard bh>"->"goto load.r r0";
    "ifeq load.r r1"->"load.r r1";
    "push \"com.ms.applet.\""
    "load.r r1"->"push \"com.ms.applet.\"";
    "push \"com.ms.applet.\""->"virtualinvoke <java.lang.String: boolean startsWith(java.lang.String)>";
    "virtualinvoke <java.lang.String: boolean startsWith(java.lang.String)>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"push \"MICROSOFT\"";
    "push \"MICROSOFT\""->"fieldput <CabriJava: java.lang.String 'byte'>";
}
