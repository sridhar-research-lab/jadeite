digraph "" {
    "r0 := @this: Mdrain"
    "load.r r0"
    "r0 := @this: Mdrain"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"autore\""
    "load.r r0"->"push \"autore\"";
    "push \"\""
    "push \"autore\""->"push \"\"";
    "virtualinvoke <Mdrain: java.lang.String getParameter(java.lang.String,java.lang.String)>"
    "push \"\""->"virtualinvoke <Mdrain: java.lang.String getParameter(java.lang.String,java.lang.String)>";
    "fieldput <Mdrain: java.lang.String autore>"
    "virtualinvoke <Mdrain: java.lang.String getParameter(java.lang.String,java.lang.String)>"->"fieldput <Mdrain: java.lang.String autore>";
    "goto load.r r0"
    "fieldput <Mdrain: java.lang.String autore>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "fieldget <Mdrain: java.lang.String autore>"
    "load.r r0"->"fieldget <Mdrain: java.lang.String autore>";
    "push \"Massimo Giari\""
    "fieldget <Mdrain: java.lang.String autore>"->"push \"Massimo Giari\"";
    "virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"
    "push \"Massimo Giari\""->"virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "ifne load.r r0"
    "virtualinvoke <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"->"ifne load.r r0";
    "push 0"
    "ifne load.r r0"->"push 0";
    "staticinvoke <java.lang.System: void exit(int)>"
    "push 0"->"staticinvoke <java.lang.System: void exit(int)>";
    "staticinvoke <java.lang.System: void exit(int)>"->"load.r r0";
    "push \"priority\""
    "load.r r0"->"push \"priority\"";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"
    "push \"priority\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "store.r r1"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r1";
    "load.r r1"
    "store.r r1"->"load.r r1";
    "ifnull push 1"
    "load.r r1"->"ifnull push 1";
    "ifnull push 1"->"load.r r1";
    "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"
    "load.r r1"->"staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>";
    "virtualinvoke <java.lang.Integer: int intValue()>"
    "staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>"->"virtualinvoke <java.lang.Integer: int intValue()>";
    "store.i r1"
    "virtualinvoke <java.lang.Integer: int intValue()>"->"store.i r1";
    "store.i r1"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.i r1"
    "load.r r0"->"load.i r1";
    "fieldput <Mdrain: int nPriority>"
    "load.i r1"->"fieldput <Mdrain: int nPriority>";
    "fieldput <Mdrain: int nPriority>"->"load.r r0";
    "push \"mouse_enter\""
    "load.r r0"->"push \"mouse_enter\"";
    "push \"mouse_enter\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r1";
    "store.r r1"->"load.r r1";
    "ifnull load.r r0"
    "load.r r1"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r0";
    "load.r r0"->"load.r r1";
    "fieldput <Mdrain: java.lang.String m_s_mouse>"
    "load.r r1"->"fieldput <Mdrain: java.lang.String m_s_mouse>";
    "fieldput <Mdrain: java.lang.String m_s_mouse>"->"load.r r0";
    "push \"href\""
    "load.r r0"->"push \"href\"";
    "push \"href\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r0";
    "new java.net.URL"
    "load.r r0"->"new java.net.URL";
    "dup1.r"
    "new java.net.URL"->"dup1.r";
    "dup1.r"->"load.r r0";
    "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"
    "load.r r0"->"virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>";
    "virtualinvoke <java.applet.Applet: java.net.URL getDocumentBase()>"->"load.r r1";
    "specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>"
    "load.r r1"->"specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>";
    "fieldput <Mdrain: java.net.URL m_href>"
    "specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>"->"fieldput <Mdrain: java.net.URL m_href>";
    "fieldput <Mdrain: java.net.URL m_href>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "push \"target\""
    "load.r r0"->"push \"target\"";
    "push \"target\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r0";
    "load.r r0"->"load.r r1";
    "fieldput <Mdrain: java.lang.String m_frame>"
    "load.r r1"->"fieldput <Mdrain: java.lang.String m_frame>";
    "fieldput <Mdrain: java.lang.String m_frame>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
    "fieldget <java.awt.Dimension: int width>"
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int width>";
    "fieldput <Mdrain: int w>"
    "fieldget <java.awt.Dimension: int width>"->"fieldput <Mdrain: int w>";
    "fieldput <Mdrain: int w>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
    "fieldget <java.awt.Dimension: int height>"
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int height>";
    "fieldput <Mdrain: int h>"
    "fieldget <java.awt.Dimension: int height>"->"fieldput <Mdrain: int h>";
    "fieldput <Mdrain: int h>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <Mdrain: int w>"
    "load.r r0"->"fieldget <Mdrain: int w>";
    "fieldget <Mdrain: int w>"->"load.r r0";
    "fieldget <Mdrain: int h>"
    "load.r r0"->"fieldget <Mdrain: int h>";
    "mul.i"
    "fieldget <Mdrain: int h>"->"mul.i";
    "fieldput <Mdrain: int maxPixels>"
    "mul.i"->"fieldput <Mdrain: int maxPixels>";
    "fieldput <Mdrain: int maxPixels>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <Mdrain: int w>";
    "push 2"
    "fieldget <Mdrain: int w>"->"push 2";
    "div.i"
    "push 2"->"div.i";
    "fieldput <Mdrain: int cx>"
    "div.i"->"fieldput <Mdrain: int cx>";
    "fieldput <Mdrain: int cx>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <Mdrain: int h>";
    "fieldget <Mdrain: int h>"->"push 2";
    "push 2"->"div.i";
    "fieldput <Mdrain: int cy>"
    "div.i"->"fieldput <Mdrain: int cy>";
    "fieldput <Mdrain: int cy>"->"load.r r0";
    "fieldget <Mdrain: int cx>"
    "load.r r0"->"fieldget <Mdrain: int cx>";
    "fieldget <Mdrain: int cx>"->"push 2";
    "push 2"->"mul.i";
    "mul.i"->"load.r r0";
    "load.r r0"->"fieldget <Mdrain: int w>";
    "ifcmpge.i load.r r0"
    "fieldget <Mdrain: int w>"->"ifcmpge.i load.r r0";
    "ifcmpge.i load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <Mdrain: int cx>";
    "push 1"
    "fieldget <Mdrain: int cx>"->"push 1";
    "add.i"
    "push 1"->"add.i";
    "fieldput <Mdrain: int cx2>"
    "add.i"->"fieldput <Mdrain: int cx2>";
    "fieldput <Mdrain: int cx2>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "fieldget <Mdrain: int cy>"
    "load.r r0"->"fieldget <Mdrain: int cy>";
    "fieldget <Mdrain: int cy>"->"push 2";
    "push 2"->"mul.i";
    "mul.i"->"load.r r0";
    "load.r r0"->"fieldget <Mdrain: int h>";
    "fieldget <Mdrain: int h>"->"ifcmpge.i load.r r0";
    "ifcmpge.i load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <Mdrain: int cy>";
    "fieldget <Mdrain: int cy>"->"push 1";
    "push 1"->"add.i";
    "fieldput <Mdrain: int cy2>"
    "add.i"->"fieldput <Mdrain: int cy2>";
    "fieldput <Mdrain: int cy2>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <Mdrain: int maxPixels>"
    "load.r r0"->"fieldget <Mdrain: int maxPixels>";
    "newarray"
    "fieldget <Mdrain: int maxPixels>"->"newarray";
    "fieldput <Mdrain: int[] newPix>"
    "newarray"->"fieldput <Mdrain: int[] newPix>";
    "fieldput <Mdrain: int[] newPix>"->"load.r r0";
    "new java.awt.MediaTracker"
    "load.r r0"->"new java.awt.MediaTracker";
    "new java.awt.MediaTracker"->"dup1.r";
    "dup1.r"->"load.r r0";
    "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"
    "load.r r0"->"specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>";
    "fieldput <Mdrain: java.awt.MediaTracker mediaTrack>"
    "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"->"fieldput <Mdrain: java.awt.MediaTracker mediaTrack>";
    "fieldput <Mdrain: java.awt.MediaTracker mediaTrack>"->"load.r r0";
    "new java.awt.Color"
    "load.r r0"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "new java.util.StringTokenizer"
    "dup1.r"->"new java.util.StringTokenizer";
    "new java.util.StringTokenizer"->"dup1.r";
    "dup1.r"->"load.r r0";
    "push \"background\""
    "load.r r0"->"push \"background\"";
    "push \"background\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String)>"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String)>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "push 16"
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"push 16";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>"
    "push 16"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>";
    "specialinvoke <java.awt.Color: void <init>(int)>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>"->"specialinvoke <java.awt.Color: void <init>(int)>";
    "virtualinvoke <java.awt.Color: int getRGB()>"
    "specialinvoke <java.awt.Color: void <init>(int)>"->"virtualinvoke <java.awt.Color: int getRGB()>";
    "fieldput <Mdrain: int sfondoColorRBG>"
    "virtualinvoke <java.awt.Color: int getRGB()>"->"fieldput <Mdrain: int sfondoColorRBG>";
    "fieldput <Mdrain: int sfondoColorRBG>"->"load.r r0";
    "load.r r0"->"new java.util.StringTokenizer";
    "new java.util.StringTokenizer"->"dup1.r";
    "dup1.r"->"load.r r0";
    "push \"speed\""
    "load.r r0"->"push \"speed\"";
    "push \"speed\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String)>";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <Mdrain: int velocity>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <Mdrain: int velocity>";
    "fieldput <Mdrain: int velocity>"->"load.r r0";
    "load.r r0"->"new java.util.StringTokenizer";
    "new java.util.StringTokenizer"->"dup1.r";
    "dup1.r"->"load.r r0";
    "push \"effect_type\""
    "load.r r0"->"push \"effect_type\"";
    "push \"effect_type\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String)>";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <Mdrain: int effetto>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <Mdrain: int effetto>";
    "fieldput <Mdrain: int effetto>"->"load.r r0";
    "fieldget <Mdrain: int effetto>"
    "load.r r0"->"fieldget <Mdrain: int effetto>";
    "push 3"
    "fieldget <Mdrain: int effetto>"->"push 3";
    "ifcmplt.i load.r r0"
    "push 3"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"push 0";
    "push 0"->"fieldput <Mdrain: int effetto>";
    "fieldput <Mdrain: int effetto>"->"load.r r0";
    "load.r r0"->"new java.util.StringTokenizer";
    "new java.util.StringTokenizer"->"dup1.r";
    "dup1.r"->"load.r r0";
    "push \"num_frames\""
    "load.r r0"->"push \"num_frames\"";
    "push \"num_frames\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String)>";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String)>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <Mdrain: int numeroFrames>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <Mdrain: int numeroFrames>";
    "fieldput <Mdrain: int numeroFrames>"->"load.r r0";
    "fieldget <Mdrain: int numeroFrames>"
    "load.r r0"->"fieldget <Mdrain: int numeroFrames>";
    "push 60"
    "fieldget <Mdrain: int numeroFrames>"->"push 60";
    "ifcmpgt.i load.r r0"
    "push 60"->"ifcmpgt.i load.r r0";
    "ifcmpgt.i load.r r0"->"load.r r0";
    "push 100"
    "load.r r0"->"push 100";
    "push 100"->"fieldput <Mdrain: int numeroFrames>";
    "fieldput <Mdrain: int numeroFrames>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <Mdrain: int maxPixels>";
    "fieldget <Mdrain: int maxPixels>"->"newarray";
    "fieldput <Mdrain: int[] imgPixel>"
    "newarray"->"fieldput <Mdrain: int[] imgPixel>";
    "fieldput <Mdrain: int[] imgPixel>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"new java.util.StringTokenizer";
    "new java.util.StringTokenizer"->"dup1.r";
    "dup1.r"->"load.r r0";
    "push \"image\""
    "load.r r0"->"push \"image\"";
    "push \"image\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String)>";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String)>"->"load.r r0";
    "virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>"
    "load.r r0"->"virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>";
    "virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>"->"store.r r1";
    "store.r r1"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "store.r $r25"
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"store.r $r25";
    "store.r $r25"->"load.r r1";
    "load.r $r25"
    "load.r r1"->"load.r $r25";
    "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"
    "load.r $r25"->"virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>";
    "fieldput <Mdrain: java.awt.Image img>"
    "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"fieldput <Mdrain: java.awt.Image img>";
    "fieldput <Mdrain: java.awt.Image img>"->"load.r r0";
    "fieldget <Mdrain: java.awt.MediaTracker mediaTrack>"
    "load.r r0"->"fieldget <Mdrain: java.awt.MediaTracker mediaTrack>";
    "fieldget <Mdrain: java.awt.MediaTracker mediaTrack>"->"load.r r0";
    "fieldget <Mdrain: java.awt.Image img>"
    "load.r r0"->"fieldget <Mdrain: java.awt.Image img>";
    "fieldget <Mdrain: java.awt.Image img>"->"push 0";
    "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"
    "push 0"->"virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>";
    "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"->"push 0";
    "push 0"->"store.i r1";
    "goto load.i r1"
    "store.i r1"->"goto load.i r1";
    "goto load.i r1"->"load.i r1";
    "load.i r1"->"load.r r0";
    "load.r r0"->"fieldget <Mdrain: int maxPixels>";
    "fieldget <Mdrain: int maxPixels>"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "new java.awt.image.MemoryImageSource"
    "load.r r0"->"new java.awt.image.MemoryImageSource";
    "new java.awt.image.MemoryImageSource"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <Mdrain: int w>";
    "fieldget <Mdrain: int w>"->"load.r r0";
    "load.r r0"->"fieldget <Mdrain: int h>";
    "fieldget <Mdrain: int h>"->"load.r r0";
    "fieldget <Mdrain: int[] newPix>"
    "load.r r0"->"fieldget <Mdrain: int[] newPix>";
    "fieldget <Mdrain: int[] newPix>"->"push 0";
    "push 0"->"load.r r0";
    "load.r r0"->"fieldget <Mdrain: int w>";
    "specialinvoke <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>"
    "fieldget <Mdrain: int w>"->"specialinvoke <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>";
    "fieldput <Mdrain: java.awt.image.MemoryImageSource correnteImageSource>"
    "specialinvoke <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>"->"fieldput <Mdrain: java.awt.image.MemoryImageSource correnteImageSource>";
    "fieldput <Mdrain: java.awt.image.MemoryImageSource correnteImageSource>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <Mdrain: java.awt.image.MemoryImageSource correnteImageSource>"
    "load.r r0"->"fieldget <Mdrain: java.awt.image.MemoryImageSource correnteImageSource>";
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>"
    "fieldget <Mdrain: java.awt.image.MemoryImageSource correnteImageSource>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>";
    "fieldput <Mdrain: java.awt.Image correnteImage>"
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>"->"fieldput <Mdrain: java.awt.Image correnteImage>";
    "return"
    "fieldput <Mdrain: java.awt.Image correnteImage>"->"return";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <Mdrain: int[] newPix>";
    "fieldget <Mdrain: int[] newPix>"->"load.i r1";
    "load.i r1"->"load.r r0";
    "fieldget <Mdrain: int sfondoColorRBG>"
    "load.r r0"->"fieldget <Mdrain: int sfondoColorRBG>";
    "arraywrite.i"
    "fieldget <Mdrain: int sfondoColorRBG>"->"arraywrite.i";
    "inc.i r1 1"
    "arraywrite.i"->"inc.i r1 1";
    "ifcmpge.i load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <Mdrain: int cy>";
    "fieldget <Mdrain: int cy>"->"fieldput <Mdrain: int cy2>";
    "ifcmpge.i load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <Mdrain: int cx>";
    "fieldget <Mdrain: int cx>"->"fieldput <Mdrain: int cx2>";
    "specialinvoke <java.net.URL: void <init>(java.net.URL,java.lang.String)>"->"store.r $r25";
    "store.r $r25"->"load.r r0";
    "virtualinvoke <java.applet.Applet: java.applet.AppletContext getAppletContext()>"
    "load.r r0"->"virtualinvoke <java.applet.Applet: java.applet.AppletContext getAppletContext()>";
    "virtualinvoke <java.applet.Applet: java.applet.AppletContext getAppletContext()>"->"load.r r1";
    "staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>"
    "load.r r1"->"staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>";
    "interfaceinvoke <java.applet.AppletContext: void showStatus(java.lang.String)> 1"
    "staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>"->"interfaceinvoke <java.applet.AppletContext: void showStatus(java.lang.String)> 1";
    "interfaceinvoke <java.applet.AppletContext: void showStatus(java.lang.String)> 1"->"return";
    "ifnull push 1"->"push 1";
    "push 1"->"store.i r1";
    "virtualinvoke <Mdrain: java.lang.String getParameter(java.lang.String,java.lang.String)>"->"store.r r1";
}
