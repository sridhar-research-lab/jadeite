digraph "" {
    "r0 := @this: CURVE1"
    "load.r r0"
    "r0 := @this: CURVE1"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"BC\""
    "load.r r0"->"push \"BC\"";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"
    "push \"BC\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "push 16"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"push 16";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>"
    "push 16"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>";
    "fieldput <CURVE1: int nBkColor>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>"->"fieldput <CURVE1: int nBkColor>";
    "fieldput <CURVE1: int nBkColor>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"LC\""
    "load.r r0"->"push \"LC\"";
    "push \"LC\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"push 16";
    "push 16"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>";
    "fieldput <CURVE1: int nLnColor>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>"->"fieldput <CURVE1: int nLnColor>";
    "fieldput <CURVE1: int nLnColor>"->"load.r r0";
    "new java.awt.Color"
    "load.r r0"->"new java.awt.Color";
    "dup1.r"
    "new java.awt.Color"->"dup1.r";
    "push 16777215"
    "dup1.r"->"push 16777215";
    "specialinvoke <java.awt.Color: void <init>(int)>"
    "push 16777215"->"specialinvoke <java.awt.Color: void <init>(int)>";
    "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"
    "specialinvoke <java.awt.Color: void <init>(int)>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
    "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
    "fieldget <java.awt.Dimension: int width>"
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int width>";
    "fieldget <java.awt.Dimension: int width>"->"load.r r0";
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
    "fieldget <java.awt.Dimension: int height>"
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int height>";
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"
    "fieldget <java.awt.Dimension: int height>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
    "fieldput <CURVE1: java.awt.Image offScr>"
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <CURVE1: java.awt.Image offScr>";
    "fieldput <CURVE1: java.awt.Image offScr>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <CURVE1: java.awt.Image offScr>"
    "load.r r0"->"fieldget <CURVE1: java.awt.Image offScr>";
    "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"
    "fieldget <CURVE1: java.awt.Image offScr>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
    "fieldput <CURVE1: java.awt.Graphics dBuf>"
    "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <CURVE1: java.awt.Graphics dBuf>";
    "fieldput <CURVE1: java.awt.Graphics dBuf>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"BCD\""
    "load.r r0"->"push \"BCD\"";
    "push \"BCD\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "fieldput <CURVE1: java.lang.String BCD>"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <CURVE1: java.lang.String BCD>";
    "fieldput <CURVE1: java.lang.String BCD>"->"load.r r0";
    "virtualinvoke <CURVE1: void inVal()>"
    "load.r r0"->"virtualinvoke <CURVE1: void inVal()>";
    "return"
    "virtualinvoke <CURVE1: void inVal()>"->"return";
}
