digraph "" {
    "r0 := @this: TextShow"
    "load.r r0"
    "r0 := @this: TextShow"->"load.r r0";
    "push 1"
    "load.r r0"->"push 1";
    "fieldput <TextShow: boolean start>"
    "push 1"->"fieldput <TextShow: boolean start>";
    "fieldput <TextShow: boolean start>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
    "fieldget <java.awt.Dimension: int width>"
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int width>";
    "fieldput <TextShow: int appletW>"
    "fieldget <java.awt.Dimension: int width>"->"fieldput <TextShow: int appletW>";
    "fieldput <TextShow: int appletW>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
    "fieldget <java.awt.Dimension: int height>"
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int height>";
    "fieldput <TextShow: int appletH>"
    "fieldget <java.awt.Dimension: int height>"->"fieldput <TextShow: int appletH>";
    "fieldput <TextShow: int appletH>"->"load.r r0";
    "fieldget <TextShow: java.awt.Color[] useColor>"
    "load.r r0"->"fieldget <TextShow: java.awt.Color[] useColor>";
    "push 0"
    "fieldget <TextShow: java.awt.Color[] useColor>"->"push 0";
    "new java.awt.Color"
    "push 0"->"new java.awt.Color";
    "dup1.r"
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"push 0";
    "push 0"->"push 0";
    "push 0"->"push 0";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"
    "push 0"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "arraywrite.r"
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "virtualinvoke <TextShow: boolean getfont()>"
    "load.r r0"->"virtualinvoke <TextShow: boolean getfont()>";
    "pop"
    "virtualinvoke <TextShow: boolean getfont()>"->"pop";
    "pop"->"load.r r0";
    "virtualinvoke <TextShow: boolean getbg()>"
    "load.r r0"->"virtualinvoke <TextShow: boolean getbg()>";
    "virtualinvoke <TextShow: boolean getbg()>"->"pop";
    "pop"->"load.r r0";
    "virtualinvoke <TextShow: boolean getlink()>"
    "load.r r0"->"virtualinvoke <TextShow: boolean getlink()>";
    "virtualinvoke <TextShow: boolean getlink()>"->"pop";
    "pop"->"load.r r0";
    "virtualinvoke <TextShow: boolean getlinkcolor()>"
    "load.r r0"->"virtualinvoke <TextShow: boolean getlinkcolor()>";
    "virtualinvoke <TextShow: boolean getlinkcolor()>"->"pop";
    "pop"->"load.r r0";
    "virtualinvoke <TextShow: boolean getfile()>"
    "load.r r0"->"virtualinvoke <TextShow: boolean getfile()>";
    "virtualinvoke <TextShow: boolean getfile()>"->"pop";
    "pop"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <TextShow: java.awt.Font[] fn>"
    "load.r r0"->"fieldget <TextShow: java.awt.Font[] fn>";
    "fieldget <TextShow: java.awt.Font[] fn>"->"load.r r0";
    "fieldget <TextShow: int fnNum>"
    "load.r r0"->"fieldget <TextShow: int fnNum>";
    "arrayread.r"
    "fieldget <TextShow: int fnNum>"->"arrayread.r";
    "virtualinvoke <java.awt.Component: java.awt.FontMetrics getFontMetrics(java.awt.Font)>"
    "arrayread.r"->"virtualinvoke <java.awt.Component: java.awt.FontMetrics getFontMetrics(java.awt.Font)>";
    "fieldput <TextShow: java.awt.FontMetrics fnM>"
    "virtualinvoke <java.awt.Component: java.awt.FontMetrics getFontMetrics(java.awt.Font)>"->"fieldput <TextShow: java.awt.FontMetrics fnM>";
    "fieldput <TextShow: java.awt.FontMetrics fnM>"->"load.r r0";
    "push 300"
    "load.r r0"->"push 300";
    "fieldput <TextShow: int napTime1>"
    "push 300"->"fieldput <TextShow: int napTime1>";
    "fieldput <TextShow: int napTime1>"->"load.r r0";
    "load.r r0"->"push 300";
    "fieldput <TextShow: int napTime>"
    "push 300"->"fieldput <TextShow: int napTime>";
    "return"
    "fieldput <TextShow: int napTime>"->"return";
}
