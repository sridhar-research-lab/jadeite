digraph "" {
    "r0 := @this: Alien"
    "load.r r0"
    "r0 := @this: Alien"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <Alien: java.awt.Dimension getSize()>"
    "load.r r0"->"virtualinvoke <Alien: java.awt.Dimension getSize()>";
    "fieldget <java.awt.Dimension: int height>"
    "virtualinvoke <Alien: java.awt.Dimension getSize()>"->"fieldget <java.awt.Dimension: int height>";
    "fieldput <Alien: int h>"
    "fieldget <java.awt.Dimension: int height>"->"fieldput <Alien: int h>";
    "fieldput <Alien: int h>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"virtualinvoke <Alien: java.awt.Dimension getSize()>";
    "fieldget <java.awt.Dimension: int width>"
    "virtualinvoke <Alien: java.awt.Dimension getSize()>"->"fieldget <java.awt.Dimension: int width>";
    "fieldput <Alien: int w>"
    "fieldget <java.awt.Dimension: int width>"->"fieldput <Alien: int w>";
    "fieldput <Alien: int w>"->"load.r r0";
    "new java.awt.Color"
    "load.r r0"->"new java.awt.Color";
    "dup1.r"
    "new java.awt.Color"->"dup1.r";
    "push 0"
    "dup1.r"->"push 0";
    "push 0"->"push 0";
    "push 0"->"push 0";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"
    "push 0"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "fieldput <Alien: java.awt.Color background>"
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <Alien: java.awt.Color background>";
    "fieldput <Alien: java.awt.Color background>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <Alien: java.awt.Color background>"
    "load.r r0"->"fieldget <Alien: java.awt.Color background>";
    "virtualinvoke <Alien: void setBackground(java.awt.Color)>"
    "fieldget <Alien: java.awt.Color background>"->"virtualinvoke <Alien: void setBackground(java.awt.Color)>";
    "virtualinvoke <Alien: void setBackground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <Alien: int kills>"
    "push 0"->"fieldput <Alien: int kills>";
    "fieldput <Alien: int kills>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <Alien: int aliens>"
    "push 0"->"fieldput <Alien: int aliens>";
    "fieldput <Alien: int aliens>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <Alien: int aliens2>"
    "push 0"->"fieldput <Alien: int aliens2>";
    "fieldput <Alien: int aliens2>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <Alien: int shots>"
    "push 0"->"fieldput <Alien: int shots>";
    "fieldput <Alien: int shots>"->"load.r r0";
    "push 100"
    "load.r r0"->"push 100";
    "fieldput <Alien: int accuracy>"
    "push 100"->"fieldput <Alien: int accuracy>";
    "fieldput <Alien: int accuracy>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <Alien: int score>"
    "push 0"->"fieldput <Alien: int score>";
    "fieldput <Alien: int score>"->"load.r r0";
    "load.r r0"->"push 100";
    "fieldput <Alien: int prob>"
    "push 100"->"fieldput <Alien: int prob>";
    "fieldput <Alien: int prob>"->"load.r r0";
    "push 7"
    "load.r r0"->"push 7";
    "newarray"
    "push 7"->"newarray";
    "fieldput <Alien: int[] buildx>"
    "newarray"->"fieldput <Alien: int[] buildx>";
    "fieldput <Alien: int[] buildx>"->"load.r r0";
    "load.r r0"->"push 7";
    "push 7"->"newarray";
    "fieldput <Alien: int[] buildy>"
    "newarray"->"fieldput <Alien: int[] buildy>";
    "fieldput <Alien: int[] buildy>"->"push 0";
    "store.i $r34"
    "push 0"->"store.i $r34";
    "goto load.i $r34"
    "store.i $r34"->"goto load.i $r34";
    "load.i $r34"
    "goto load.i $r34"->"load.i $r34";
    "load.i $r34"->"push 7";
    "ifcmplt.i load.r r0"
    "push 7"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"push 7";
    "push 7"->"newarray";
    "fieldput <Alien: Monster[] myMonster>"
    "newarray"->"fieldput <Alien: Monster[] myMonster>";
    "fieldput <Alien: Monster[] myMonster>"->"push 0";
    "push 0"->"store.i $r34";
    "store.i $r34"->"goto load.i $r34";
    "goto load.i $r34"->"load.i $r34";
    "load.i $r34"->"push 7";
    "push 7"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "new java.awt.Cursor"
    "load.r r0"->"new java.awt.Cursor";
    "new java.awt.Cursor"->"dup1.r";
    "push 1"
    "dup1.r"->"push 1";
    "specialinvoke <java.awt.Cursor: void <init>(int)>"
    "push 1"->"specialinvoke <java.awt.Cursor: void <init>(int)>";
    "fieldput <Alien: java.awt.Cursor c>"
    "specialinvoke <java.awt.Cursor: void <init>(int)>"->"fieldput <Alien: java.awt.Cursor c>";
    "fieldput <Alien: java.awt.Cursor c>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <Alien: java.awt.Cursor c>"
    "load.r r0"->"fieldget <Alien: java.awt.Cursor c>";
    "virtualinvoke <Alien: void setCursor(java.awt.Cursor)>"
    "fieldget <Alien: java.awt.Cursor c>"->"virtualinvoke <Alien: void setCursor(java.awt.Cursor)>";
    "virtualinvoke <Alien: void setCursor(java.awt.Cursor)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <Alien: void addKeyListener(java.awt.event.KeyListener)>"
    "load.r r0"->"virtualinvoke <Alien: void addKeyListener(java.awt.event.KeyListener)>";
    "virtualinvoke <Alien: void addKeyListener(java.awt.event.KeyListener)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <Alien: void addMouseListener(java.awt.event.MouseListener)>"
    "load.r r0"->"virtualinvoke <Alien: void addMouseListener(java.awt.event.MouseListener)>";
    "virtualinvoke <Alien: void addMouseListener(java.awt.event.MouseListener)>"->"load.r r0";
    "new java.awt.MediaTracker"
    "load.r r0"->"new java.awt.MediaTracker";
    "new java.awt.MediaTracker"->"dup1.r";
    "dup1.r"->"load.r r0";
    "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"
    "load.r r0"->"specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>";
    "fieldput <Alien: java.awt.MediaTracker mt>"
    "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"->"fieldput <Alien: java.awt.MediaTracker mt>";
    "fieldput <Alien: java.awt.MediaTracker mt>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <Alien: java.net.URL getDocumentBase()>"
    "load.r r0"->"virtualinvoke <Alien: java.net.URL getDocumentBase()>";
    "fieldput <Alien: java.net.URL base>"
    "virtualinvoke <Alien: java.net.URL getDocumentBase()>"->"fieldput <Alien: java.net.URL base>";
    "goto load.r r0"
    "fieldput <Alien: java.net.URL base>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <Alien: java.net.URL base>"
    "load.r r0"->"fieldget <Alien: java.net.URL base>";
    "push \"building.jpg\""
    "fieldget <Alien: java.net.URL base>"->"push \"building.jpg\"";
    "virtualinvoke <Alien: java.awt.Image getImage(java.net.URL,java.lang.String)>"
    "push \"building.jpg\""->"virtualinvoke <Alien: java.awt.Image getImage(java.net.URL,java.lang.String)>";
    "fieldput <Alien: java.awt.Image building>"
    "virtualinvoke <Alien: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"fieldput <Alien: java.awt.Image building>";
    "fieldput <Alien: java.awt.Image building>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <Alien: java.net.URL base>";
    "push \"monster1.gif\""
    "fieldget <Alien: java.net.URL base>"->"push \"monster1.gif\"";
    "push \"monster1.gif\""->"virtualinvoke <Alien: java.awt.Image getImage(java.net.URL,java.lang.String)>";
    "fieldput <Alien: java.awt.Image monster>"
    "virtualinvoke <Alien: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"fieldput <Alien: java.awt.Image monster>";
    "fieldput <Alien: java.awt.Image monster>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <Alien: java.net.URL base>";
    "push \"alien2.jpg\""
    "fieldget <Alien: java.net.URL base>"->"push \"alien2.jpg\"";
    "push \"alien2.jpg\""->"virtualinvoke <Alien: java.awt.Image getImage(java.net.URL,java.lang.String)>";
    "fieldput <Alien: java.awt.Image redmonster>"
    "virtualinvoke <Alien: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"fieldput <Alien: java.awt.Image redmonster>";
    "fieldput <Alien: java.awt.Image redmonster>"->"load.r r0";
    "fieldget <Alien: java.awt.MediaTracker mt>"
    "load.r r0"->"fieldget <Alien: java.awt.MediaTracker mt>";
    "fieldget <Alien: java.awt.MediaTracker mt>"->"load.r r0";
    "fieldget <Alien: java.awt.Image building>"
    "load.r r0"->"fieldget <Alien: java.awt.Image building>";
    "fieldget <Alien: java.awt.Image building>"->"push 1";
    "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"
    "push 1"->"virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>";
    "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"->"load.r r0";
    "load.r r0"->"fieldget <Alien: java.awt.MediaTracker mt>";
    "fieldget <Alien: java.awt.MediaTracker mt>"->"load.r r0";
    "fieldget <Alien: java.awt.Image monster>"
    "load.r r0"->"fieldget <Alien: java.awt.Image monster>";
    "push 2"
    "fieldget <Alien: java.awt.Image monster>"->"push 2";
    "push 2"->"virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>";
    "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"->"load.r r0";
    "load.r r0"->"fieldget <Alien: java.awt.MediaTracker mt>";
    "fieldget <Alien: java.awt.MediaTracker mt>"->"load.r r0";
    "fieldget <Alien: java.awt.Image redmonster>"
    "load.r r0"->"fieldget <Alien: java.awt.Image redmonster>";
    "fieldget <Alien: java.awt.Image redmonster>"->"push 2";
    "push 2"->"virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>";
    "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"->"load.r r0";
    "load.r r0"->"fieldget <Alien: java.awt.MediaTracker mt>";
    "virtualinvoke <java.awt.MediaTracker: void waitForAll()>"
    "fieldget <Alien: java.awt.MediaTracker mt>"->"virtualinvoke <java.awt.MediaTracker: void waitForAll()>";
    "goto return"
    "virtualinvoke <java.awt.MediaTracker: void waitForAll()>"->"goto return";
    "return"
    "goto return"->"return";
    "store.r r0"
    "virtualinvoke <java.awt.MediaTracker: void waitForAll()>"->"store.r r0";
    "store.r $r34"
    "virtualinvoke <Alien: java.net.URL getDocumentBase()>"->"store.r $r34";
    "ifcmplt.i load.r r0"->"load.r r0";
    "fieldget <Alien: Monster[] myMonster>"
    "load.r r0"->"fieldget <Alien: Monster[] myMonster>";
    "fieldget <Alien: Monster[] myMonster>"->"load.i $r34";
    "new Monster"
    "load.i $r34"->"new Monster";
    "new Monster"->"dup1.r";
    "dup1.r"->"load.i $r34";
    "push 64"
    "load.i $r34"->"push 64";
    "mul.i"
    "push 64"->"mul.i";
    "push 9"
    "mul.i"->"push 9";
    "add.i"
    "push 9"->"add.i";
    "add.i"->"load.r r0";
    "fieldget <Alien: int[] buildy>"
    "load.r r0"->"fieldget <Alien: int[] buildy>";
    "fieldget <Alien: int[] buildy>"->"load.i $r34";
    "arrayread.i"
    "load.i $r34"->"arrayread.i";
    "push 4"
    "arrayread.i"->"push 4";
    "push 4"->"add.i";
    "specialinvoke <Monster: void <init>(int,int)>"
    "add.i"->"specialinvoke <Monster: void <init>(int,int)>";
    "arraywrite.r"
    "specialinvoke <Monster: void <init>(int,int)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <Alien: Monster[] myMonster>";
    "fieldget <Alien: Monster[] myMonster>"->"load.i $r34";
    "arrayread.r"
    "load.i $r34"->"arrayread.r";
    "arrayread.r"->"push 0";
    "fieldput <Monster: int aliens>"
    "push 0"->"fieldput <Monster: int aliens>";
    "inc.i $r34 1"
    "fieldput <Monster: int aliens>"->"inc.i $r34 1";
    "ifcmplt.i load.r r0"->"load.r r0";
    "fieldget <Alien: int[] buildx>"
    "load.r r0"->"fieldget <Alien: int[] buildx>";
    "fieldget <Alien: int[] buildx>"->"load.i $r34";
    "load.i $r34"->"push 64";
    "push 64"->"load.i $r34";
    "load.i $r34"->"mul.i";
    "arraywrite.i"
    "mul.i"->"arraywrite.i";
    "arraywrite.i"->"load.r r0";
    "load.r r0"->"fieldget <Alien: int[] buildy>";
    "fieldget <Alien: int[] buildy>"->"load.i $r34";
    "load.i $r34"->"load.r r0";
    "fieldget <Alien: java.util.Random generator>"
    "load.r r0"->"fieldget <Alien: java.util.Random generator>";
    "push 160"
    "fieldget <Alien: java.util.Random generator>"->"push 160";
    "virtualinvoke <java.util.Random: int nextInt(int)>"
    "push 160"->"virtualinvoke <java.util.Random: int nextInt(int)>";
    "virtualinvoke <java.util.Random: int nextInt(int)>"->"push 100";
    "push 100"->"add.i";
    "add.i"->"arraywrite.i";
    "arraywrite.i"->"inc.i $r34 1";
}
