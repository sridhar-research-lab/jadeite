digraph "" {
    "r0 := @this: jatris"
    "load.r r0"
    "r0 := @this: jatris"->"load.r r0";
    "push 10"
    "load.r r0"->"push 10";
    "push 20"
    "push 10"->"push 20";
    "newmultiarray 2"
    "push 20"->"newmultiarray 2";
    "fieldput <jatris: short[][] screendata>"
    "newmultiarray 2"->"fieldput <jatris: short[][] screendata>";
    "fieldput <jatris: short[][] screendata>"->"load.r r0";
    "push 7"
    "load.r r0"->"push 7";
    "newarray"
    "push 7"->"newarray";
    "fieldput <jatris: java.awt.Color[] blocks>"
    "newarray"->"fieldput <jatris: java.awt.Color[] blocks>";
    "fieldput <jatris: java.awt.Color[] blocks>"->"load.r r0";
    "fieldget <jatris: java.awt.Color[] blocks>"
    "load.r r0"->"fieldget <jatris: java.awt.Color[] blocks>";
    "push 0"
    "fieldget <jatris: java.awt.Color[] blocks>"->"push 0";
    "push 0"->"load.r r0";
    "fieldget <jatris: java.awt.Color background>"
    "load.r r0"->"fieldget <jatris: java.awt.Color background>";
    "arraywrite.r"
    "fieldget <jatris: java.awt.Color background>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <jatris: java.awt.Color[] blocks>";
    "push 1"
    "fieldget <jatris: java.awt.Color[] blocks>"->"push 1";
    "new java.awt.Color"
    "push 1"->"new java.awt.Color";
    "dup1.r"
    "new java.awt.Color"->"dup1.r";
    "push 255"
    "dup1.r"->"push 255";
    "push 255"->"push 0";
    "push 0"->"push 0";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"
    "push 0"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <jatris: java.awt.Color[] blocks>";
    "push 2"
    "fieldget <jatris: java.awt.Color[] blocks>"->"push 2";
    "push 2"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"push 0";
    "push 0"->"push 255";
    "push 255"->"push 0";
    "push 0"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <jatris: java.awt.Color[] blocks>";
    "push 3"
    "fieldget <jatris: java.awt.Color[] blocks>"->"push 3";
    "push 3"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"push 0";
    "push 0"->"push 0";
    "push 0"->"push 255";
    "push 255"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <jatris: java.awt.Color[] blocks>";
    "push 4"
    "fieldget <jatris: java.awt.Color[] blocks>"->"push 4";
    "push 4"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"push 255";
    "push 255"->"push 255";
    "push 255"->"push 0";
    "push 0"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <jatris: java.awt.Color[] blocks>";
    "push 5"
    "fieldget <jatris: java.awt.Color[] blocks>"->"push 5";
    "push 5"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"push 255";
    "push 255"->"push 0";
    "push 0"->"push 255";
    "push 255"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <jatris: java.awt.Color[] blocks>";
    "push 6"
    "fieldget <jatris: java.awt.Color[] blocks>"->"push 6";
    "push 6"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"push 0";
    "push 0"->"push 255";
    "push 255"->"push 255";
    "push 255"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "push 176"
    "load.r r0"->"push 176";
    "push 350"
    "push 176"->"push 350";
    "virtualinvoke <java.applet.Applet: void resize(int,int)>"
    "push 350"->"virtualinvoke <java.applet.Applet: void resize(int,int)>";
    "virtualinvoke <java.applet.Applet: void resize(int,int)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
    "fieldput <jatris: java.awt.Dimension d>"
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldput <jatris: java.awt.Dimension d>";
    "fieldput <jatris: java.awt.Dimension d>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <jatris: java.awt.Color background>";
    "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"
    "fieldget <jatris: java.awt.Color background>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
    "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"load.r r0";
    "virtualinvoke <java.awt.Component: java.awt.Graphics getGraphics()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Graphics getGraphics()>";
    "store.r r1"
    "virtualinvoke <java.awt.Component: java.awt.Graphics getGraphics()>"->"store.r r1";
    "load.r r1"
    "store.r r1"->"load.r r1";
    "load.r r1"->"load.r r0";
    "fieldget <jatris: java.awt.Font smallfont>"
    "load.r r0"->"fieldget <jatris: java.awt.Font smallfont>";
    "virtualinvoke <java.awt.Graphics: void setFont(java.awt.Font)>"
    "fieldget <jatris: java.awt.Font smallfont>"->"virtualinvoke <java.awt.Graphics: void setFont(java.awt.Font)>";
    "virtualinvoke <java.awt.Graphics: void setFont(java.awt.Font)>"->"load.r r0";
    "load.r r0"->"load.r r1";
    "virtualinvoke <java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>"
    "load.r r1"->"virtualinvoke <java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>";
    "fieldput <jatris: java.awt.FontMetrics fmsmall>"
    "virtualinvoke <java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>"->"fieldput <jatris: java.awt.FontMetrics fmsmall>";
    "fieldput <jatris: java.awt.FontMetrics fmsmall>"->"load.r r1";
    "load.r r1"->"load.r r0";
    "fieldget <jatris: java.awt.Font largefont>"
    "load.r r0"->"fieldget <jatris: java.awt.Font largefont>";
    "fieldget <jatris: java.awt.Font largefont>"->"virtualinvoke <java.awt.Graphics: void setFont(java.awt.Font)>";
    "virtualinvoke <java.awt.Graphics: void setFont(java.awt.Font)>"->"load.r r0";
    "load.r r0"->"load.r r1";
    "load.r r1"->"virtualinvoke <java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>";
    "fieldput <jatris: java.awt.FontMetrics fmlarge>"
    "virtualinvoke <java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>"->"fieldput <jatris: java.awt.FontMetrics fmlarge>";
    "fieldput <jatris: java.awt.FontMetrics fmlarge>"->"load.r r0";
    "virtualinvoke <jatris: void gameInit()>"
    "load.r r0"->"virtualinvoke <jatris: void gameInit()>";
    "return"
    "virtualinvoke <jatris: void gameInit()>"->"return";
}
