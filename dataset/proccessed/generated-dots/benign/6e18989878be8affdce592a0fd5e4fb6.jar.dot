digraph "" {
    "r0 := @this: Linx"
    "load.r r0"
    "r0 := @this: Linx"->"load.r r0";
    "push 400"
    "load.r r0"->"push 400";
    "push 300"
    "push 400"->"push 300";
    "virtualinvoke <java.applet.Applet: void resize(int,int)>"
    "push 300"->"virtualinvoke <java.applet.Applet: void resize(int,int)>";
    "virtualinvoke <java.applet.Applet: void resize(int,int)>"->"load.r r0";
    "push 0"
    "load.r r0"->"push 0";
    "fieldput <Linx: int stage>"
    "push 0"->"fieldput <Linx: int stage>";
    "fieldput <Linx: int stage>"->"load.r r0";
    "new java.awt.Color"
    "load.r r0"->"new java.awt.Color";
    "dup1.r"
    "new java.awt.Color"->"dup1.r";
    "push 128"
    "dup1.r"->"push 128";
    "push 64"
    "push 128"->"push 64";
    "push 64"->"push 0";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"
    "push 0"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "fieldput <Linx: java.awt.Color brown>"
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <Linx: java.awt.Color brown>";
    "fieldput <Linx: java.awt.Color brown>"->"load.r r0";
    "load.r r0"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "push 238"
    "dup1.r"->"push 238";
    "push 238"->"push 238";
    "push 204"
    "push 238"->"push 204";
    "push 204"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "fieldput <Linx: java.awt.Color tan>"
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <Linx: java.awt.Color tan>";
    "fieldput <Linx: java.awt.Color tan>"->"load.r r0";
    "load.r r0"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"push 0";
    "push 0"->"push 128";
    "push 128"->"push 64";
    "push 64"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "fieldput <Linx: java.awt.Color green>"
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <Linx: java.awt.Color green>";
    "fieldput <Linx: java.awt.Color green>"->"load.r r0";
    "load.r r0"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"push 0";
    "push 80"
    "push 0"->"push 80";
    "push 80"->"push 0";
    "push 0"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "fieldput <Linx: java.awt.Color darkGreen>"
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <Linx: java.awt.Color darkGreen>";
    "fieldput <Linx: java.awt.Color darkGreen>"->"load.r r0";
    "push 16"
    "load.r r0"->"push 16";
    "newarray"
    "push 16"->"newarray";
    "fieldput <Linx: int[] maxDist>"
    "newarray"->"fieldput <Linx: int[] maxDist>";
    "fieldput <Linx: int[] maxDist>"->"load.r r0";
    "fieldget <Linx: int[] maxDist>"
    "load.r r0"->"fieldget <Linx: int[] maxDist>";
    "fieldget <Linx: int[] maxDist>"->"push 0";
    "push 270"
    "push 0"->"push 270";
    "arraywrite.i"
    "push 270"->"arraywrite.i";
    "arraywrite.i"->"load.r r0";
    "load.r r0"->"fieldget <Linx: int[] maxDist>";
    "push 1"
    "fieldget <Linx: int[] maxDist>"->"push 1";
    "push 250"
    "push 1"->"push 250";
    "push 250"->"arraywrite.i";
    "push 2"
    "arraywrite.i"->"push 2";
    "store.i $r21"
    "push 2"->"store.i $r21";
    "goto load.i $r21"
    "store.i $r21"->"goto load.i $r21";
    "load.i $r21"
    "goto load.i $r21"->"load.i $r21";
    "push 13"
    "load.i $r21"->"push 13";
    "ifcmplt.i load.r r0"
    "push 13"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <Linx: int[] maxDist>";
    "fieldget <Linx: int[] maxDist>"->"push 13";
    "push 110"
    "push 13"->"push 110";
    "push 110"->"arraywrite.i";
    "arraywrite.i"->"load.r r0";
    "load.r r0"->"fieldget <Linx: int[] maxDist>";
    "push 14"
    "fieldget <Linx: int[] maxDist>"->"push 14";
    "push 90"
    "push 14"->"push 90";
    "push 90"->"arraywrite.i";
    "arraywrite.i"->"load.r r0";
    "load.r r0"->"fieldget <Linx: int[] maxDist>";
    "push 15"
    "fieldget <Linx: int[] maxDist>"->"push 15";
    "push 50"
    "push 15"->"push 50";
    "push 50"->"arraywrite.i";
    "arraywrite.i"->"load.r r0";
    "push 18"
    "load.r r0"->"push 18";
    "push 18"->"newarray";
    "fieldput <Linx: int[] score>"
    "newarray"->"fieldput <Linx: int[] score>";
    "fieldput <Linx: int[] score>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <Linx: int hole>"
    "push 0"->"fieldput <Linx: int hole>";
    "fieldput <Linx: int hole>"->"load.r r0";
    "load.r r0"->"push 2";
    "push 2"->"newarray";
    "fieldput <Linx: double[] ballPos>"
    "newarray"->"fieldput <Linx: double[] ballPos>";
    "fieldput <Linx: double[] ballPos>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <Linx: boolean invalid>"
    "push 0"->"fieldput <Linx: boolean invalid>";
    "fieldput <Linx: boolean invalid>"->"load.r r0";
    "load.r r0"->"push 18";
    "push 205"
    "push 18"->"push 205";
    "newmultiarray 2"
    "push 205"->"newmultiarray 2";
    "fieldput <Linx: int[][] course>"
    "newmultiarray 2"->"fieldput <Linx: int[][] course>";
    "fieldput <Linx: int[][] course>"->"load.r r0";
    "push 3"
    "load.r r0"->"push 3";
    "push 3"->"newarray";
    "fieldput <Linx: int[] courseOptions>"
    "newarray"->"fieldput <Linx: int[] courseOptions>";
    "fieldput <Linx: int[] courseOptions>"->"load.r r0";
    "fieldget <Linx: int[] courseOptions>"
    "load.r r0"->"fieldget <Linx: int[] courseOptions>";
    "fieldget <Linx: int[] courseOptions>"->"push 1";
    "push 1"->"push 1";
    "push 1"->"arraywrite.i";
    "arraywrite.i"->"load.r r0";
    "load.r r0"->"push 2";
    "push 2"->"newarray";
    "fieldput <Linx: int[] cursor>"
    "newarray"->"fieldput <Linx: int[] cursor>";
    "fieldput <Linx: int[] cursor>"->"load.r r0";
    "push 0.0"
    "load.r r0"->"push 0.0";
    "fieldput <Linx: double xOff>"
    "push 0.0"->"fieldput <Linx: double xOff>";
    "fieldput <Linx: double xOff>"->"load.r r0";
    "load.r r0"->"push 0.0";
    "fieldput <Linx: double yOff>"
    "push 0.0"->"fieldput <Linx: double yOff>";
    "fieldput <Linx: double yOff>"->"load.r r0";
    "new java.awt.Frame"
    "load.r r0"->"new java.awt.Frame";
    "new java.awt.Frame"->"dup1.r";
    "specialinvoke <java.awt.Frame: void <init>()>"
    "dup1.r"->"specialinvoke <java.awt.Frame: void <init>()>";
    "fieldput <Linx: java.awt.Frame scoreF>"
    "specialinvoke <java.awt.Frame: void <init>()>"->"fieldput <Linx: java.awt.Frame scoreF>";
    "fieldput <Linx: java.awt.Frame scoreF>"->"load.r r0";
    "load.r r0"->"push 50";
    "push 50"->"newarray";
    "fieldput <Linx: int[] grass>"
    "newarray"->"fieldput <Linx: int[] grass>";
    "new java.util.Random"
    "fieldput <Linx: int[] grass>"->"new java.util.Random";
    "store.r $r21"
    "new java.util.Random"->"store.r $r21";
    "load.r $r21"
    "store.r $r21"->"load.r $r21";
    "specialinvoke <java.util.Random: void <init>()>"
    "load.r $r21"->"specialinvoke <java.util.Random: void <init>()>";
    "specialinvoke <java.util.Random: void <init>()>"->"push 0";
    "store.i i7"
    "push 0"->"store.i i7";
    "goto load.i i7"
    "store.i i7"->"goto load.i i7";
    "load.i i7"
    "goto load.i i7"->"load.i i7";
    "load.i i7"->"push 50";
    "push 50"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"push 2";
    "push 2"->"newarray";
    "fieldput <Linx: int[] wind>"
    "newarray"->"fieldput <Linx: int[] wind>";
    "fieldput <Linx: int[] wind>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <Linx: int height>"
    "push 0"->"fieldput <Linx: int height>";
    "fieldput <Linx: int height>"->"load.r r0";
    "new java.lang.String"
    "load.r r0"->"new java.lang.String";
    "new java.lang.String"->"dup1.r";
    "specialinvoke <java.lang.String: void <init>()>"
    "dup1.r"->"specialinvoke <java.lang.String: void <init>()>";
    "fieldput <Linx: java.lang.String message>"
    "specialinvoke <java.lang.String: void <init>()>"->"fieldput <Linx: java.lang.String message>";
    "fieldput <Linx: java.lang.String message>"->"load.r r0";
    "staticget <java.awt.Color: java.awt.Color black>"
    "load.r r0"->"staticget <java.awt.Color: java.awt.Color black>";
    "fieldput <Linx: java.awt.Color messageColor>"
    "staticget <java.awt.Color: java.awt.Color black>"->"fieldput <Linx: java.awt.Color messageColor>";
    "fieldput <Linx: java.awt.Color messageColor>"->"load.r r0";
    "load.r r0"->"push 2";
    "push 2"->"newarray";
    "fieldput <Linx: double[] oldPos>"
    "newarray"->"fieldput <Linx: double[] oldPos>";
    "fieldput <Linx: double[] oldPos>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <Linx: int oldLie>"
    "push 0"->"fieldput <Linx: int oldLie>";
    "fieldput <Linx: int oldLie>"->"load.r r0";
    "load.r r0"->"push 1";
    "fieldput <Linx: boolean OK>"
    "push 1"->"fieldput <Linx: boolean OK>";
    "fieldput <Linx: boolean OK>"->"load.r r0";
    "load.r r0"->"new java.awt.Frame";
    "new java.awt.Frame"->"dup1.r";
    "dup1.r"->"specialinvoke <java.awt.Frame: void <init>()>";
    "fieldput <Linx: java.awt.Frame codeF>"
    "specialinvoke <java.awt.Frame: void <init>()>"->"fieldput <Linx: java.awt.Frame codeF>";
    "fieldput <Linx: java.awt.Frame codeF>"->"load.r r0";
    "load.r r0"->"new java.awt.Frame";
    "new java.awt.Frame"->"dup1.r";
    "dup1.r"->"specialinvoke <java.awt.Frame: void <init>()>";
    "fieldput <Linx: java.awt.Frame nameF>"
    "specialinvoke <java.awt.Frame: void <init>()>"->"fieldput <Linx: java.awt.Frame nameF>";
    "fieldput <Linx: java.awt.Frame nameF>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <Linx: boolean trip>"
    "push 0"->"fieldput <Linx: boolean trip>";
    "fieldput <Linx: boolean trip>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <Linx: boolean smiley>"
    "push 0"->"fieldput <Linx: boolean smiley>";
    "fieldput <Linx: boolean smiley>"->"load.r r0";
    "load.r r0"->"push 1";
    "fieldput <Linx: boolean tree>"
    "push 1"->"fieldput <Linx: boolean tree>";
    "fieldput <Linx: boolean tree>"->"load.r r0";
    "load.r r0"->"push 1";
    "fieldput <Linx: boolean sand>"
    "push 1"->"fieldput <Linx: boolean sand>";
    "fieldput <Linx: boolean sand>"->"load.r r0";
    "load.r r0"->"push 1";
    "fieldput <Linx: boolean water>"
    "push 1"->"fieldput <Linx: boolean water>";
    "fieldput <Linx: boolean water>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <Linx: boolean night>"
    "push 0"->"fieldput <Linx: boolean night>";
    "fieldput <Linx: boolean night>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <Linx: boolean again>"
    "push 0"->"fieldput <Linx: boolean again>";
    "fieldput <Linx: boolean again>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <Linx: boolean mulligan>"
    "push 0"->"fieldput <Linx: boolean mulligan>";
    "fieldput <Linx: boolean mulligan>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <Linx: boolean cheated>"
    "push 0"->"fieldput <Linx: boolean cheated>";
    "fieldput <Linx: boolean cheated>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <Linx: boolean line>"
    "push 0"->"fieldput <Linx: boolean line>";
    "fieldput <Linx: boolean line>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <Linx: int base>"
    "push 0"->"fieldput <Linx: int base>";
    "return"
    "fieldput <Linx: int base>"->"return";
    "ifcmplt.i load.r r0"->"load.r r0";
    "fieldget <Linx: int[] grass>"
    "load.r r0"->"fieldget <Linx: int[] grass>";
    "fieldget <Linx: int[] grass>"->"load.i i7";
    "load.i i7"->"load.r $r21";
    "virtualinvoke <java.util.Random: int nextInt()>"
    "load.r $r21"->"virtualinvoke <java.util.Random: int nextInt()>";
    "push 30"
    "virtualinvoke <java.util.Random: int nextInt()>"->"push 30";
    "rem.i"
    "push 30"->"rem.i";
    "staticinvoke <java.lang.Math: int abs(int)>"
    "rem.i"->"staticinvoke <java.lang.Math: int abs(int)>";
    "push 20"
    "staticinvoke <java.lang.Math: int abs(int)>"->"push 20";
    "add.i"
    "push 20"->"add.i";
    "add.i"->"arraywrite.i";
    "inc.i i7 1"
    "arraywrite.i"->"inc.i i7 1";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <Linx: int[] maxDist>";
    "fieldget <Linx: int[] maxDist>"->"load.i $r21";
    "load.i $r21"->"push 250";
    "push 250"->"load.i $r21";
    "push 10"
    "load.i $r21"->"push 10";
    "mul.i"
    "push 10"->"mul.i";
    "sub.i"
    "mul.i"->"sub.i";
    "sub.i"->"arraywrite.i";
    "inc.i $r21 1"
    "arraywrite.i"->"inc.i $r21 1";
}
