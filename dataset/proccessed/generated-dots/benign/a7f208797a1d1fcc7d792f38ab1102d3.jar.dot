digraph "" {
    "r0 := @this: announceit"
    "load.r r0"
    "r0 := @this: announceit"->"load.r r0";
    "push \"fps\""
    "load.r r0"->"push \"fps\"";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"
    "push \"fps\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "store.r i0"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r i0";
    "load.r i0"
    "store.r i0"->"load.r i0";
    "ifnonnull load.r i0"
    "load.r i0"->"ifnonnull load.r i0";
    "push \"20\""
    "ifnonnull load.r i0"->"push \"20\"";
    "push \"20\""->"store.r i0";
    "store.r i0"->"load.r i0";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"
    "load.r i0"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Math: int abs(int)>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"staticinvoke <java.lang.Math: int abs(int)>";
    "store.i i0"
    "staticinvoke <java.lang.Math: int abs(int)>"->"store.i i0";
    "load.i i0"
    "store.i i0"->"load.i i0";
    "ifeq load.r r0"
    "load.i i0"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "push 1000"
    "load.r r0"->"push 1000";
    "push 1000"->"load.i i0";
    "div.i"
    "load.i i0"->"div.i";
    "i2f"
    "div.i"->"i2f";
    "staticinvoke <java.lang.Math: int round(float)>"
    "i2f"->"staticinvoke <java.lang.Math: int round(float)>";
    "fieldput <announceit: int SleepTime>"
    "staticinvoke <java.lang.Math: int round(float)>"->"fieldput <announceit: int SleepTime>";
    "goto load.r r0"
    "fieldput <announceit: int SleepTime>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "push \"timeout\""
    "load.r r0"->"push \"timeout\"";
    "push \"timeout\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r i0";
    "store.r i0"->"load.r i0";
    "ifnonnull load.r r0"
    "load.r i0"->"ifnonnull load.r r0";
    "ifnonnull load.r r0"->"load.r r0";
    "push 80"
    "load.r r0"->"push 80";
    "fieldput <announceit: int TimeOut>"
    "push 80"->"fieldput <announceit: int TimeOut>";
    "goto push 0"
    "fieldput <announceit: int TimeOut>"->"goto push 0";
    "push 0"
    "goto push 0"->"push 0";
    "push 0"->"store.i i0";
    "store.i i0"->"push 0";
    "store.b z0"
    "push 0"->"store.b z0";
    "goto load.b z0"
    "store.b z0"->"goto load.b z0";
    "load.b z0"
    "goto load.b z0"->"load.b z0";
    "load.b z0"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.i i0";
    "ifle load.r r0"
    "load.i i0"->"ifle load.r r0";
    "ifle load.r r0"->"load.r r0";
    "load.r r0"->"load.i i0";
    "newarray"
    "load.i i0"->"newarray";
    "fieldput <announceit: java.lang.String[] Text>"
    "newarray"->"fieldput <announceit: java.lang.String[] Text>";
    "fieldput <announceit: java.lang.String[] Text>"->"load.r r0";
    "load.r r0"->"load.i i0";
    "load.i i0"->"newarray";
    "fieldput <announceit: int[] nbTextLines>"
    "newarray"->"fieldput <announceit: int[] nbTextLines>";
    "fieldput <announceit: int[] nbTextLines>"->"load.r r0";
    "load.r r0"->"load.i i0";
    "load.i i0"->"newarray";
    "fieldput <announceit: int[] Wait>"
    "newarray"->"fieldput <announceit: int[] Wait>";
    "fieldput <announceit: int[] Wait>"->"load.r r0";
    "load.r r0"->"load.i i0";
    "push 1"
    "load.i i0"->"push 1";
    "push 1"->"push 1";
    "newmultiarray 3"
    "push 1"->"newmultiarray 3";
    "fieldput <announceit: float[][][] fadeOut>"
    "newmultiarray 3"->"fieldput <announceit: float[][][] fadeOut>";
    "fieldput <announceit: float[][][] fadeOut>"->"load.r r0";
    "load.r r0"->"load.i i0";
    "load.i i0"->"push 1";
    "push 1"->"push 1";
    "push 1"->"newmultiarray 3";
    "fieldput <announceit: float[][][] fadeIn>"
    "newmultiarray 3"->"fieldput <announceit: float[][][] fadeIn>";
    "fieldput <announceit: float[][][] fadeIn>"->"push 0";
    "store.i z0"
    "push 0"->"store.i z0";
    "goto load.i z0"
    "store.i z0"->"goto load.i z0";
    "load.i z0"
    "goto load.i z0"->"load.i z0";
    "load.i z0"->"load.i i0";
    "ifcmplt.i load.r r0"
    "load.i i0"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
    "dup1.r"
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"dup1.r";
    "fieldget <java.awt.Dimension: int width>"
    "dup1.r"->"fieldget <java.awt.Dimension: int width>";
    "fieldget <java.awt.Dimension: int width>"->"store.i i0";
    "store.i i0"->"load.r r0";
    "load.r r0"->"load.i i0";
    "fieldput <announceit: int WinWidth>"
    "load.i i0"->"fieldput <announceit: int WinWidth>";
    "fieldget <java.awt.Dimension: int height>"
    "fieldput <announceit: int WinWidth>"->"fieldget <java.awt.Dimension: int height>";
    "fieldput <announceit: int WinHeight>"
    "fieldget <java.awt.Dimension: int height>"->"fieldput <announceit: int WinHeight>";
    "fieldput <announceit: int WinHeight>"->"load.r r0";
    "specialinvoke <announceit: java.lang.String getFontParameters()>"
    "load.r r0"->"specialinvoke <announceit: java.lang.String getFontParameters()>";
    "pop"
    "specialinvoke <announceit: java.lang.String getFontParameters()>"->"pop";
    "pop"->"load.r r0";
    "new java.awt.Font"
    "load.r r0"->"new java.awt.Font";
    "new java.awt.Font"->"dup1.r";
    "dup1.r"->"load.r r0";
    "fieldget <announceit: java.lang.String FontName>"
    "load.r r0"->"fieldget <announceit: java.lang.String FontName>";
    "fieldget <announceit: java.lang.String FontName>"->"load.r r0";
    "fieldget <announceit: int FontStyle>"
    "load.r r0"->"fieldget <announceit: int FontStyle>";
    "fieldget <announceit: int FontStyle>"->"load.r r0";
    "fieldget <announceit: int FontSize>"
    "load.r r0"->"fieldget <announceit: int FontSize>";
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"
    "fieldget <announceit: int FontSize>"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
    "fieldput <announceit: java.awt.Font theFonts>"
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"fieldput <announceit: java.awt.Font theFonts>";
    "fieldput <announceit: java.awt.Font theFonts>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <announceit: java.awt.Color FontColor>"
    "load.r r0"->"fieldget <announceit: java.awt.Color FontColor>";
    "fieldput <announceit: java.awt.Color CurrentColor>"
    "fieldget <announceit: java.awt.Color FontColor>"->"fieldput <announceit: java.awt.Color CurrentColor>";
    "fieldput <announceit: java.awt.Color CurrentColor>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <announceit: int WinWidth>"
    "load.r r0"->"fieldget <announceit: int WinWidth>";
    "fieldget <announceit: int WinWidth>"->"load.r r0";
    "fieldget <announceit: int WinHeight>"
    "load.r r0"->"fieldget <announceit: int WinHeight>";
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"
    "fieldget <announceit: int WinHeight>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
    "fieldput <announceit: java.awt.Image offScreenImage>"
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <announceit: java.awt.Image offScreenImage>";
    "fieldput <announceit: java.awt.Image offScreenImage>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <announceit: java.awt.Image offScreenImage>"
    "load.r r0"->"fieldget <announceit: java.awt.Image offScreenImage>";
    "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"
    "fieldget <announceit: java.awt.Image offScreenImage>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
    "fieldput <announceit: java.awt.Graphics offScreenGraphics>"
    "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <announceit: java.awt.Graphics offScreenGraphics>";
    "fieldput <announceit: java.awt.Graphics offScreenGraphics>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <announceit: int WinWidth>";
    "fieldget <announceit: int WinWidth>"->"load.r r0";
    "load.r r0"->"fieldget <announceit: int WinHeight>";
    "mul.i"
    "fieldget <announceit: int WinHeight>"->"mul.i";
    "mul.i"->"newarray";
    "fieldput <announceit: int[] pixeldata>"
    "newarray"->"fieldput <announceit: int[] pixeldata>";
    "fieldput <announceit: int[] pixeldata>"->"load.r r0";
    "new java.awt.image.MemoryImageSource"
    "load.r r0"->"new java.awt.image.MemoryImageSource";
    "new java.awt.image.MemoryImageSource"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <announceit: int WinWidth>";
    "fieldget <announceit: int WinWidth>"->"load.r r0";
    "load.r r0"->"fieldget <announceit: int WinHeight>";
    "fieldget <announceit: int WinHeight>"->"load.r r0";
    "fieldget <announceit: int[] pixeldata>"
    "load.r r0"->"fieldget <announceit: int[] pixeldata>";
    "fieldget <announceit: int[] pixeldata>"->"push 0";
    "push 0"->"load.r r0";
    "load.r r0"->"fieldget <announceit: int WinWidth>";
    "specialinvoke <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>"
    "fieldget <announceit: int WinWidth>"->"specialinvoke <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>";
    "fieldput <announceit: java.awt.image.MemoryImageSource imagesource>"
    "specialinvoke <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>"->"fieldput <announceit: java.awt.image.MemoryImageSource imagesource>";
    "fieldput <announceit: java.awt.image.MemoryImageSource imagesource>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <announceit: java.awt.image.MemoryImageSource imagesource>"
    "load.r r0"->"fieldget <announceit: java.awt.image.MemoryImageSource imagesource>";
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>"
    "fieldget <announceit: java.awt.image.MemoryImageSource imagesource>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>";
    "fieldput <announceit: java.awt.Image image>"
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>"->"fieldput <announceit: java.awt.Image image>";
    "fieldput <announceit: java.awt.Image image>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <announceit: int WinWidth>";
    "fieldget <announceit: int WinWidth>"->"load.r r0";
    "load.r r0"->"fieldget <announceit: int WinHeight>";
    "fieldget <announceit: int WinHeight>"->"mul.i";
    "mul.i"->"newarray";
    "fieldput <announceit: int[] maskdata>"
    "newarray"->"fieldput <announceit: int[] maskdata>";
    "fieldput <announceit: int[] maskdata>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <announceit: int WinWidth>";
    "fieldget <announceit: int WinWidth>"->"load.r r0";
    "load.r r0"->"fieldget <announceit: int WinHeight>";
    "fieldget <announceit: int WinHeight>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
    "fieldput <announceit: java.awt.Image mask>"
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <announceit: java.awt.Image mask>";
    "fieldput <announceit: java.awt.Image mask>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <announceit: java.awt.Image mask>"
    "load.r r0"->"fieldget <announceit: java.awt.Image mask>";
    "fieldget <announceit: java.awt.Image mask>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
    "fieldput <announceit: java.awt.Graphics maskGraphics>"
    "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <announceit: java.awt.Graphics maskGraphics>";
    "fieldput <announceit: java.awt.Graphics maskGraphics>"->"load.r r0";
    "fieldget <announceit: java.awt.Graphics maskGraphics>"
    "load.r r0"->"fieldget <announceit: java.awt.Graphics maskGraphics>";
    "fieldget <announceit: java.awt.Graphics maskGraphics>"->"load.r r0";
    "fieldget <announceit: java.awt.Font theFonts>"
    "load.r r0"->"fieldget <announceit: java.awt.Font theFonts>";
    "virtualinvoke <java.awt.Graphics: void setFont(java.awt.Font)>"
    "fieldget <announceit: java.awt.Font theFonts>"->"virtualinvoke <java.awt.Graphics: void setFont(java.awt.Font)>";
    "virtualinvoke <java.awt.Graphics: void setFont(java.awt.Font)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <announceit: java.awt.Graphics maskGraphics>";
    "virtualinvoke <java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>"
    "fieldget <announceit: java.awt.Graphics maskGraphics>"->"virtualinvoke <java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>";
    "fieldput <announceit: java.awt.FontMetrics theFontsMetrics>"
    "virtualinvoke <java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>"->"fieldput <announceit: java.awt.FontMetrics theFontsMetrics>";
    "return"
    "fieldput <announceit: java.awt.FontMetrics theFontsMetrics>"->"return";
    "ifcmplt.i load.r r0"->"load.r r0";
    "fieldget <announceit: java.lang.String[] Text>"
    "load.r r0"->"fieldget <announceit: java.lang.String[] Text>";
    "fieldget <announceit: java.lang.String[] Text>"->"load.i z0";
    "load.i z0"->"load.r r0";
    "new java.lang.StringBuffer"
    "load.r r0"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "push \"text_\""
    "dup1.r"->"push \"text_\"";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"
    "push \"text_\""->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.i z0";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"
    "load.i z0"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "arraywrite.r"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "fieldget <announceit: int[] nbTextLines>"
    "load.r r0"->"fieldget <announceit: int[] nbTextLines>";
    "fieldget <announceit: int[] nbTextLines>"->"load.i z0";
    "load.i z0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <announceit: java.lang.String[] Text>";
    "fieldget <announceit: java.lang.String[] Text>"->"load.i z0";
    "arrayread.r"
    "load.i z0"->"arrayread.r";
    "specialinvoke <announceit: int getNbLines(java.lang.String)>"
    "arrayread.r"->"specialinvoke <announceit: int getNbLines(java.lang.String)>";
    "arraywrite.i"
    "specialinvoke <announceit: int getNbLines(java.lang.String)>"->"arraywrite.i";
    "arraywrite.i"->"load.r r0";
    "load.r r0"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "push \"wait_\""
    "dup1.r"->"push \"wait_\"";
    "push \"wait_\""->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.i z0";
    "load.i z0"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"load.r r0";
    "fieldget <announceit: int[] Wait>"
    "load.r r0"->"fieldget <announceit: int[] Wait>";
    "store.r $r44"
    "fieldget <announceit: int[] Wait>"->"store.r $r44";
    "store.r $r44"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"staticinvoke <java.lang.Math: int abs(int)>";
    "store.i $i23"
    "staticinvoke <java.lang.Math: int abs(int)>"->"store.i $i23";
    "load.r $r44"
    "store.i $i23"->"load.r $r44";
    "load.r $r44"->"load.i z0";
    "load.i $i23"
    "load.i z0"->"load.i $i23";
    "load.i $i23"->"arraywrite.i";
    "arraywrite.i"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "push \"fadeout_\""
    "dup1.r"->"push \"fadeout_\"";
    "push \"fadeout_\""->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.i z0";
    "load.i z0"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"load.r r0";
    "fieldget <announceit: float[][][] fadeOut>"
    "load.r r0"->"fieldget <announceit: float[][][] fadeOut>";
    "fieldget <announceit: float[][][] fadeOut>"->"store.r $r44";
    "store.r $r44"->"load.r r0";
    "fieldget <announceit: float[][][] allFades>"
    "load.r r0"->"fieldget <announceit: float[][][] allFades>";
    "store.r $i23"
    "fieldget <announceit: float[][][] allFades>"->"store.r $i23";
    "virtualinvoke <java.lang.String: java.lang.String toUpperCase()>"
    "store.r $i23"->"virtualinvoke <java.lang.String: java.lang.String toUpperCase()>";
    "specialinvoke <announceit: int selectEffect(java.lang.String)>"
    "virtualinvoke <java.lang.String: java.lang.String toUpperCase()>"->"specialinvoke <announceit: int selectEffect(java.lang.String)>";
    "store.i $i24"
    "specialinvoke <announceit: int selectEffect(java.lang.String)>"->"store.i $i24";
    "store.i $i24"->"load.r $r44";
    "load.r $r44"->"load.i z0";
    "load.r $i23"
    "load.i z0"->"load.r $i23";
    "load.i $i24"
    "load.r $i23"->"load.i $i24";
    "load.i $i24"->"arrayread.r";
    "arrayread.r"->"arraywrite.r";
    "inc.i z0 1"
    "arraywrite.r"->"inc.i z0 1";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "dup1.r"->"push \"text_\"";
    "push \"text_\""->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.i i0";
    "load.i i0"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "ifnonnull inc.i i0 1"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"ifnonnull inc.i i0 1";
    "ifnonnull inc.i i0 1"->"push 1";
    "push 1"->"store.b z0";
    "store.b z0"->"goto load.b z0";
    "inc.i i0 1"
    "ifnonnull inc.i i0 1"->"inc.i i0 1";
    "ifnonnull load.r r0"->"load.r r0";
    "load.r r0"->"load.r i0";
    "load.r i0"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"staticinvoke <java.lang.Math: int abs(int)>";
    "staticinvoke <java.lang.Math: int abs(int)>"->"fieldput <announceit: int TimeOut>";
    "ifeq load.r r0"->"load.r r0";
    "push 50"
    "load.r r0"->"push 50";
    "push 50"->"fieldput <announceit: int SleepTime>";
}
