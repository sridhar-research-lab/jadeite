digraph "" {
    "r0 := @this: Chaos"
    "load.r r0"
    "r0 := @this: Chaos"->"load.r r0";
    "fieldget <Chaos: java.awt.Graphics offGraphics>"
    "load.r r0"->"fieldget <Chaos: java.awt.Graphics offGraphics>";
    "ifnonnull load.r r0"
    "fieldget <Chaos: java.awt.Graphics offGraphics>"->"ifnonnull load.r r0";
    "ifnonnull load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push 320"
    "load.r r0"->"push 320";
    "push 256"
    "push 320"->"push 256";
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"
    "push 256"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
    "fieldput <Chaos: java.awt.Image offImage>"
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <Chaos: java.awt.Image offImage>";
    "fieldput <Chaos: java.awt.Image offImage>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <Chaos: java.awt.Image offImage>"
    "load.r r0"->"fieldget <Chaos: java.awt.Image offImage>";
    "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"
    "fieldget <Chaos: java.awt.Image offImage>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
    "fieldput <Chaos: java.awt.Graphics offGraphics>"
    "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <Chaos: java.awt.Graphics offGraphics>";
    "fieldput <Chaos: java.awt.Graphics offGraphics>"->"load.r r0";
    "push 60"
    "load.r r0"->"push 60";
    "fieldput <Chaos: int delay>"
    "push 60"->"fieldput <Chaos: int delay>";
    "fieldput <Chaos: int delay>"->"load.r r0";
    "fieldget <Chaos: einObjekt[] testoval>"
    "load.r r0"->"fieldget <Chaos: einObjekt[] testoval>";
    "push 0"
    "fieldget <Chaos: einObjekt[] testoval>"->"push 0";
    "new einObjekt"
    "push 0"->"new einObjekt";
    "dup1.r"
    "new einObjekt"->"dup1.r";
    "specialinvoke <einObjekt: void <init>()>"
    "dup1.r"->"specialinvoke <einObjekt: void <init>()>";
    "arraywrite.r"
    "specialinvoke <einObjekt: void <init>()>"->"arraywrite.r";
    "arraywrite.r"->"push 0";
    "store.i i3"
    "push 0"->"store.i i3";
    "goto load.i i3"
    "store.i i3"->"goto load.i i3";
    "load.i i3"
    "goto load.i i3"->"load.i i3";
    "push 360"
    "load.i i3"->"push 360";
    "ifcmplt.i load.r r0"
    "push 360"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"push 0";
    "push 0"->"store.i i3";
    "store.i i3"->"goto load.i i3";
    "goto load.i i3"->"load.i i3";
    "push 4"
    "load.i i3"->"push 4";
    "push 4"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"push 0";
    "push 0"->"store.i i3";
    "store.i i3"->"goto load.i i3";
    "goto load.i i3"->"load.i i3";
    "load.i i3"->"load.r r0";
    "fieldget <Chaos: int movingDots>"
    "load.r r0"->"fieldget <Chaos: int movingDots>";
    "ifcmple.i load.r r0"
    "fieldget <Chaos: int movingDots>"->"ifcmple.i load.r r0";
    "ifcmple.i load.r r0"->"load.r r0";
    "virtualinvoke <Chaos: void level()>"
    "load.r r0"->"virtualinvoke <Chaos: void level()>";
    "virtualinvoke <Chaos: void level()>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <Chaos: int Score>"
    "push 0"->"fieldput <Chaos: int Score>";
    "fieldput <Chaos: int Score>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <Chaos: int Lives>"
    "push 0"->"fieldput <Chaos: int Lives>";
    "return"
    "fieldput <Chaos: int Lives>"->"return";
    "ifcmple.i load.r r0"->"load.r r0";
    "fieldget <Chaos: optik[] backp>"
    "load.r r0"->"fieldget <Chaos: optik[] backp>";
    "fieldget <Chaos: optik[] backp>"->"load.i i3";
    "new optik"
    "load.i i3"->"new optik";
    "new optik"->"dup1.r";
    "specialinvoke <optik: void <init>()>"
    "dup1.r"->"specialinvoke <optik: void <init>()>";
    "specialinvoke <optik: void <init>()>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <Chaos: optik[] backp>";
    "fieldget <Chaos: optik[] backp>"->"load.i i3";
    "arrayread.r"
    "load.i i3"->"arrayread.r";
    "arrayread.r"->"push 0";
    "fieldput <optik: int x>"
    "push 0"->"fieldput <optik: int x>";
    "fieldput <optik: int x>"->"load.r r0";
    "load.r r0"->"fieldget <Chaos: optik[] backp>";
    "fieldget <Chaos: optik[] backp>"->"load.i i3";
    "load.i i3"->"arrayread.r";
    "arrayread.r"->"push 0";
    "fieldput <optik: int y>"
    "push 0"->"fieldput <optik: int y>";
    "fieldput <optik: int y>"->"load.r r0";
    "load.r r0"->"fieldget <Chaos: optik[] backp>";
    "fieldget <Chaos: optik[] backp>"->"load.i i3";
    "load.i i3"->"arrayread.r";
    "arrayread.r"->"push 0";
    "fieldput <optik: int ix>"
    "push 0"->"fieldput <optik: int ix>";
    "fieldput <optik: int ix>"->"load.r r0";
    "load.r r0"->"fieldget <Chaos: optik[] backp>";
    "fieldget <Chaos: optik[] backp>"->"load.i i3";
    "load.i i3"->"arrayread.r";
    "arrayread.r"->"push 0";
    "fieldput <optik: int iy>"
    "push 0"->"fieldput <optik: int iy>";
    "fieldput <optik: int iy>"->"load.r r0";
    "load.r r0"->"fieldget <Chaos: optik[] backp>";
    "fieldget <Chaos: optik[] backp>"->"load.i i3";
    "load.i i3"->"arrayread.r";
    "arrayread.r"->"push 0";
    "fieldput <optik: int flimer>"
    "push 0"->"fieldput <optik: int flimer>";
    "inc.i i3 1"
    "fieldput <optik: int flimer>"->"inc.i i3 1";
    "ifcmplt.i load.r r0"->"load.r r0";
    "fieldget <Chaos: shoot[] schuss>"
    "load.r r0"->"fieldget <Chaos: shoot[] schuss>";
    "fieldget <Chaos: shoot[] schuss>"->"load.i i3";
    "new shoot"
    "load.i i3"->"new shoot";
    "new shoot"->"dup1.r";
    "specialinvoke <shoot: void <init>()>"
    "dup1.r"->"specialinvoke <shoot: void <init>()>";
    "specialinvoke <shoot: void <init>()>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <Chaos: shoot[] schuss>";
    "fieldget <Chaos: shoot[] schuss>"->"load.i i3";
    "load.i i3"->"arrayread.r";
    "arrayread.r"->"push 0";
    "fieldput <shoot: int live>"
    "push 0"->"fieldput <shoot: int live>";
    "fieldput <shoot: int live>"->"inc.i i3 1";
    "ifcmplt.i load.r r0"->"load.r r0";
    "fieldget <Chaos: int[] cosi>"
    "load.r r0"->"fieldget <Chaos: int[] cosi>";
    "fieldget <Chaos: int[] cosi>"->"load.i i3";
    "load.i i3"->"load.i i3";
    "i2d"
    "load.i i3"->"i2d";
    "push 3.1415"
    "i2d"->"push 3.1415";
    "mul.d"
    "push 3.1415"->"mul.d";
    "push 180.0"
    "mul.d"->"push 180.0";
    "div.d"
    "push 180.0"->"div.d";
    "staticinvoke <java.lang.Math: double cos(double)>"
    "div.d"->"staticinvoke <java.lang.Math: double cos(double)>";
    "push 1024.0"
    "staticinvoke <java.lang.Math: double cos(double)>"->"push 1024.0";
    "push 1024.0"->"mul.d";
    "d2i"
    "mul.d"->"d2i";
    "arraywrite.i"
    "d2i"->"arraywrite.i";
    "arraywrite.i"->"load.r r0";
    "fieldget <Chaos: int[] sini>"
    "load.r r0"->"fieldget <Chaos: int[] sini>";
    "fieldget <Chaos: int[] sini>"->"load.i i3";
    "load.i i3"->"load.i i3";
    "load.i i3"->"i2d";
    "i2d"->"push 3.1415";
    "push 3.1415"->"mul.d";
    "mul.d"->"push 180.0";
    "push 180.0"->"div.d";
    "staticinvoke <java.lang.Math: double sin(double)>"
    "div.d"->"staticinvoke <java.lang.Math: double sin(double)>";
    "staticinvoke <java.lang.Math: double sin(double)>"->"push 1024.0";
    "push 1024.0"->"mul.d";
    "mul.d"->"d2i";
    "d2i"->"arraywrite.i";
    "arraywrite.i"->"inc.i i3 1";
}
