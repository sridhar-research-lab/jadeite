digraph "" {
    "r0 := @this: Match"
    "load.r r0"
    "r0 := @this: Match"->"load.r r0";
    "new GameTimer"
    "load.r r0"->"new GameTimer";
    "dup1.r"
    "new GameTimer"->"dup1.r";
    "push 180"
    "dup1.r"->"push 180";
    "specialinvoke <GameTimer: void <init>(int)>"
    "push 180"->"specialinvoke <GameTimer: void <init>(int)>";
    "fieldput <Match: GameTimer timer>"
    "specialinvoke <GameTimer: void <init>(int)>"->"fieldput <Match: GameTimer timer>";
    "fieldput <Match: GameTimer timer>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <Match: java.net.URL getCodeBase()>"
    "load.r r0"->"virtualinvoke <Match: java.net.URL getCodeBase()>";
    "push \"door.wav\""
    "virtualinvoke <Match: java.net.URL getCodeBase()>"->"push \"door.wav\"";
    "virtualinvoke <Match: java.applet.AudioClip getAudioClip(java.net.URL,java.lang.String)>"
    "push \"door.wav\""->"virtualinvoke <Match: java.applet.AudioClip getAudioClip(java.net.URL,java.lang.String)>";
    "fieldput <Match: java.applet.AudioClip door>"
    "virtualinvoke <Match: java.applet.AudioClip getAudioClip(java.net.URL,java.lang.String)>"->"fieldput <Match: java.applet.AudioClip door>";
    "fieldput <Match: java.applet.AudioClip door>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"virtualinvoke <Match: java.net.URL getCodeBase()>";
    "push \"yoohoo.wav\""
    "virtualinvoke <Match: java.net.URL getCodeBase()>"->"push \"yoohoo.wav\"";
    "push \"yoohoo.wav\""->"virtualinvoke <Match: java.applet.AudioClip getAudioClip(java.net.URL,java.lang.String)>";
    "fieldput <Match: java.applet.AudioClip yoohoo>"
    "virtualinvoke <Match: java.applet.AudioClip getAudioClip(java.net.URL,java.lang.String)>"->"fieldput <Match: java.applet.AudioClip yoohoo>";
    "fieldput <Match: java.applet.AudioClip yoohoo>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"virtualinvoke <Match: java.net.URL getCodeBase()>";
    "push \"gameover.wav\""
    "virtualinvoke <Match: java.net.URL getCodeBase()>"->"push \"gameover.wav\"";
    "push \"gameover.wav\""->"virtualinvoke <Match: java.applet.AudioClip getAudioClip(java.net.URL,java.lang.String)>";
    "fieldput <Match: java.applet.AudioClip gameover>"
    "virtualinvoke <Match: java.applet.AudioClip getAudioClip(java.net.URL,java.lang.String)>"->"fieldput <Match: java.applet.AudioClip gameover>";
    "fieldput <Match: java.applet.AudioClip gameover>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"virtualinvoke <Match: java.net.URL getCodeBase()>";
    "push \"aroooga.wav\""
    "virtualinvoke <Match: java.net.URL getCodeBase()>"->"push \"aroooga.wav\"";
    "push \"aroooga.wav\""->"virtualinvoke <Match: java.applet.AudioClip getAudioClip(java.net.URL,java.lang.String)>";
    "fieldput <Match: java.applet.AudioClip aroooga>"
    "virtualinvoke <Match: java.applet.AudioClip getAudioClip(java.net.URL,java.lang.String)>"->"fieldput <Match: java.applet.AudioClip aroooga>";
    "fieldput <Match: java.applet.AudioClip aroooga>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"virtualinvoke <Match: java.net.URL getCodeBase()>";
    "push \"bicycleHorn.wav\""
    "virtualinvoke <Match: java.net.URL getCodeBase()>"->"push \"bicycleHorn.wav\"";
    "push \"bicycleHorn.wav\""->"virtualinvoke <Match: java.applet.AudioClip getAudioClip(java.net.URL,java.lang.String)>";
    "fieldput <Match: java.applet.AudioClip bicycleHorn>"
    "virtualinvoke <Match: java.applet.AudioClip getAudioClip(java.net.URL,java.lang.String)>"->"fieldput <Match: java.applet.AudioClip bicycleHorn>";
    "fieldput <Match: java.applet.AudioClip bicycleHorn>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"virtualinvoke <Match: java.net.URL getCodeBase()>";
    "push \"start.wav\""
    "virtualinvoke <Match: java.net.URL getCodeBase()>"->"push \"start.wav\"";
    "push \"start.wav\""->"virtualinvoke <Match: java.applet.AudioClip getAudioClip(java.net.URL,java.lang.String)>";
    "fieldput <Match: java.applet.AudioClip start>"
    "virtualinvoke <Match: java.applet.AudioClip getAudioClip(java.net.URL,java.lang.String)>"->"fieldput <Match: java.applet.AudioClip start>";
    "push 20"
    "fieldput <Match: java.applet.AudioClip start>"->"push 20";
    "newarray"
    "push 20"->"newarray";
    "store.r $r15"
    "newarray"->"store.r $r15";
    "load.r $r15"
    "store.r $r15"->"load.r $r15";
    "push 0"
    "load.r $r15"->"push 0";
    "push \"1.gif\""
    "push 0"->"push \"1.gif\"";
    "arraywrite.r"
    "push \"1.gif\""->"arraywrite.r";
    "arraywrite.r"->"load.r $r15";
    "push 1"
    "load.r $r15"->"push 1";
    "push \"2.gif\""
    "push 1"->"push \"2.gif\"";
    "push \"2.gif\""->"arraywrite.r";
    "arraywrite.r"->"load.r $r15";
    "push 2"
    "load.r $r15"->"push 2";
    "push \"3.gif\""
    "push 2"->"push \"3.gif\"";
    "push \"3.gif\""->"arraywrite.r";
    "arraywrite.r"->"load.r $r15";
    "push 3"
    "load.r $r15"->"push 3";
    "push \"4.gif\""
    "push 3"->"push \"4.gif\"";
    "push \"4.gif\""->"arraywrite.r";
    "arraywrite.r"->"load.r $r15";
    "push 4"
    "load.r $r15"->"push 4";
    "push \"5.gif\""
    "push 4"->"push \"5.gif\"";
    "push \"5.gif\""->"arraywrite.r";
    "arraywrite.r"->"load.r $r15";
    "push 5"
    "load.r $r15"->"push 5";
    "push \"6.gif\""
    "push 5"->"push \"6.gif\"";
    "push \"6.gif\""->"arraywrite.r";
    "arraywrite.r"->"load.r $r15";
    "push 6"
    "load.r $r15"->"push 6";
    "push \"7.gif\""
    "push 6"->"push \"7.gif\"";
    "push \"7.gif\""->"arraywrite.r";
    "arraywrite.r"->"load.r $r15";
    "push 7"
    "load.r $r15"->"push 7";
    "push \"8.gif\""
    "push 7"->"push \"8.gif\"";
    "push \"8.gif\""->"arraywrite.r";
    "arraywrite.r"->"load.r $r15";
    "push 8"
    "load.r $r15"->"push 8";
    "push \"9.gif\""
    "push 8"->"push \"9.gif\"";
    "push \"9.gif\""->"arraywrite.r";
    "arraywrite.r"->"load.r $r15";
    "push 9"
    "load.r $r15"->"push 9";
    "push \"10.gif\""
    "push 9"->"push \"10.gif\"";
    "push \"10.gif\""->"arraywrite.r";
    "arraywrite.r"->"load.r $r15";
    "push 10"
    "load.r $r15"->"push 10";
    "push \"11.gif\""
    "push 10"->"push \"11.gif\"";
    "push \"11.gif\""->"arraywrite.r";
    "arraywrite.r"->"load.r $r15";
    "push 11"
    "load.r $r15"->"push 11";
    "push \"12.gif\""
    "push 11"->"push \"12.gif\"";
    "push \"12.gif\""->"arraywrite.r";
    "arraywrite.r"->"load.r $r15";
    "push 12"
    "load.r $r15"->"push 12";
    "push \"13.gif\""
    "push 12"->"push \"13.gif\"";
    "push \"13.gif\""->"arraywrite.r";
    "arraywrite.r"->"load.r $r15";
    "push 13"
    "load.r $r15"->"push 13";
    "push \"14.gif\""
    "push 13"->"push \"14.gif\"";
    "push \"14.gif\""->"arraywrite.r";
    "arraywrite.r"->"load.r $r15";
    "push 14"
    "load.r $r15"->"push 14";
    "push \"15.gif\""
    "push 14"->"push \"15.gif\"";
    "push \"15.gif\""->"arraywrite.r";
    "arraywrite.r"->"load.r $r15";
    "push 15"
    "load.r $r15"->"push 15";
    "push \"16.gif\""
    "push 15"->"push \"16.gif\"";
    "push \"16.gif\""->"arraywrite.r";
    "arraywrite.r"->"load.r $r15";
    "push 16"
    "load.r $r15"->"push 16";
    "push \"17.gif\""
    "push 16"->"push \"17.gif\"";
    "push \"17.gif\""->"arraywrite.r";
    "arraywrite.r"->"load.r $r15";
    "push 17"
    "load.r $r15"->"push 17";
    "push \"18.gif\""
    "push 17"->"push \"18.gif\"";
    "push \"18.gif\""->"arraywrite.r";
    "arraywrite.r"->"load.r $r15";
    "push 18"
    "load.r $r15"->"push 18";
    "push \"19.gif\""
    "push 18"->"push \"19.gif\"";
    "push \"19.gif\""->"arraywrite.r";
    "arraywrite.r"->"load.r $r15";
    "push 19"
    "load.r $r15"->"push 19";
    "push \"20.gif\""
    "push 19"->"push \"20.gif\"";
    "push \"20.gif\""->"arraywrite.r";
    "arraywrite.r"->"push 0";
    "store.i i44"
    "push 0"->"store.i i44";
    "goto load.i i44"
    "store.i i44"->"goto load.i i44";
    "load.i i44"
    "goto load.i i44"->"load.i i44";
    "load.i i44"->"load.r r0";
    "fieldget <Match: java.awt.Image[] matchimg>"
    "load.r r0"->"fieldget <Match: java.awt.Image[] matchimg>";
    "arraylength"
    "fieldget <Match: java.awt.Image[] matchimg>"->"arraylength";
    "ifcmplt.i load.r r0"
    "arraylength"->"ifcmplt.i load.r r0";
    "goto load.r r0"
    "ifcmplt.i load.r r0"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "fieldget <Match: int count>"
    "load.r r0"->"fieldget <Match: int count>";
    "fieldget <Match: int count>"->"load.r r0";
    "fieldget <Match: int size>"
    "load.r r0"->"fieldget <Match: int size>";
    "fieldget <Match: int size>"->"load.r r0";
    "load.r r0"->"fieldget <Match: int size>";
    "mul.i"
    "fieldget <Match: int size>"->"mul.i";
    "ifcmpne.i load.r r0"
    "mul.i"->"ifcmpne.i load.r r0";
    "return"
    "ifcmpne.i load.r r0"->"return";
    "ifcmpne.i load.r r0"->"load.r r0";
    "staticinvoke <java.lang.Math: double random()>"
    "load.r r0"->"staticinvoke <java.lang.Math: double random()>";
    "push 20.0"
    "staticinvoke <java.lang.Math: double random()>"->"push 20.0";
    "mul.d"
    "push 20.0"->"mul.d";
    "d2i"
    "mul.d"->"d2i";
    "fieldput <Match: int p>"
    "d2i"->"fieldput <Match: int p>";
    "fieldput <Match: int p>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"staticinvoke <java.lang.Math: double random()>";
    "staticinvoke <java.lang.Math: double random()>"->"load.r r0";
    "load.r r0"->"fieldget <Match: int size>";
    "i2d"
    "fieldget <Match: int size>"->"i2d";
    "i2d"->"mul.d";
    "mul.d"->"d2i";
    "fieldput <Match: int row>"
    "d2i"->"fieldput <Match: int row>";
    "fieldput <Match: int row>"->"load.r r0";
    "load.r r0"->"staticinvoke <java.lang.Math: double random()>";
    "staticinvoke <java.lang.Math: double random()>"->"load.r r0";
    "load.r r0"->"fieldget <Match: int size>";
    "fieldget <Match: int size>"->"i2d";
    "i2d"->"mul.d";
    "mul.d"->"d2i";
    "fieldput <Match: int col>"
    "d2i"->"fieldput <Match: int col>";
    "fieldput <Match: int col>"->"load.r r0";
    "fieldget <Match: Block[][] screen>"
    "load.r r0"->"fieldget <Match: Block[][] screen>";
    "fieldget <Match: Block[][] screen>"->"load.r r0";
    "fieldget <Match: int row>"
    "load.r r0"->"fieldget <Match: int row>";
    "arrayread.r"
    "fieldget <Match: int row>"->"arrayread.r";
    "arrayread.r"->"load.r r0";
    "fieldget <Match: int col>"
    "load.r r0"->"fieldget <Match: int col>";
    "fieldget <Match: int col>"->"arrayread.r";
    "ifnonnull load.r r0"
    "arrayread.r"->"ifnonnull load.r r0";
    "ifnonnull load.r r0"->"load.r r0";
    "new Block"
    "load.r r0"->"new Block";
    "new Block"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <Match: int row>";
    "fieldget <Match: int row>"->"load.r r0";
    "fieldget <Match: int iwidth>"
    "load.r r0"->"fieldget <Match: int iwidth>";
    "fieldget <Match: int iwidth>"->"mul.i";
    "mul.i"->"load.r r0";
    "load.r r0"->"fieldget <Match: int col>";
    "fieldget <Match: int col>"->"load.r r0";
    "fieldget <Match: int iheight>"
    "load.r r0"->"fieldget <Match: int iheight>";
    "fieldget <Match: int iheight>"->"mul.i";
    "mul.i"->"load.r r0";
    "load.r r0"->"fieldget <Match: int iwidth>";
    "fieldget <Match: int iwidth>"->"load.r r0";
    "load.r r0"->"fieldget <Match: int iheight>";
    "fieldget <Match: int iheight>"->"load.r r0";
    "fieldget <Match: int p>"
    "load.r r0"->"fieldget <Match: int p>";
    "fieldget <Match: int p>"->"push 1";
    "specialinvoke <Block: void <init>(int,int,int,int,int,boolean)>"
    "push 1"->"specialinvoke <Block: void <init>(int,int,int,int,int,boolean)>";
    "fieldput <Match: Block block>"
    "specialinvoke <Block: void <init>(int,int,int,int,int,boolean)>"->"fieldput <Match: Block block>";
    "fieldput <Match: Block block>"->"load.r r0";
    "load.r r0"->"fieldget <Match: Block[][] screen>";
    "fieldget <Match: Block[][] screen>"->"load.r r0";
    "load.r r0"->"fieldget <Match: int row>";
    "fieldget <Match: int row>"->"arrayread.r";
    "arrayread.r"->"load.r r0";
    "load.r r0"->"fieldget <Match: int col>";
    "fieldget <Match: int col>"->"load.r r0";
    "fieldget <Match: Block block>"
    "load.r r0"->"fieldget <Match: Block block>";
    "fieldget <Match: Block block>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <Match: int count>";
    "fieldget <Match: int count>"->"push 1";
    "add.i"
    "push 1"->"add.i";
    "fieldput <Match: int count>"
    "add.i"->"fieldput <Match: int count>";
    "fieldput <Match: int count>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"staticinvoke <java.lang.Math: double random()>";
    "staticinvoke <java.lang.Math: double random()>"->"load.r r0";
    "load.r r0"->"fieldget <Match: int size>";
    "fieldget <Match: int size>"->"i2d";
    "i2d"->"mul.d";
    "mul.d"->"d2i";
    "d2i"->"fieldput <Match: int row>";
    "fieldput <Match: int row>"->"load.r r0";
    "load.r r0"->"staticinvoke <java.lang.Math: double random()>";
    "staticinvoke <java.lang.Math: double random()>"->"load.r r0";
    "load.r r0"->"fieldget <Match: int size>";
    "fieldget <Match: int size>"->"i2d";
    "i2d"->"mul.d";
    "mul.d"->"d2i";
    "d2i"->"fieldput <Match: int col>";
    "fieldput <Match: int col>"->"load.r r0";
    "load.r r0"->"fieldget <Match: Block[][] screen>";
    "fieldget <Match: Block[][] screen>"->"load.r r0";
    "load.r r0"->"fieldget <Match: int row>";
    "fieldget <Match: int row>"->"arrayread.r";
    "arrayread.r"->"load.r r0";
    "load.r r0"->"fieldget <Match: int col>";
    "fieldget <Match: int col>"->"arrayread.r";
    "arrayread.r"->"ifnonnull load.r r0";
    "ifnonnull load.r r0"->"load.r r0";
    "load.r r0"->"new Block";
    "new Block"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <Match: int row>";
    "fieldget <Match: int row>"->"load.r r0";
    "load.r r0"->"fieldget <Match: int iwidth>";
    "fieldget <Match: int iwidth>"->"mul.i";
    "mul.i"->"load.r r0";
    "load.r r0"->"fieldget <Match: int col>";
    "fieldget <Match: int col>"->"load.r r0";
    "load.r r0"->"fieldget <Match: int iheight>";
    "fieldget <Match: int iheight>"->"mul.i";
    "mul.i"->"load.r r0";
    "load.r r0"->"fieldget <Match: int iwidth>";
    "fieldget <Match: int iwidth>"->"load.r r0";
    "load.r r0"->"fieldget <Match: int iheight>";
    "fieldget <Match: int iheight>"->"load.r r0";
    "load.r r0"->"fieldget <Match: int p>";
    "fieldget <Match: int p>"->"push 1";
    "push 1"->"specialinvoke <Block: void <init>(int,int,int,int,int,boolean)>";
    "specialinvoke <Block: void <init>(int,int,int,int,int,boolean)>"->"fieldput <Match: Block block>";
    "fieldput <Match: Block block>"->"load.r r0";
    "load.r r0"->"fieldget <Match: Block[][] screen>";
    "fieldget <Match: Block[][] screen>"->"load.r r0";
    "load.r r0"->"fieldget <Match: int row>";
    "fieldget <Match: int row>"->"arrayread.r";
    "arrayread.r"->"load.r r0";
    "load.r r0"->"fieldget <Match: int col>";
    "fieldget <Match: int col>"->"load.r r0";
    "load.r r0"->"fieldget <Match: Block block>";
    "fieldget <Match: Block block>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <Match: int count>";
    "fieldget <Match: int count>"->"push 1";
    "push 1"->"add.i";
    "add.i"->"fieldput <Match: int count>";
    "fieldput <Match: int count>"->"goto load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <Match: java.awt.Image[] matchimg>";
    "fieldget <Match: java.awt.Image[] matchimg>"->"load.i i44";
    "load.i i44"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"virtualinvoke <Match: java.net.URL getCodeBase()>";
    "virtualinvoke <Match: java.net.URL getCodeBase()>"->"load.r $r15";
    "load.r $r15"->"load.i i44";
    "load.i i44"->"arrayread.r";
    "virtualinvoke <Match: java.awt.Image getImage(java.net.URL,java.lang.String)>"
    "arrayread.r"->"virtualinvoke <Match: java.awt.Image getImage(java.net.URL,java.lang.String)>";
    "virtualinvoke <Match: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"arraywrite.r";
    "inc.i i44 1"
    "arraywrite.r"->"inc.i i44 1";
}
