digraph "" {
    "r0 := @this: SIRtext"
    "load.r r0"
    "r0 := @this: SIRtext"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>"
    "load.r r0"->"virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>";
    "virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>"
    "load.r r0"->"virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>";
    "virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>"->"load.r r0";
    "push 0"
    "load.r r0"->"push 0";
    "fieldput <SIRtext: int FIRST>"
    "push 0"->"fieldput <SIRtext: int FIRST>";
    "fieldput <SIRtext: int FIRST>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <SIRtext: int NEXTPAGE>"
    "push 0"->"fieldput <SIRtext: int NEXTPAGE>";
    "fieldput <SIRtext: int NEXTPAGE>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>";
    "fieldget <java.awt.Dimension: int width>"
    "virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>"->"fieldget <java.awt.Dimension: int width>";
    "fieldput <SIRtext: int WIDTH>"
    "fieldget <java.awt.Dimension: int width>"->"fieldput <SIRtext: int WIDTH>";
    "fieldput <SIRtext: int WIDTH>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>";
    "fieldget <java.awt.Dimension: int height>"
    "virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>"->"fieldget <java.awt.Dimension: int height>";
    "fieldput <SIRtext: int HEIGHT>"
    "fieldget <java.awt.Dimension: int height>"->"fieldput <SIRtext: int HEIGHT>";
    "fieldput <SIRtext: int HEIGHT>"->"load.r r0";
    "push 11"
    "load.r r0"->"push 11";
    "newarray"
    "push 11"->"newarray";
    "fieldput <SIRtext: java.awt.Font[] FONTS>"
    "newarray"->"fieldput <SIRtext: java.awt.Font[] FONTS>";
    "fieldput <SIRtext: java.awt.Font[] FONTS>"->"load.r r0";
    "push 1"
    "load.r r0"->"push 1";
    "fieldput <SIRtext: int i>"
    "push 1"->"fieldput <SIRtext: int i>";
    "goto load.r r0"
    "fieldput <SIRtext: int i>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "fieldget <SIRtext: int i>"
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"push 11";
    "ifcmplt.i load.r r0"
    "push 11"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "fieldget <SIRtext: java.awt.Font[] FONTS>"
    "load.r r0"->"fieldget <SIRtext: java.awt.Font[] FONTS>";
    "fieldget <SIRtext: java.awt.Font[] FONTS>"->"push 0";
    "new java.awt.Font"
    "push 0"->"new java.awt.Font";
    "dup1.r"
    "new java.awt.Font"->"dup1.r";
    "push \"Helvetica\""
    "dup1.r"->"push \"Helvetica\"";
    "push \"Helvetica\""->"push 0";
    "push 10"
    "push 0"->"push 10";
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"
    "push 10"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
    "arraywrite.r"
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "push 13"
    "load.r r0"->"push 13";
    "push 13"->"newarray";
    "fieldput <SIRtext: java.awt.Color[] COLORS>"
    "newarray"->"fieldput <SIRtext: java.awt.Color[] COLORS>";
    "fieldput <SIRtext: java.awt.Color[] COLORS>"->"load.r r0";
    "load.r r0"->"push 0";
    "push 0"->"fieldput <SIRtext: int i>";
    "fieldput <SIRtext: int i>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"push 10";
    "push 10"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "fieldget <SIRtext: java.awt.Color[] COLORS>"
    "load.r r0"->"fieldget <SIRtext: java.awt.Color[] COLORS>";
    "fieldget <SIRtext: java.awt.Color[] COLORS>"->"push 0";
    "new java.awt.Color"
    "push 0"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "push 255"
    "dup1.r"->"push 255";
    "push 255"->"push 255";
    "push 255"->"push 255";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"
    "push 255"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.awt.Color[] COLORS>";
    "fieldget <SIRtext: java.awt.Color[] COLORS>"->"push 11";
    "push 11"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"push 255";
    "push 20"
    "push 255"->"push 20";
    "push 50"
    "push 20"->"push 50";
    "push 50"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.awt.Color[] COLORS>";
    "push 12"
    "fieldget <SIRtext: java.awt.Color[] COLORS>"->"push 12";
    "push 12"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"push 0";
    "push 0"->"push 0";
    "push 0"->"push 0";
    "push 0"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"TITLE\""
    "load.r r0"->"push \"TITLE\"";
    "push \" \""
    "push \"TITLE\""->"push \" \"";
    "virtualinvoke <SIRtext: java.lang.String parmgetstr(java.lang.String,java.lang.String)>"
    "push \" \""->"virtualinvoke <SIRtext: java.lang.String parmgetstr(java.lang.String,java.lang.String)>";
    "fieldput <SIRtext: java.lang.String TITLE>"
    "virtualinvoke <SIRtext: java.lang.String parmgetstr(java.lang.String,java.lang.String)>"->"fieldput <SIRtext: java.lang.String TITLE>";
    "fieldput <SIRtext: java.lang.String TITLE>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"TITLEFONT\""
    "load.r r0"->"push \"TITLEFONT\"";
    "push \"TITLEFONT\""->"push 0";
    "push 0"->"push 0";
    "push 9"
    "push 0"->"push 9";
    "virtualinvoke <SIRtext: int parmgetint(java.lang.String,int,int,int)>"
    "push 9"->"virtualinvoke <SIRtext: int parmgetint(java.lang.String,int,int,int)>";
    "fieldput <SIRtext: int TITLEFONT>"
    "virtualinvoke <SIRtext: int parmgetint(java.lang.String,int,int,int)>"->"fieldput <SIRtext: int TITLEFONT>";
    "fieldput <SIRtext: int TITLEFONT>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"TITLECOLOR\""
    "load.r r0"->"push \"TITLECOLOR\"";
    "push \"TITLECOLOR\""->"push 12";
    "push 12"->"push 1";
    "push 1"->"push 10";
    "push 10"->"virtualinvoke <SIRtext: int parmgetint(java.lang.String,int,int,int)>";
    "fieldput <SIRtext: int TITLECOLOR>"
    "virtualinvoke <SIRtext: int parmgetint(java.lang.String,int,int,int)>"->"fieldput <SIRtext: int TITLECOLOR>";
    "fieldput <SIRtext: int TITLECOLOR>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"BGCOLOR\""
    "load.r r0"->"push \"BGCOLOR\"";
    "push \"BGCOLOR\""->"push 0";
    "push 0"->"push 1";
    "push 1"->"push 10";
    "push 10"->"virtualinvoke <SIRtext: int parmgetint(java.lang.String,int,int,int)>";
    "fieldput <SIRtext: int BGCOLOR>"
    "virtualinvoke <SIRtext: int parmgetint(java.lang.String,int,int,int)>"->"fieldput <SIRtext: int BGCOLOR>";
    "fieldput <SIRtext: int BGCOLOR>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"BORDERWIDTH\""
    "load.r r0"->"push \"BORDERWIDTH\"";
    "push \"BORDERWIDTH\""->"push 0";
    "push 0"->"push 0";
    "push 0"->"push 20";
    "push 20"->"virtualinvoke <SIRtext: int parmgetint(java.lang.String,int,int,int)>";
    "fieldput <SIRtext: int BORDERWIDTH>"
    "virtualinvoke <SIRtext: int parmgetint(java.lang.String,int,int,int)>"->"fieldput <SIRtext: int BORDERWIDTH>";
    "fieldput <SIRtext: int BORDERWIDTH>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"BORDERCOLOR\""
    "load.r r0"->"push \"BORDERCOLOR\"";
    "push \"BORDERCOLOR\""->"push 0";
    "push 0"->"push 1";
    "push 1"->"push 10";
    "push 10"->"virtualinvoke <SIRtext: int parmgetint(java.lang.String,int,int,int)>";
    "fieldput <SIRtext: int BORDERCOLOR>"
    "virtualinvoke <SIRtext: int parmgetint(java.lang.String,int,int,int)>"->"fieldput <SIRtext: int BORDERCOLOR>";
    "fieldput <SIRtext: int BORDERCOLOR>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"SCROLLSPEED\""
    "load.r r0"->"push \"SCROLLSPEED\"";
    "push 97"
    "push \"SCROLLSPEED\""->"push 97";
    "push 97"->"push 0";
    "push 100"
    "push 0"->"push 100";
    "push 100"->"virtualinvoke <SIRtext: int parmgetint(java.lang.String,int,int,int)>";
    "fieldput <SIRtext: int SCROLLSPEED>"
    "virtualinvoke <SIRtext: int parmgetint(java.lang.String,int,int,int)>"->"fieldput <SIRtext: int SCROLLSPEED>";
    "fieldput <SIRtext: int SCROLLSPEED>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"DISPLAYTIME\""
    "load.r r0"->"push \"DISPLAYTIME\"";
    "push \"DISPLAYTIME\""->"push 50";
    "push 50"->"push 0";
    "push 1000"
    "push 0"->"push 1000";
    "push 1000"->"virtualinvoke <SIRtext: int parmgetint(java.lang.String,int,int,int)>";
    "fieldput <SIRtext: int DISPLAYTIME>"
    "virtualinvoke <SIRtext: int parmgetint(java.lang.String,int,int,int)>"->"fieldput <SIRtext: int DISPLAYTIME>";
    "fieldput <SIRtext: int DISPLAYTIME>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"MAXLINES\""
    "load.r r0"->"push \"MAXLINES\"";
    "push \"MAXLINES\""->"push 1";
    "push 1"->"push 1";
    "push 10000"
    "push 1"->"push 10000";
    "push 10000"->"virtualinvoke <SIRtext: int parmgetint(java.lang.String,int,int,int)>";
    "fieldput <SIRtext: int MAXLINES>"
    "virtualinvoke <SIRtext: int parmgetint(java.lang.String,int,int,int)>"->"fieldput <SIRtext: int MAXLINES>";
    "fieldput <SIRtext: int MAXLINES>"->"load.r r0";
    "push 105"
    "load.r r0"->"push 105";
    "push 105"->"load.r r0";
    "fieldget <SIRtext: int SCROLLSPEED>"
    "load.r r0"->"fieldget <SIRtext: int SCROLLSPEED>";
    "sub.i"
    "fieldget <SIRtext: int SCROLLSPEED>"->"sub.i";
    "fieldput <SIRtext: int SPEED>"
    "sub.i"->"fieldput <SIRtext: int SPEED>";
    "fieldput <SIRtext: int SPEED>"->"load.r r0";
    "fieldget <SIRtext: int SPEED>"
    "load.r r0"->"fieldget <SIRtext: int SPEED>";
    "push 5"
    "fieldget <SIRtext: int SPEED>"->"push 5";
    "ifcmpge.i load.r r0"
    "push 5"->"ifcmpge.i load.r r0";
    "ifcmpge.i load.r r0"->"load.r r0";
    "load.r r0"->"push 5";
    "push 5"->"fieldput <SIRtext: int SPEED>";
    "fieldput <SIRtext: int SPEED>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <SIRtext: int MAXLINES>"
    "load.r r0"->"fieldget <SIRtext: int MAXLINES>";
    "fieldget <SIRtext: int MAXLINES>"->"newarray";
    "fieldput <SIRtext: int[] TEXTFONT>"
    "newarray"->"fieldput <SIRtext: int[] TEXTFONT>";
    "fieldput <SIRtext: int[] TEXTFONT>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int MAXLINES>";
    "fieldget <SIRtext: int MAXLINES>"->"newarray";
    "fieldput <SIRtext: int[] TEXTCOLOR>"
    "newarray"->"fieldput <SIRtext: int[] TEXTCOLOR>";
    "fieldput <SIRtext: int[] TEXTCOLOR>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int MAXLINES>";
    "fieldget <SIRtext: int MAXLINES>"->"newarray";
    "fieldput <SIRtext: java.lang.String[] TEXTLINES>"
    "newarray"->"fieldput <SIRtext: java.lang.String[] TEXTLINES>";
    "fieldput <SIRtext: java.lang.String[] TEXTLINES>"->"load.r r0";
    "load.r r0"->"push 0";
    "push 0"->"fieldput <SIRtext: int i>";
    "fieldput <SIRtext: int i>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int MAXLINES>";
    "fieldget <SIRtext: int MAXLINES>"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <SIRtext: int FIRSTLINE>"
    "push 0"->"fieldput <SIRtext: int FIRSTLINE>";
    "fieldput <SIRtext: int FIRSTLINE>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <SIRtext: int WIDTH>"
    "load.r r0"->"fieldget <SIRtext: int WIDTH>";
    "push 2"
    "fieldget <SIRtext: int WIDTH>"->"push 2";
    "push 2"->"load.r r0";
    "fieldget <SIRtext: int BORDERWIDTH>"
    "load.r r0"->"fieldget <SIRtext: int BORDERWIDTH>";
    "mul.i"
    "fieldget <SIRtext: int BORDERWIDTH>"->"mul.i";
    "mul.i"->"sub.i";
    "fieldput <SIRtext: int TXTWIDTH>"
    "sub.i"->"fieldput <SIRtext: int TXTWIDTH>";
    "fieldput <SIRtext: int TXTWIDTH>"->"load.r r0";
    "fieldget <SIRtext: java.lang.String TITLE>"
    "load.r r0"->"fieldget <SIRtext: java.lang.String TITLE>";
    "fieldget <SIRtext: java.lang.String TITLE>"->"push \" \"";
    "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"
    "push \" \""->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
    "ifeq load.r r0"
    "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <SIRtext: int HEIGHT>"
    "load.r r0"->"fieldget <SIRtext: int HEIGHT>";
    "fieldget <SIRtext: int HEIGHT>"->"push 2";
    "push 2"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int BORDERWIDTH>";
    "fieldget <SIRtext: int BORDERWIDTH>"->"mul.i";
    "mul.i"->"sub.i";
    "fieldput <SIRtext: int TXTHEIGHT>"
    "sub.i"->"fieldput <SIRtext: int TXTHEIGHT>";
    "goto return"
    "fieldput <SIRtext: int TXTHEIGHT>"->"goto return";
    "return"
    "goto return"->"return";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.awt.Font[] FONTS>";
    "fieldget <SIRtext: java.awt.Font[] FONTS>"->"load.r r0";
    "fieldget <SIRtext: int TITLEFONT>"
    "load.r r0"->"fieldget <SIRtext: int TITLEFONT>";
    "arrayread.r"
    "fieldget <SIRtext: int TITLEFONT>"->"arrayread.r";
    "virtualinvoke <java.awt.Component: java.awt.FontMetrics getFontMetrics(java.awt.Font)>"
    "arrayread.r"->"virtualinvoke <java.awt.Component: java.awt.FontMetrics getFontMetrics(java.awt.Font)>";
    "fieldput <SIRtext: java.awt.FontMetrics fontMetrics>"
    "virtualinvoke <java.awt.Component: java.awt.FontMetrics getFontMetrics(java.awt.Font)>"->"fieldput <SIRtext: java.awt.FontMetrics fontMetrics>";
    "fieldput <SIRtext: java.awt.FontMetrics fontMetrics>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int HEIGHT>";
    "fieldget <SIRtext: int HEIGHT>"->"push 2";
    "push 2"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int BORDERWIDTH>";
    "fieldget <SIRtext: int BORDERWIDTH>"->"mul.i";
    "mul.i"->"sub.i";
    "sub.i"->"load.r r0";
    "fieldget <SIRtext: java.awt.FontMetrics fontMetrics>"
    "load.r r0"->"fieldget <SIRtext: java.awt.FontMetrics fontMetrics>";
    "virtualinvoke <java.awt.FontMetrics: int getHeight()>"
    "fieldget <SIRtext: java.awt.FontMetrics fontMetrics>"->"virtualinvoke <java.awt.FontMetrics: int getHeight()>";
    "virtualinvoke <java.awt.FontMetrics: int getHeight()>"->"sub.i";
    "sub.i"->"push 20";
    "push 20"->"sub.i";
    "sub.i"->"fieldput <SIRtext: int TXTHEIGHT>";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "new java.lang.StringBuffer"
    "load.r r0"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "push \"TEXTLINE\""
    "dup1.r"->"push \"TEXTLINE\"";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"
    "push \"TEXTLINE\""->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"push 1";
    "add.i"
    "push 1"->"add.i";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"
    "add.i"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "push \"1|1| \""
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"push \"1|1| \"";
    "push \"1|1| \""->"virtualinvoke <SIRtext: java.lang.String parmgetstr(java.lang.String,java.lang.String)>";
    "fieldput <SIRtext: java.lang.String SC>"
    "virtualinvoke <SIRtext: java.lang.String parmgetstr(java.lang.String,java.lang.String)>"->"fieldput <SIRtext: java.lang.String SC>";
    "fieldput <SIRtext: java.lang.String SC>"->"load.r r0";
    "fieldget <SIRtext: java.lang.String SC>"
    "load.r r0"->"fieldget <SIRtext: java.lang.String SC>";
    "ifnonnull load.r r0"
    "fieldget <SIRtext: java.lang.String SC>"->"ifnonnull load.r r0";
    "ifnonnull load.r r0"->"load.r r0";
    "load.r r0"->"push \"1|1| \"";
    "push \"1|1| \""->"fieldput <SIRtext: java.lang.String SC>";
    "fieldput <SIRtext: java.lang.String SC>"->"load.r r0";
    "new java.util.StringTokenizer"
    "load.r r0"->"new java.util.StringTokenizer";
    "new java.util.StringTokenizer"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.lang.String SC>";
    "push \"|\""
    "fieldget <SIRtext: java.lang.String SC>"->"push \"|\"";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"
    "push \"|\""->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
    "fieldput <SIRtext: java.util.StringTokenizer st>"
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"fieldput <SIRtext: java.util.StringTokenizer st>";
    "fieldput <SIRtext: java.util.StringTokenizer st>"->"load.r r0";
    "fieldget <SIRtext: int[] TEXTFONT>"
    "load.r r0"->"fieldget <SIRtext: int[] TEXTFONT>";
    "fieldget <SIRtext: int[] TEXTFONT>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"load.r r0";
    "fieldget <SIRtext: java.util.StringTokenizer st>"
    "load.r r0"->"fieldget <SIRtext: java.util.StringTokenizer st>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"
    "fieldget <SIRtext: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Math: int abs(int)>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"staticinvoke <java.lang.Math: int abs(int)>";
    "arraywrite.i"
    "staticinvoke <java.lang.Math: int abs(int)>"->"arraywrite.i";
    "arraywrite.i"->"load.r r0";
    "fieldget <SIRtext: int[] TEXTCOLOR>"
    "load.r r0"->"fieldget <SIRtext: int[] TEXTCOLOR>";
    "fieldget <SIRtext: int[] TEXTCOLOR>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.util.StringTokenizer st>";
    "fieldget <SIRtext: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"staticinvoke <java.lang.Math: int abs(int)>";
    "staticinvoke <java.lang.Math: int abs(int)>"->"arraywrite.i";
    "arraywrite.i"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.util.StringTokenizer st>";
    "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"
    "fieldget <SIRtext: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
    "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "fieldget <SIRtext: java.lang.String[] TEXTLINES>"
    "load.r r0"->"fieldget <SIRtext: java.lang.String[] TEXTLINES>";
    "fieldget <SIRtext: java.lang.String[] TEXTLINES>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.util.StringTokenizer st>";
    "fieldget <SIRtext: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"arraywrite.r";
    "arraywrite.r"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int[] TEXTCOLOR>";
    "fieldget <SIRtext: int[] TEXTCOLOR>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "arrayread.i"
    "fieldget <SIRtext: int i>"->"arrayread.i";
    "arrayread.i"->"push 11";
    "ifcmple.i load.r r0"
    "push 11"->"ifcmple.i load.r r0";
    "ifcmple.i load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int[] TEXTCOLOR>";
    "fieldget <SIRtext: int[] TEXTCOLOR>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"push 12";
    "push 12"->"arraywrite.i";
    "arraywrite.i"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int[] TEXTCOLOR>";
    "fieldget <SIRtext: int[] TEXTCOLOR>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"arrayread.i";
    "arrayread.i"->"push 1";
    "push 1"->"ifcmpge.i load.r r0";
    "ifcmpge.i load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int[] TEXTCOLOR>";
    "fieldget <SIRtext: int[] TEXTCOLOR>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"push 0";
    "push 0"->"arraywrite.i";
    "arraywrite.i"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int[] TEXTFONT>";
    "fieldget <SIRtext: int[] TEXTFONT>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"arrayread.i";
    "arrayread.i"->"push 10";
    "ifcmpgt.i load.r r0"
    "push 10"->"ifcmpgt.i load.r r0";
    "ifcmpgt.i load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int[] TEXTFONT>";
    "fieldget <SIRtext: int[] TEXTFONT>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"arrayread.i";
    "arrayread.i"->"push 1";
    "push 1"->"ifcmpge.i load.r r0";
    "ifcmpge.i load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int[] TEXTFONT>";
    "fieldget <SIRtext: int[] TEXTFONT>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"push 0";
    "push 0"->"arraywrite.i";
    "arraywrite.i"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"push 1";
    "push 1"->"add.i";
    "add.i"->"fieldput <SIRtext: int i>";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.lang.String[] TEXTLINES>";
    "fieldget <SIRtext: java.lang.String[] TEXTLINES>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"push \" \"";
    "push \" \""->"arraywrite.r";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "push \"COLOR\""
    "dup1.r"->"push \"COLOR\"";
    "push \"COLOR\""->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"push 1";
    "push 1"->"add.i";
    "add.i"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <SIRtext: java.lang.String SC>";
    "fieldput <SIRtext: java.lang.String SC>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.lang.String SC>";
    "fieldget <SIRtext: java.lang.String SC>"->"ifnonnull load.r r0";
    "ifnonnull load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "ifne load.r r0"
    "fieldget <SIRtext: int i>"->"ifne load.r r0";
    "ifne load.r r0"->"load.r r0";
    "push \"0|0|0\""
    "load.r r0"->"push \"0|0|0\"";
    "push \"0|0|0\""->"fieldput <SIRtext: java.lang.String SC>";
    "fieldput <SIRtext: java.lang.String SC>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"new java.util.StringTokenizer";
    "new java.util.StringTokenizer"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.lang.String SC>";
    "fieldget <SIRtext: java.lang.String SC>"->"push \"|\"";
    "push \"|\""->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"fieldput <SIRtext: java.util.StringTokenizer st>";
    "fieldput <SIRtext: java.util.StringTokenizer st>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.awt.Color[] COLORS>";
    "fieldget <SIRtext: java.awt.Color[] COLORS>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"push 1";
    "push 1"->"add.i";
    "add.i"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.util.StringTokenizer st>";
    "fieldget <SIRtext: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"staticinvoke <java.lang.Math: int abs(int)>";
    "staticinvoke <java.lang.Math: int abs(int)>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.util.StringTokenizer st>";
    "fieldget <SIRtext: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"staticinvoke <java.lang.Math: int abs(int)>";
    "staticinvoke <java.lang.Math: int abs(int)>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.util.StringTokenizer st>";
    "fieldget <SIRtext: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"staticinvoke <java.lang.Math: int abs(int)>";
    "staticinvoke <java.lang.Math: int abs(int)>"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"push 1";
    "push 1"->"add.i";
    "add.i"->"fieldput <SIRtext: int i>";
    "ifne load.r r0"->"load.r r0";
    "push \"255|255|255\""
    "load.r r0"->"push \"255|255|255\"";
    "push \"255|255|255\""->"fieldput <SIRtext: java.lang.String SC>";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "push \"FONT\""
    "dup1.r"->"push \"FONT\"";
    "push \"FONT\""->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "push \"Courier|N\""
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"push \"Courier|N\"";
    "push \"Courier|N\""->"virtualinvoke <SIRtext: java.lang.String parmgetstr(java.lang.String,java.lang.String)>";
    "fieldput <SIRtext: java.lang.String FT>"
    "virtualinvoke <SIRtext: java.lang.String parmgetstr(java.lang.String,java.lang.String)>"->"fieldput <SIRtext: java.lang.String FT>";
    "fieldput <SIRtext: java.lang.String FT>"->"load.r r0";
    "load.r r0"->"new java.util.StringTokenizer";
    "new java.util.StringTokenizer"->"dup1.r";
    "dup1.r"->"load.r r0";
    "fieldget <SIRtext: java.lang.String FT>"
    "load.r r0"->"fieldget <SIRtext: java.lang.String FT>";
    "fieldget <SIRtext: java.lang.String FT>"->"push \"|\"";
    "push \"|\""->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"fieldput <SIRtext: java.util.StringTokenizer st>";
    "fieldput <SIRtext: java.util.StringTokenizer st>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.util.StringTokenizer st>";
    "fieldget <SIRtext: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
    "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.util.StringTokenizer st>";
    "fieldget <SIRtext: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "fieldput <SIRtext: java.lang.String Fonttype>"
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"fieldput <SIRtext: java.lang.String Fonttype>";
    "fieldput <SIRtext: java.lang.String Fonttype>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.util.StringTokenizer st>";
    "fieldget <SIRtext: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
    "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.util.StringTokenizer st>";
    "fieldget <SIRtext: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "fieldput <SIRtext: java.lang.String Fontstyle>"
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"fieldput <SIRtext: java.lang.String Fontstyle>";
    "fieldput <SIRtext: java.lang.String Fontstyle>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.util.StringTokenizer st>";
    "fieldget <SIRtext: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
    "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.util.StringTokenizer st>";
    "fieldget <SIRtext: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <SIRtext: int Fontsize>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <SIRtext: int Fontsize>";
    "fieldput <SIRtext: int Fontsize>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "fieldget <SIRtext: java.lang.String Fontstyle>"
    "load.r r0"->"fieldget <SIRtext: java.lang.String Fontstyle>";
    "push \"B\""
    "fieldget <SIRtext: java.lang.String Fontstyle>"->"push \"B\"";
    "push \"B\""->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
    "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.awt.Font[] FONTS>";
    "fieldget <SIRtext: java.awt.Font[] FONTS>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"new java.awt.Font";
    "new java.awt.Font"->"dup1.r";
    "dup1.r"->"load.r r0";
    "fieldget <SIRtext: java.lang.String Fonttype>"
    "load.r r0"->"fieldget <SIRtext: java.lang.String Fonttype>";
    "fieldget <SIRtext: java.lang.String Fonttype>"->"push 1";
    "push 1"->"load.r r0";
    "fieldget <SIRtext: int Fontsize>"
    "load.r r0"->"fieldget <SIRtext: int Fontsize>";
    "fieldget <SIRtext: int Fontsize>"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"push 1";
    "push 1"->"add.i";
    "add.i"->"fieldput <SIRtext: int i>";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.lang.String Fontstyle>";
    "push \"I\""
    "fieldget <SIRtext: java.lang.String Fontstyle>"->"push \"I\"";
    "push \"I\""->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
    "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.awt.Font[] FONTS>";
    "fieldget <SIRtext: java.awt.Font[] FONTS>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"new java.awt.Font";
    "new java.awt.Font"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.lang.String Fonttype>";
    "fieldget <SIRtext: java.lang.String Fonttype>"->"push 2";
    "push 2"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int Fontsize>";
    "fieldget <SIRtext: int Fontsize>"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"goto load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.lang.String Fontstyle>";
    "push \"BI\""
    "fieldget <SIRtext: java.lang.String Fontstyle>"->"push \"BI\"";
    "push \"BI\""->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
    "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"ifne load.r r0";
    "ifne load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.lang.String Fontstyle>";
    "push \"IB\""
    "fieldget <SIRtext: java.lang.String Fontstyle>"->"push \"IB\"";
    "push \"IB\""->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
    "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.awt.Font[] FONTS>";
    "fieldget <SIRtext: java.awt.Font[] FONTS>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"new java.awt.Font";
    "new java.awt.Font"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.lang.String Fonttype>";
    "push 3"
    "fieldget <SIRtext: java.lang.String Fonttype>"->"push 3";
    "push 3"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int Fontsize>";
    "fieldget <SIRtext: int Fontsize>"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"goto load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.awt.Font[] FONTS>";
    "fieldget <SIRtext: java.awt.Font[] FONTS>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int i>";
    "fieldget <SIRtext: int i>"->"new java.awt.Font";
    "new java.awt.Font"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: java.lang.String Fonttype>";
    "fieldget <SIRtext: java.lang.String Fonttype>"->"push 0";
    "push 0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtext: int Fontsize>";
    "fieldget <SIRtext: int Fontsize>"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"arraywrite.r";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"push 10";
    "push 10"->"fieldput <SIRtext: int Fontsize>";
    "ifeq load.r r0"->"load.r r0";
    "push \"N\""
    "load.r r0"->"push \"N\"";
    "push \"N\""->"fieldput <SIRtext: java.lang.String Fontstyle>";
    "ifeq load.r r0"->"load.r r0";
    "push \"Courier\""
    "load.r r0"->"push \"Courier\"";
    "push \"Courier\""->"fieldput <SIRtext: java.lang.String Fonttype>";
}
