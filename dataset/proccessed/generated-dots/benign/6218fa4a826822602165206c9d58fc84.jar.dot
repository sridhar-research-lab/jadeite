digraph "" {
    "r0 := @this: com.mindprod.encodings.Encodings"
    "push 1"
    "r0 := @this: com.mindprod.encodings.Encodings"->"push 1";
    "push 5"
    "push 1"->"push 5";
    "push 0"
    "push 5"->"push 0";
    "load.r r0"
    "push 0"->"load.r r0";
    "staticinvoke <com.mindprod.common11.VersionCheck: boolean isJavaVersionOK(int,int,int,java.awt.Container)>"
    "load.r r0"->"staticinvoke <com.mindprod.common11.VersionCheck: boolean isJavaVersionOK(int,int,int,java.awt.Container)>";
    "ifne staticinvoke <com.mindprod.common13.Common13: void setLaf()>"
    "staticinvoke <com.mindprod.common11.VersionCheck: boolean isJavaVersionOK(int,int,int,java.awt.Container)>"->"ifne staticinvoke <com.mindprod.common13.Common13: void setLaf()>";
    "return"
    "ifne staticinvoke <com.mindprod.common13.Common13: void setLaf()>"->"return";
    "staticinvoke <com.mindprod.common13.Common13: void setLaf()>"
    "ifne staticinvoke <com.mindprod.common13.Common13: void setLaf()>"->"staticinvoke <com.mindprod.common13.Common13: void setLaf()>";
    "staticinvoke <java.nio.charset.Charset: java.util.SortedMap availableCharsets()>"
    "staticinvoke <com.mindprod.common13.Common13: void setLaf()>"->"staticinvoke <java.nio.charset.Charset: java.util.SortedMap availableCharsets()>";
    "store.r r1"
    "staticinvoke <java.nio.charset.Charset: java.util.SortedMap availableCharsets()>"->"store.r r1";
    "load.r r1"
    "store.r r1"->"load.r r1";
    "interfaceinvoke <java.util.SortedMap: int size()> 0"
    "load.r r1"->"interfaceinvoke <java.util.SortedMap: int size()> 0";
    "store.i i0"
    "interfaceinvoke <java.util.SortedMap: int size()> 0"->"store.i i0";
    "new com.mindprod.fastcat.FastCat"
    "store.i i0"->"new com.mindprod.fastcat.FastCat";
    "store.r $r3"
    "new com.mindprod.fastcat.FastCat"->"store.r $r3";
    "load.r $r3"
    "store.r $r3"->"load.r $r3";
    "load.i i0"
    "load.r $r3"->"load.i i0";
    "push 2"
    "load.i i0"->"push 2";
    "mul.i"
    "push 2"->"mul.i";
    "push 8"
    "mul.i"->"push 8";
    "add.i"
    "push 8"->"add.i";
    "specialinvoke <com.mindprod.fastcat.FastCat: void <init>(int)>"
    "add.i"->"specialinvoke <com.mindprod.fastcat.FastCat: void <init>(int)>";
    "specialinvoke <com.mindprod.fastcat.FastCat: void <init>(int)>"->"load.r $r3";
    "push \"Encodings 1.6\nSUPPORTED\nENCODINGS\""
    "load.r $r3"->"push \"Encodings 1.6\nSUPPORTED\nENCODINGS\"";
    "virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(java.lang.String)>"
    "push \"Encodings 1.6\nSUPPORTED\nENCODINGS\""->"virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(java.lang.String)>";
    "pop"
    "virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(java.lang.String)>"->"pop";
    "pop"->"load.r $r3";
    "push \"\n------\n\""
    "load.r $r3"->"push \"\n------\n\"";
    "push \"\n------\n\""->"virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(java.lang.String)>";
    "virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(java.lang.String)>"->"pop";
    "pop"->"load.r $r3";
    "push \"file.encoding\""
    "load.r $r3"->"push \"file.encoding\"";
    "staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>"
    "push \"file.encoding\""->"staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>";
    "dup1.r"
    "staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>"->"dup1.r";
    "staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>"
    "dup1.r"->"staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>";
    "virtualinvoke <java.nio.charset.Charset: java.lang.String name()>"
    "staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>"->"virtualinvoke <java.nio.charset.Charset: java.lang.String name()>";
    "store.r $r21"
    "virtualinvoke <java.nio.charset.Charset: java.lang.String name()>"->"store.r $r21";
    "store.r $r21"->"load.r $r3";
    "push \"default:\n\""
    "load.r $r3"->"push \"default:\n\"";
    "push \"default:\n\""->"virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(java.lang.String)>";
    "virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(java.lang.String)>"->"pop";
    "pop"->"virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(java.lang.String)>";
    "virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(java.lang.String)>"->"pop";
    "pop"->"load.r $r3";
    "push \"\nofficially:\n\""
    "load.r $r3"->"push \"\nofficially:\n\"";
    "push \"\nofficially:\n\""->"virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(java.lang.String)>";
    "virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(java.lang.String)>"->"pop";
    "pop"->"load.r $r3";
    "load.r $r21"
    "load.r $r3"->"load.r $r21";
    "load.r $r21"->"virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(java.lang.String)>";
    "virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(java.lang.String)>"->"pop";
    "goto load.r $r3"
    "pop"->"goto load.r $r3";
    "goto load.r $r3"->"load.r $r3";
    "load.r $r3"->"push \"\n------\n\"";
    "push \"\n------\n\""->"virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(java.lang.String)>";
    "virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(java.lang.String)>"->"pop";
    "pop"->"load.r r1";
    "interfaceinvoke <java.util.SortedMap: java.util.Set keySet()> 0"
    "load.r r1"->"interfaceinvoke <java.util.SortedMap: java.util.Set keySet()> 0";
    "interfaceinvoke <java.util.Set: java.util.Iterator iterator()> 0"
    "interfaceinvoke <java.util.SortedMap: java.util.Set keySet()> 0"->"interfaceinvoke <java.util.Set: java.util.Iterator iterator()> 0";
    "interfaceinvoke <java.util.Set: java.util.Iterator iterator()> 0"->"store.r r1";
    "store.r r1"->"load.r r1";
    "interfaceinvoke <java.util.Iterator: boolean hasNext()> 0"
    "load.r r1"->"interfaceinvoke <java.util.Iterator: boolean hasNext()> 0";
    "ifeq new javax.swing.JTextArea"
    "interfaceinvoke <java.util.Iterator: boolean hasNext()> 0"->"ifeq new javax.swing.JTextArea";
    "ifeq new javax.swing.JTextArea"->"load.r $r3";
    "load.r $r3"->"load.r r1";
    "interfaceinvoke <java.util.Iterator: java.lang.Object next()> 0"
    "load.r r1"->"interfaceinvoke <java.util.Iterator: java.lang.Object next()> 0";
    "checkcast"
    "interfaceinvoke <java.util.Iterator: java.lang.Object next()> 0"->"checkcast";
    "checkcast"->"virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(java.lang.String)>";
    "virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(java.lang.String)>"->"pop";
    "pop"->"load.r $r3";
    "push 10"
    "load.r $r3"->"push 10";
    "virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(char)>"
    "push 10"->"virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(char)>";
    "virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(char)>"->"pop";
    "goto load.r r1"
    "pop"->"goto load.r r1";
    "new javax.swing.JTextArea"
    "ifeq new javax.swing.JTextArea"->"new javax.swing.JTextArea";
    "new javax.swing.JTextArea"->"store.r r1";
    "store.r r1"->"load.r r1";
    "load.r r1"->"load.r $r3";
    "virtualinvoke <com.mindprod.fastcat.FastCat: java.lang.String toString()>"
    "load.r $r3"->"virtualinvoke <com.mindprod.fastcat.FastCat: java.lang.String toString()>";
    "virtualinvoke <com.mindprod.fastcat.FastCat: java.lang.String toString()>"->"load.i i0";
    "staticget <com.mindprod.encodings.Encodings: int MAX_LINE_LENGTH>"
    "load.i i0"->"staticget <com.mindprod.encodings.Encodings: int MAX_LINE_LENGTH>";
    "specialinvoke <javax.swing.JTextArea: void <init>(java.lang.String,int,int)>"
    "staticget <com.mindprod.encodings.Encodings: int MAX_LINE_LENGTH>"->"specialinvoke <javax.swing.JTextArea: void <init>(java.lang.String,int,int)>";
    "specialinvoke <javax.swing.JTextArea: void <init>(java.lang.String,int,int)>"->"load.r r1";
    "new java.awt.Insets"
    "load.r r1"->"new java.awt.Insets";
    "new java.awt.Insets"->"dup1.r";
    "dup1.r"->"push 2";
    "push 2"->"push 2";
    "push 2"->"push 2";
    "push 2"->"push 0";
    "specialinvoke <java.awt.Insets: void <init>(int,int,int,int)>"
    "push 0"->"specialinvoke <java.awt.Insets: void <init>(int,int,int,int)>";
    "virtualinvoke <javax.swing.JTextArea: void setMargin(java.awt.Insets)>"
    "specialinvoke <java.awt.Insets: void <init>(int,int,int,int)>"->"virtualinvoke <javax.swing.JTextArea: void setMargin(java.awt.Insets)>";
    "virtualinvoke <javax.swing.JTextArea: void setMargin(java.awt.Insets)>"->"load.r r0";
    "new javax.swing.JScrollPane"
    "load.r r0"->"new javax.swing.JScrollPane";
    "new javax.swing.JScrollPane"->"dup1.r";
    "dup1.r"->"load.r r1";
    "push 20"
    "load.r r1"->"push 20";
    "push 31"
    "push 20"->"push 31";
    "specialinvoke <javax.swing.JScrollPane: void <init>(java.awt.Component,int,int)>"
    "push 31"->"specialinvoke <javax.swing.JScrollPane: void <init>(java.awt.Component,int,int)>";
    "virtualinvoke <com.mindprod.encodings.Encodings: java.awt.Component add(java.awt.Component)>"
    "specialinvoke <javax.swing.JScrollPane: void <init>(java.awt.Component,int,int)>"->"virtualinvoke <com.mindprod.encodings.Encodings: java.awt.Component add(java.awt.Component)>";
    "virtualinvoke <com.mindprod.encodings.Encodings: java.awt.Component add(java.awt.Component)>"->"pop";
    "pop"->"load.r r0";
    "virtualinvoke <com.mindprod.encodings.Encodings: void validate()>"
    "load.r r0"->"virtualinvoke <com.mindprod.encodings.Encodings: void validate()>";
    "virtualinvoke <com.mindprod.encodings.Encodings: void validate()>"->"load.r r0";
    "load.r r0"->"push 1";
    "virtualinvoke <com.mindprod.encodings.Encodings: void setVisible(boolean)>"
    "push 1"->"virtualinvoke <com.mindprod.encodings.Encodings: void setVisible(boolean)>";
    "virtualinvoke <com.mindprod.encodings.Encodings: void setVisible(boolean)>"->"return";
    "virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(java.lang.String)>"->"store.r $r21";
    "store.r $r21"->"load.r $r3";
    "push \"No permission\ngranted\nto view\nthe default\nencoding\""
    "load.r $r3"->"push \"No permission\ngranted\nto view\nthe default\nencoding\"";
    "push \"No permission\ngranted\nto view\nthe default\nencoding\""->"virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(java.lang.String)>";
    "virtualinvoke <com.mindprod.fastcat.FastCat: com.mindprod.fastcat.FastCat append(java.lang.String)>"->"pop";
}
