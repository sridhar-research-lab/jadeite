digraph "" {
    "r0 := @this: com.mindprod.fileio.FileIO"
    "push 1"
    "r0 := @this: com.mindprod.fileio.FileIO"->"push 1";
    "push 5"
    "push 1"->"push 5";
    "push 0"
    "push 5"->"push 0";
    "load.r r0"
    "push 0"->"load.r r0";
    "staticinvoke <com.mindprod.common11.VersionCheck: boolean isJavaVersionOK(int,int,int,java.awt.Container)>"
    "load.r r0"->"staticinvoke <com.mindprod.common11.VersionCheck: boolean isJavaVersionOK(int,int,int,java.awt.Container)>";
    "ifne staticinvoke <com.mindprod.common13.Common13: void setLaf()>"
    "staticinvoke <com.mindprod.common11.VersionCheck: boolean isJavaVersionOK(int,int,int,java.awt.Container)>"->"ifne staticinvoke <com.mindprod.common13.Common13: void setLaf()>";
    "return"
    "ifne staticinvoke <com.mindprod.common13.Common13: void setLaf()>"->"return";
    "staticinvoke <com.mindprod.common13.Common13: void setLaf()>"
    "ifne staticinvoke <com.mindprod.common13.Common13: void setLaf()>"->"staticinvoke <com.mindprod.common13.Common13: void setLaf()>";
    "staticinvoke <com.mindprod.common13.Common13: void setLaf()>"->"load.r r0";
    "virtualinvoke <com.mindprod.fileio.FileIO: java.awt.Container getContentPane()>"
    "load.r r0"->"virtualinvoke <com.mindprod.fileio.FileIO: java.awt.Container getContentPane()>";
    "store.r r1"
    "virtualinvoke <com.mindprod.fileio.FileIO: java.awt.Container getContentPane()>"->"store.r r1";
    "load.r r1"
    "store.r r1"->"load.r r1";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Color BACKGROUND_FOR_APPLET>"
    "load.r r1"->"staticget <com.mindprod.fileio.FileIO: java.awt.Color BACKGROUND_FOR_APPLET>";
    "virtualinvoke <java.awt.Container: void setBackground(java.awt.Color)>"
    "staticget <com.mindprod.fileio.FileIO: java.awt.Color BACKGROUND_FOR_APPLET>"->"virtualinvoke <java.awt.Container: void setBackground(java.awt.Color)>";
    "virtualinvoke <java.awt.Container: void setBackground(java.awt.Color)>"->"load.r r1";
    "new java.awt.GridBagLayout"
    "load.r r1"->"new java.awt.GridBagLayout";
    "dup1.r"
    "new java.awt.GridBagLayout"->"dup1.r";
    "specialinvoke <java.awt.GridBagLayout: void <init>()>"
    "dup1.r"->"specialinvoke <java.awt.GridBagLayout: void <init>()>";
    "virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>"
    "specialinvoke <java.awt.GridBagLayout: void <init>()>"->"virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>";
    "virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>"->"load.r r0";
    "new com.mindprod.common13.JEButton"
    "load.r r0"->"new com.mindprod.common13.JEButton";
    "new com.mindprod.common13.JEButton"->"dup1.r";
    "push \"About\""
    "dup1.r"->"push \"About\"";
    "specialinvoke <com.mindprod.common13.JEButton: void <init>(java.lang.String)>"
    "push \"About\""->"specialinvoke <com.mindprod.common13.JEButton: void <init>(java.lang.String)>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JButton about>"
    "specialinvoke <com.mindprod.common13.JEButton: void <init>(java.lang.String)>"->"fieldput <com.mindprod.fileio.FileIO: javax.swing.JButton about>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JButton about>"->"load.r r0";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JButton about>"
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JButton about>";
    "push \"About File I/O Amanuensis 6.0\""
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JButton about>"->"push \"About File I/O Amanuensis 6.0\"";
    "virtualinvoke <javax.swing.JButton: void setToolTipText(java.lang.String)>"
    "push \"About File I/O Amanuensis 6.0\""->"virtualinvoke <javax.swing.JButton: void setToolTipText(java.lang.String)>";
    "virtualinvoke <javax.swing.JButton: void setToolTipText(java.lang.String)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JButton about>";
    "new com.mindprod.fileio.FileIO$1"
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JButton about>"->"new com.mindprod.fileio.FileIO$1";
    "new com.mindprod.fileio.FileIO$1"->"dup1.r";
    "dup1.r"->"load.r r0";
    "specialinvoke <com.mindprod.fileio.FileIO$1: void <init>(com.mindprod.fileio.FileIO)>"
    "load.r r0"->"specialinvoke <com.mindprod.fileio.FileIO$1: void <init>(com.mindprod.fileio.FileIO)>";
    "virtualinvoke <javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>"
    "specialinvoke <com.mindprod.fileio.FileIO$1: void <init>(com.mindprod.fileio.FileIO)>"->"virtualinvoke <javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>";
    "virtualinvoke <javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>"->"load.r r0";
    "new javax.swing.JLabel"
    "load.r r0"->"new javax.swing.JLabel";
    "new javax.swing.JLabel"->"dup1.r";
    "push \"File I/O Amanuensis 6.0\""
    "dup1.r"->"push \"File I/O Amanuensis 6.0\"";
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>"
    "push \"File I/O Amanuensis 6.0\""->"specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JLabel title>"
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>"->"fieldput <com.mindprod.fileio.FileIO: javax.swing.JLabel title>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JLabel title>"->"load.r r0";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel title>"
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel title>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Font FONT_FOR_TITLE>"
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel title>"->"staticget <com.mindprod.fileio.FileIO: java.awt.Font FONT_FOR_TITLE>";
    "virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>"
    "staticget <com.mindprod.fileio.FileIO: java.awt.Font FONT_FOR_TITLE>"->"virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>";
    "virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel title>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_TITLE>"
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel title>"->"staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_TITLE>";
    "virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>"
    "staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_TITLE>"->"virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"new javax.swing.JLabel";
    "new javax.swing.JLabel"->"dup1.r";
    "push \"released:2010-12-06 build:9410\""
    "dup1.r"->"push \"released:2010-12-06 build:9410\"";
    "push \"released:2010-12-06 build:9410\""->"specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JLabel title2>"
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>"->"fieldput <com.mindprod.fileio.FileIO: javax.swing.JLabel title2>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JLabel title2>"->"load.r r0";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel title2>"
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel title2>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Font FONT_FOR_TITLE2>"
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel title2>"->"staticget <com.mindprod.fileio.FileIO: java.awt.Font FONT_FOR_TITLE2>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Font FONT_FOR_TITLE2>"->"virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>";
    "virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel title2>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel title2>"->"staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_TITLE>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_TITLE>"->"virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"new javax.swing.JLabel";
    "new javax.swing.JLabel"->"dup1.r";
    "push \"Source\""
    "dup1.r"->"push \"Source\"";
    "push \"Source\""->"specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JLabel fileSourceTargetLabel>"
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>"->"fieldput <com.mindprod.fileio.FileIO: javax.swing.JLabel fileSourceTargetLabel>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JLabel fileSourceTargetLabel>"->"load.r r0";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel fileSourceTargetLabel>"
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel fileSourceTargetLabel>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Font FONT_FOR_LABEL>"
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel fileSourceTargetLabel>"->"staticget <com.mindprod.fileio.FileIO: java.awt.Font FONT_FOR_LABEL>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Font FONT_FOR_LABEL>"->"virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>";
    "virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel fileSourceTargetLabel>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_LABEL>"
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel fileSourceTargetLabel>"->"staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_LABEL>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_LABEL>"->"virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>"->"load.r r0";
    "new javax.swing.JComboBox"
    "load.r r0"->"new javax.swing.JComboBox";
    "new javax.swing.JComboBox"->"dup1.r";
    "staticinvoke <com.mindprod.fileio.FileType: com.mindprod.fileio.FileType[] values()>"
    "dup1.r"->"staticinvoke <com.mindprod.fileio.FileType: com.mindprod.fileio.FileType[] values()>";
    "specialinvoke <javax.swing.JComboBox: void <init>(java.lang.Object[])>"
    "staticinvoke <com.mindprod.fileio.FileType: com.mindprod.fileio.FileType[] values()>"->"specialinvoke <javax.swing.JComboBox: void <init>(java.lang.Object[])>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JComboBox sourceTarget>"
    "specialinvoke <javax.swing.JComboBox: void <init>(java.lang.Object[])>"->"fieldput <com.mindprod.fileio.FileIO: javax.swing.JComboBox sourceTarget>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JComboBox sourceTarget>"->"load.r r0";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JComboBox sourceTarget>"
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JComboBox sourceTarget>";
    "staticget <com.mindprod.fileio.FileType: com.mindprod.fileio.FileType SEQUENTIAL>"
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JComboBox sourceTarget>"->"staticget <com.mindprod.fileio.FileType: com.mindprod.fileio.FileType SEQUENTIAL>";
    "virtualinvoke <javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>"
    "staticget <com.mindprod.fileio.FileType: com.mindprod.fileio.FileType SEQUENTIAL>"->"virtualinvoke <javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>";
    "virtualinvoke <javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>"->"load.r r0";
    "load.r r0"->"new javax.swing.JLabel";
    "new javax.swing.JLabel"->"dup1.r";
    "push \"Data Format\""
    "dup1.r"->"push \"Data Format\"";
    "push 2"
    "push \"Data Format\""->"push 2";
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String,int)>"
    "push 2"->"specialinvoke <javax.swing.JLabel: void <init>(java.lang.String,int)>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JLabel dataLabel>"
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String,int)>"->"fieldput <com.mindprod.fileio.FileIO: javax.swing.JLabel dataLabel>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JLabel dataLabel>"->"load.r r0";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel dataLabel>"
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel dataLabel>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel dataLabel>"->"staticget <com.mindprod.fileio.FileIO: java.awt.Font FONT_FOR_LABEL>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Font FONT_FOR_LABEL>"->"virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>";
    "virtualinvoke <javax.swing.JLabel: void setFont(java.awt.Font)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel dataLabel>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel dataLabel>"->"staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_LABEL>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_LABEL>"->"virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"new javax.swing.JComboBox";
    "new javax.swing.JComboBox"->"dup1.r";
    "staticinvoke <com.mindprod.fileio.DataType: com.mindprod.fileio.DataType[] values()>"
    "dup1.r"->"staticinvoke <com.mindprod.fileio.DataType: com.mindprod.fileio.DataType[] values()>";
    "staticinvoke <com.mindprod.fileio.DataType: com.mindprod.fileio.DataType[] values()>"->"specialinvoke <javax.swing.JComboBox: void <init>(java.lang.Object[])>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JComboBox data>"
    "specialinvoke <javax.swing.JComboBox: void <init>(java.lang.Object[])>"->"fieldput <com.mindprod.fileio.FileIO: javax.swing.JComboBox data>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JComboBox data>"->"load.r r0";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JComboBox data>"
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JComboBox data>";
    "staticget <com.mindprod.fileio.DataType: com.mindprod.fileio.DataType BIGEND>"
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JComboBox data>"->"staticget <com.mindprod.fileio.DataType: com.mindprod.fileio.DataType BIGEND>";
    "staticget <com.mindprod.fileio.DataType: com.mindprod.fileio.DataType BIGEND>"->"virtualinvoke <javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>";
    "virtualinvoke <javax.swing.JComboBox: void setSelectedItem(java.lang.Object)>"->"load.r r0";
    "new javax.swing.JCheckBox"
    "load.r r0"->"new javax.swing.JCheckBox";
    "new javax.swing.JCheckBox"->"dup1.r";
    "push \"read\""
    "dup1.r"->"push \"read\"";
    "push \"read\""->"push 1";
    "specialinvoke <javax.swing.JCheckBox: void <init>(java.lang.String,boolean)>"
    "push 1"->"specialinvoke <javax.swing.JCheckBox: void <init>(java.lang.String,boolean)>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JCheckBox readButton>"
    "specialinvoke <javax.swing.JCheckBox: void <init>(java.lang.String,boolean)>"->"fieldput <com.mindprod.fileio.FileIO: javax.swing.JCheckBox readButton>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JCheckBox readButton>"->"load.r r0";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox readButton>"
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox readButton>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox readButton>"->"staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_LABEL>";
    "virtualinvoke <javax.swing.JCheckBox: void setForeground(java.awt.Color)>"
    "staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_LABEL>"->"virtualinvoke <javax.swing.JCheckBox: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JCheckBox: void setForeground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox readButton>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox readButton>"->"staticget <com.mindprod.fileio.FileIO: java.awt.Color BACKGROUND_FOR_APPLET>";
    "virtualinvoke <javax.swing.JCheckBox: void setBackground(java.awt.Color)>"
    "staticget <com.mindprod.fileio.FileIO: java.awt.Color BACKGROUND_FOR_APPLET>"->"virtualinvoke <javax.swing.JCheckBox: void setBackground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JCheckBox: void setBackground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"new javax.swing.JCheckBox";
    "new javax.swing.JCheckBox"->"dup1.r";
    "push \"write\""
    "dup1.r"->"push \"write\"";
    "push \"write\""->"push 0";
    "push 0"->"specialinvoke <javax.swing.JCheckBox: void <init>(java.lang.String,boolean)>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JCheckBox writeButton>"
    "specialinvoke <javax.swing.JCheckBox: void <init>(java.lang.String,boolean)>"->"fieldput <com.mindprod.fileio.FileIO: javax.swing.JCheckBox writeButton>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JCheckBox writeButton>"->"load.r r0";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox writeButton>"
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox writeButton>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox writeButton>"->"staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_LABEL>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_LABEL>"->"virtualinvoke <javax.swing.JCheckBox: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JCheckBox: void setForeground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox writeButton>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox writeButton>"->"staticget <com.mindprod.fileio.FileIO: java.awt.Color BACKGROUND_FOR_APPLET>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Color BACKGROUND_FOR_APPLET>"->"virtualinvoke <javax.swing.JCheckBox: void setBackground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JCheckBox: void setBackground(java.awt.Color)>"->"load.r r0";
    "new javax.swing.ButtonGroup"
    "load.r r0"->"new javax.swing.ButtonGroup";
    "new javax.swing.ButtonGroup"->"dup1.r";
    "specialinvoke <javax.swing.ButtonGroup: void <init>()>"
    "dup1.r"->"specialinvoke <javax.swing.ButtonGroup: void <init>()>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.ButtonGroup readWriteCheckBoxes>"
    "specialinvoke <javax.swing.ButtonGroup: void <init>()>"->"fieldput <com.mindprod.fileio.FileIO: javax.swing.ButtonGroup readWriteCheckBoxes>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.ButtonGroup readWriteCheckBoxes>"->"load.r r0";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.ButtonGroup readWriteCheckBoxes>"
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.ButtonGroup readWriteCheckBoxes>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.ButtonGroup readWriteCheckBoxes>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox readButton>";
    "virtualinvoke <javax.swing.ButtonGroup: void add(javax.swing.AbstractButton)>"
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox readButton>"->"virtualinvoke <javax.swing.ButtonGroup: void add(javax.swing.AbstractButton)>";
    "virtualinvoke <javax.swing.ButtonGroup: void add(javax.swing.AbstractButton)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.ButtonGroup readWriteCheckBoxes>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.ButtonGroup readWriteCheckBoxes>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox writeButton>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox writeButton>"->"virtualinvoke <javax.swing.ButtonGroup: void add(javax.swing.AbstractButton)>";
    "virtualinvoke <javax.swing.ButtonGroup: void add(javax.swing.AbstractButton)>"->"load.r r0";
    "load.r r0"->"new javax.swing.JCheckBox";
    "new javax.swing.JCheckBox"->"dup1.r";
    "push \"unbuffered\""
    "dup1.r"->"push \"unbuffered\"";
    "push \"unbuffered\""->"push 1";
    "push 1"->"specialinvoke <javax.swing.JCheckBox: void <init>(java.lang.String,boolean)>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JCheckBox unbufferedButton>"
    "specialinvoke <javax.swing.JCheckBox: void <init>(java.lang.String,boolean)>"->"fieldput <com.mindprod.fileio.FileIO: javax.swing.JCheckBox unbufferedButton>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JCheckBox unbufferedButton>"->"load.r r0";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox unbufferedButton>"
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox unbufferedButton>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox unbufferedButton>"->"staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_LABEL>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_LABEL>"->"virtualinvoke <javax.swing.JCheckBox: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JCheckBox: void setForeground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox unbufferedButton>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox unbufferedButton>"->"staticget <com.mindprod.fileio.FileIO: java.awt.Color BACKGROUND_FOR_APPLET>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Color BACKGROUND_FOR_APPLET>"->"virtualinvoke <javax.swing.JCheckBox: void setBackground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JCheckBox: void setBackground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"new javax.swing.JCheckBox";
    "new javax.swing.JCheckBox"->"dup1.r";
    "push \"buffered\""
    "dup1.r"->"push \"buffered\"";
    "push \"buffered\""->"push 0";
    "push 0"->"specialinvoke <javax.swing.JCheckBox: void <init>(java.lang.String,boolean)>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JCheckBox bufferedButton>"
    "specialinvoke <javax.swing.JCheckBox: void <init>(java.lang.String,boolean)>"->"fieldput <com.mindprod.fileio.FileIO: javax.swing.JCheckBox bufferedButton>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JCheckBox bufferedButton>"->"load.r r0";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox bufferedButton>"
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox bufferedButton>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox bufferedButton>"->"staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_LABEL>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_LABEL>"->"virtualinvoke <javax.swing.JCheckBox: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JCheckBox: void setForeground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox bufferedButton>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox bufferedButton>"->"staticget <com.mindprod.fileio.FileIO: java.awt.Color BACKGROUND_FOR_APPLET>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Color BACKGROUND_FOR_APPLET>"->"virtualinvoke <javax.swing.JCheckBox: void setBackground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JCheckBox: void setBackground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"new javax.swing.JCheckBox";
    "new javax.swing.JCheckBox"->"dup1.r";
    "push \"compressed\""
    "dup1.r"->"push \"compressed\"";
    "push \"compressed\""->"push 0";
    "push 0"->"specialinvoke <javax.swing.JCheckBox: void <init>(java.lang.String,boolean)>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JCheckBox compressedButton>"
    "specialinvoke <javax.swing.JCheckBox: void <init>(java.lang.String,boolean)>"->"fieldput <com.mindprod.fileio.FileIO: javax.swing.JCheckBox compressedButton>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JCheckBox compressedButton>"->"load.r r0";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox compressedButton>"
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox compressedButton>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox compressedButton>"->"staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_LABEL>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_LABEL>"->"virtualinvoke <javax.swing.JCheckBox: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JCheckBox: void setForeground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox compressedButton>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox compressedButton>"->"staticget <com.mindprod.fileio.FileIO: java.awt.Color BACKGROUND_FOR_APPLET>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Color BACKGROUND_FOR_APPLET>"->"virtualinvoke <javax.swing.JCheckBox: void setBackground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JCheckBox: void setBackground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"new javax.swing.ButtonGroup";
    "new javax.swing.ButtonGroup"->"dup1.r";
    "dup1.r"->"specialinvoke <javax.swing.ButtonGroup: void <init>()>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.ButtonGroup bufferCheckBoxes>"
    "specialinvoke <javax.swing.ButtonGroup: void <init>()>"->"fieldput <com.mindprod.fileio.FileIO: javax.swing.ButtonGroup bufferCheckBoxes>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.ButtonGroup bufferCheckBoxes>"->"load.r r0";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.ButtonGroup bufferCheckBoxes>"
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.ButtonGroup bufferCheckBoxes>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.ButtonGroup bufferCheckBoxes>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox unbufferedButton>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox unbufferedButton>"->"virtualinvoke <javax.swing.ButtonGroup: void add(javax.swing.AbstractButton)>";
    "virtualinvoke <javax.swing.ButtonGroup: void add(javax.swing.AbstractButton)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.ButtonGroup bufferCheckBoxes>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.ButtonGroup bufferCheckBoxes>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox bufferedButton>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox bufferedButton>"->"virtualinvoke <javax.swing.ButtonGroup: void add(javax.swing.AbstractButton)>";
    "virtualinvoke <javax.swing.ButtonGroup: void add(javax.swing.AbstractButton)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.ButtonGroup bufferCheckBoxes>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.ButtonGroup bufferCheckBoxes>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox compressedButton>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JCheckBox compressedButton>"->"virtualinvoke <javax.swing.ButtonGroup: void add(javax.swing.AbstractButton)>";
    "virtualinvoke <javax.swing.ButtonGroup: void add(javax.swing.AbstractButton)>"->"load.r r0";
    "new javax.swing.JTextArea"
    "load.r r0"->"new javax.swing.JTextArea";
    "new javax.swing.JTextArea"->"dup1.r";
    "dup1.r"->"staticget <com.mindprod.fileio.FileType: com.mindprod.fileio.FileType SEQUENTIAL>";
    "staticget <com.mindprod.fileio.FileType: com.mindprod.fileio.FileType SEQUENTIAL>"->"staticget <com.mindprod.fileio.DataType: com.mindprod.fileio.DataType BIGEND>";
    "staticget <com.mindprod.fileio.DataType: com.mindprod.fileio.DataType BIGEND>"->"push 1";
    "push 1"->"push 0";
    "push 0"->"push 0";
    "staticinvoke <com.mindprod.fileio.How: java.lang.String how(com.mindprod.fileio.FileType,com.mindprod.fileio.DataType,boolean,boolean,boolean)>"
    "push 0"->"staticinvoke <com.mindprod.fileio.How: java.lang.String how(com.mindprod.fileio.FileType,com.mindprod.fileio.DataType,boolean,boolean,boolean)>";
    "push 40"
    "staticinvoke <com.mindprod.fileio.How: java.lang.String how(com.mindprod.fileio.FileType,com.mindprod.fileio.DataType,boolean,boolean,boolean)>"->"push 40";
    "push 40"->"push 0";
    "specialinvoke <javax.swing.JTextArea: void <init>(java.lang.String,int,int)>"
    "push 0"->"specialinvoke <javax.swing.JTextArea: void <init>(java.lang.String,int,int)>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JTextArea howTo>"
    "specialinvoke <javax.swing.JTextArea: void <init>(java.lang.String,int,int)>"->"fieldput <com.mindprod.fileio.FileIO: javax.swing.JTextArea howTo>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JTextArea howTo>"->"load.r r0";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JTextArea howTo>"
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JTextArea howTo>";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JTextArea howTo>"->"push 0";
    "virtualinvoke <javax.swing.JTextArea: void setEditable(boolean)>"
    "push 0"->"virtualinvoke <javax.swing.JTextArea: void setEditable(boolean)>";
    "virtualinvoke <javax.swing.JTextArea: void setEditable(boolean)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JTextArea howTo>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Font FONT_FOR_RESULTS>"
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JTextArea howTo>"->"staticget <com.mindprod.fileio.FileIO: java.awt.Font FONT_FOR_RESULTS>";
    "virtualinvoke <javax.swing.JTextArea: void setFont(java.awt.Font)>"
    "staticget <com.mindprod.fileio.FileIO: java.awt.Font FONT_FOR_RESULTS>"->"virtualinvoke <javax.swing.JTextArea: void setFont(java.awt.Font)>";
    "virtualinvoke <javax.swing.JTextArea: void setFont(java.awt.Font)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JTextArea howTo>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_RESULTS>"
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JTextArea howTo>"->"staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_RESULTS>";
    "virtualinvoke <javax.swing.JTextArea: void setForeground(java.awt.Color)>"
    "staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_RESULTS>"->"virtualinvoke <javax.swing.JTextArea: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JTextArea: void setForeground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JTextArea howTo>";
    "new java.awt.Insets"
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JTextArea howTo>"->"new java.awt.Insets";
    "new java.awt.Insets"->"dup1.r";
    "dup1.r"->"push 5";
    "push 5"->"push 5";
    "push 5"->"push 5";
    "push 5"->"push 5";
    "specialinvoke <java.awt.Insets: void <init>(int,int,int,int)>"
    "push 5"->"specialinvoke <java.awt.Insets: void <init>(int,int,int,int)>";
    "virtualinvoke <javax.swing.JTextArea: void setMargin(java.awt.Insets)>"
    "specialinvoke <java.awt.Insets: void <init>(int,int,int,int)>"->"virtualinvoke <javax.swing.JTextArea: void setMargin(java.awt.Insets)>";
    "virtualinvoke <javax.swing.JTextArea: void setMargin(java.awt.Insets)>"->"load.r r0";
    "new javax.swing.JScrollPane"
    "load.r r0"->"new javax.swing.JScrollPane";
    "new javax.swing.JScrollPane"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JTextArea howTo>";
    "push 22"
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JTextArea howTo>"->"push 22";
    "push 30"
    "push 22"->"push 30";
    "specialinvoke <javax.swing.JScrollPane: void <init>(java.awt.Component,int,int)>"
    "push 30"->"specialinvoke <javax.swing.JScrollPane: void <init>(java.awt.Component,int,int)>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JScrollPane howToScroller>"
    "specialinvoke <javax.swing.JScrollPane: void <init>(java.awt.Component,int,int)>"->"fieldput <com.mindprod.fileio.FileIO: javax.swing.JScrollPane howToScroller>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JScrollPane howToScroller>"->"load.r r0";
    "load.r r0"->"new javax.swing.JLabel";
    "new javax.swing.JLabel"->"dup1.r";
    "push \"Cut and Paste results into your own code.\""
    "dup1.r"->"push \"Cut and Paste results into your own code.\"";
    "push \"Cut and Paste results into your own code.\""->"push 0";
    "push 0"->"specialinvoke <javax.swing.JLabel: void <init>(java.lang.String,int)>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JLabel instructions>"
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String,int)>"->"fieldput <com.mindprod.fileio.FileIO: javax.swing.JLabel instructions>";
    "fieldput <com.mindprod.fileio.FileIO: javax.swing.JLabel instructions>"->"load.r r0";
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel instructions>"
    "load.r r0"->"fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel instructions>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_INSTRUCTIONS>"
    "fieldget <com.mindprod.fileio.FileIO: javax.swing.JLabel instructions>"->"staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_INSTRUCTIONS>";
    "staticget <com.mindprod.fileio.FileIO: java.awt.Color FOREGROUND_FOR_INSTRUCTIONS>"->"virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JLabel: void setForeground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"load.r r1";
    "specialinvoke <com.mindprod.fileio.FileIO: void layoutComponents(java.awt.Container)>"
    "load.r r1"->"specialinvoke <com.mindprod.fileio.FileIO: void layoutComponents(java.awt.Container)>";
    "specialinvoke <com.mindprod.fileio.FileIO: void layoutComponents(java.awt.Container)>"->"load.r r0";
    "specialinvoke <com.mindprod.fileio.FileIO: void hookListeners()>"
    "load.r r0"->"specialinvoke <com.mindprod.fileio.FileIO: void hookListeners()>";
    "specialinvoke <com.mindprod.fileio.FileIO: void hookListeners()>"->"return";
}
