digraph "" {
    "r0 := @this: a"
    "load.r r0"
    "r0 := @this: a"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
    "fieldget <java.awt.Dimension: int width>"
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int width>";
    "fieldput <a: int b>"
    "fieldget <java.awt.Dimension: int width>"->"fieldput <a: int b>";
    "fieldput <a: int b>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
    "fieldget <java.awt.Dimension: int height>"
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldget <java.awt.Dimension: int height>";
    "fieldput <a: int a>"
    "fieldget <java.awt.Dimension: int height>"->"fieldput <a: int a>";
    "fieldput <a: int a>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"delay\""
    "load.r r0"->"push \"delay\"";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"
    "push \"delay\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <a: int g>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <a: int g>";
    "fieldput <a: int g>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"frames\""
    "load.r r0"->"push \"frames\"";
    "push \"frames\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <a: int else>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <a: int else>";
    "fieldput <a: int else>"->"load.r r0";
    "push 0.007"
    "load.r r0"->"push 0.007";
    "push 0.007"->"load.r r0";
    "push \"size\""
    "load.r r0"->"push \"size\"";
    "push \"size\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "i2d"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"i2d";
    "mul.d"
    "i2d"->"mul.d";
    "fieldput <a: double d>"
    "mul.d"->"fieldput <a: double d>";
    "fieldput <a: double d>"->"load.r r0";
    "push 3.0E-4"
    "load.r r0"->"push 3.0E-4";
    "push 3.0E-4"->"load.r r0";
    "push \"number\""
    "load.r r0"->"push \"number\"";
    "push \"number\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"i2d";
    "i2d"->"mul.d";
    "fieldput <a: double 'if'>"
    "mul.d"->"fieldput <a: double 'if'>";
    "fieldput <a: double 'if'>"->"load.r r0";
    "push \"animatebrightness\""
    "load.r r0"->"push \"animatebrightness\"";
    "push \"animatebrightness\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "push 0"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"push 0";
    "virtualinvoke <java.lang.String: char charAt(int)>"
    "push 0"->"virtualinvoke <java.lang.String: char charAt(int)>";
    "push 121"
    "virtualinvoke <java.lang.String: char charAt(int)>"->"push 121";
    "ifcmpne.c load.r r0"
    "push 121"->"ifcmpne.c load.r r0";
    "ifcmpne.c load.r r0"->"load.r r0";
    "push 1"
    "load.r r0"->"push 1";
    "fieldput <a: boolean c>"
    "push 1"->"fieldput <a: boolean c>";
    "goto load.r r0"
    "fieldput <a: boolean c>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <a: int else>"
    "load.r r0"->"fieldget <a: int else>";
    "newarray"
    "fieldget <a: int else>"->"newarray";
    "fieldput <a: java.awt.Image[] 'goto'>"
    "newarray"->"fieldput <a: java.awt.Image[] 'goto'>";
    "fieldput <a: java.awt.Image[] 'goto'>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <a: int b>"
    "load.r r0"->"fieldget <a: int b>";
    "fieldget <a: int b>"->"load.r r0";
    "fieldget <a: int a>"
    "load.r r0"->"fieldget <a: int a>";
    "newmultiarray 2"
    "fieldget <a: int a>"->"newmultiarray 2";
    "fieldput <a: int[][] 'long'>"
    "newmultiarray 2"->"fieldput <a: int[][] 'long'>";
    "fieldput <a: int[][] 'long'>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <a: int b>";
    "fieldget <a: int b>"->"load.r r0";
    "load.r r0"->"fieldget <a: int a>";
    "fieldget <a: int a>"->"newmultiarray 2";
    "fieldput <a: int[][] do>"
    "newmultiarray 2"->"fieldput <a: int[][] do>";
    "fieldput <a: int[][] do>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <a: int b>";
    "fieldget <a: int b>"->"load.r r0";
    "load.r r0"->"fieldget <a: int a>";
    "fieldget <a: int a>"->"newmultiarray 2";
    "fieldput <a: boolean[][] 'new'>"
    "newmultiarray 2"->"fieldput <a: boolean[][] 'new'>";
    "fieldput <a: boolean[][] 'new'>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <a: int 'byte'>"
    "load.r r0"->"fieldget <a: int 'byte'>";
    "fieldget <a: int 'byte'>"->"load.r r0";
    "load.r r0"->"fieldget <a: int 'byte'>";
    "fieldget <a: int 'byte'>"->"newmultiarray 2";
    "fieldput <a: int[][] 'char'>"
    "newmultiarray 2"->"fieldput <a: int[][] 'char'>";
    "fieldput <a: int[][] 'char'>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <a: int b>";
    "fieldget <a: int b>"->"load.r r0";
    "load.r r0"->"fieldget <a: int a>";
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"
    "fieldget <a: int a>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>";
    "fieldput <a: java.awt.Image h>"
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(int,int)>"->"fieldput <a: java.awt.Image h>";
    "fieldput <a: java.awt.Image h>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <a: java.awt.Image h>"
    "load.r r0"->"fieldget <a: java.awt.Image h>";
    "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"
    "fieldget <a: java.awt.Image h>"->"virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>";
    "fieldput <a: java.awt.Graphics 'case'>"
    "virtualinvoke <java.awt.Image: java.awt.Graphics getGraphics()>"->"fieldput <a: java.awt.Graphics 'case'>";
    "fieldput <a: java.awt.Graphics 'case'>"->"load.r r0";
    "new a$a"
    "load.r r0"->"new a$a";
    "dup1.r"
    "new a$a"->"dup1.r";
    "dup1.r"->"load.r r0";
    "specialinvoke <a$a: void <init>(a)>"
    "load.r r0"->"specialinvoke <a$a: void <init>(a)>";
    "virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>"
    "specialinvoke <a$a: void <init>(a)>"->"virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>";
    "virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>"->"load.r r0";
    "new a$b"
    "load.r r0"->"new a$b";
    "new a$b"->"dup1.r";
    "dup1.r"->"load.r r0";
    "specialinvoke <a$b: void <init>(a)>"
    "load.r r0"->"specialinvoke <a$b: void <init>(a)>";
    "virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>"
    "specialinvoke <a$b: void <init>(a)>"->"virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>";
    "return"
    "virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>"->"return";
    "ifcmpne.c load.r r0"->"load.r r0";
    "load.r r0"->"push 0";
    "push 0"->"fieldput <a: boolean c>";
}
