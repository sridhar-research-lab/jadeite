digraph "" {
    "r0 := @this: Windmill"
    "load.r r0"
    "r0 := @this: Windmill"->"load.r r0";
    "new java.awt.GridLayout"
    "load.r r0"->"new java.awt.GridLayout";
    "dup1.r"
    "new java.awt.GridLayout"->"dup1.r";
    "push 1"
    "dup1.r"->"push 1";
    "push 1"->"push 1";
    "specialinvoke <java.awt.GridLayout: void <init>(int,int)>"
    "push 1"->"specialinvoke <java.awt.GridLayout: void <init>(int,int)>";
    "virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>"
    "specialinvoke <java.awt.GridLayout: void <init>(int,int)>"->"virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>";
    "virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <Windmill: WindmillPanel windmillPanel>"
    "load.r r0"->"fieldget <Windmill: WindmillPanel windmillPanel>";
    "virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>"
    "fieldget <Windmill: WindmillPanel windmillPanel>"->"virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>";
    "pop"
    "virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>"->"pop";
    "return"
    "pop"->"return";
}
