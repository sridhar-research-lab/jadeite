digraph "" {
    "r0 := @this: TestApplet"
    "new java.awt.MediaTracker"
    "r0 := @this: TestApplet"->"new java.awt.MediaTracker";
    "store.r $r4"
    "new java.awt.MediaTracker"->"store.r $r4";
    "load.r $r4"
    "store.r $r4"->"load.r $r4";
    "load.r r0"
    "load.r $r4"->"load.r r0";
    "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"
    "load.r r0"->"specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>";
    "specialinvoke <java.awt.MediaTracker: void <init>(java.awt.Component)>"->"load.r r0";
    "virtualinvoke <TestApplet: java.net.URL getCodeBase()>"
    "load.r r0"->"virtualinvoke <TestApplet: java.net.URL getCodeBase()>";
    "store.r r2"
    "virtualinvoke <TestApplet: java.net.URL getCodeBase()>"->"store.r r2";
    "push 3"
    "store.r r2"->"push 3";
    "newarray"
    "push 3"->"newarray";
    "store.r r3"
    "newarray"->"store.r r3";
    "load.r r3"
    "store.r r3"->"load.r r3";
    "push 0"
    "load.r r3"->"push 0";
    "push 0"->"load.r r0";
    "load.r r2"
    "load.r r0"->"load.r r2";
    "push \"img/bug1.png\""
    "load.r r2"->"push \"img/bug1.png\"";
    "virtualinvoke <TestApplet: java.awt.Image getImage(java.net.URL,java.lang.String)>"
    "push \"img/bug1.png\""->"virtualinvoke <TestApplet: java.awt.Image getImage(java.net.URL,java.lang.String)>";
    "arraywrite.r"
    "virtualinvoke <TestApplet: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r3";
    "push 1"
    "load.r r3"->"push 1";
    "push 1"->"load.r r0";
    "load.r r0"->"load.r r2";
    "push \"img/bug2.png\""
    "load.r r2"->"push \"img/bug2.png\"";
    "push \"img/bug2.png\""->"virtualinvoke <TestApplet: java.awt.Image getImage(java.net.URL,java.lang.String)>";
    "virtualinvoke <TestApplet: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r3";
    "push 2"
    "load.r r3"->"push 2";
    "push 2"->"load.r r0";
    "load.r r0"->"load.r r2";
    "push \"img/bug3.png\""
    "load.r r2"->"push \"img/bug3.png\"";
    "push \"img/bug3.png\""->"virtualinvoke <TestApplet: java.awt.Image getImage(java.net.URL,java.lang.String)>";
    "virtualinvoke <TestApplet: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"arraywrite.r";
    "arraywrite.r"->"push 0";
    "store.i r2"
    "push 0"->"store.i r2";
    "load.i r2"
    "store.i r2"->"load.i r2";
    "load.i r2"->"load.r r3";
    "arraylength"
    "load.r r3"->"arraylength";
    "ifcmpge.i load.r $r4"
    "arraylength"->"ifcmpge.i load.r $r4";
    "ifcmpge.i load.r $r4"->"load.r $r4";
    "load.r $r4"->"load.r r3";
    "load.r r3"->"load.i r2";
    "arrayread.r"
    "load.i r2"->"arrayread.r";
    "arrayread.r"->"load.i r2";
    "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"
    "load.i r2"->"virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>";
    "inc.i r2 1"
    "virtualinvoke <java.awt.MediaTracker: void addImage(java.awt.Image,int)>"->"inc.i r2 1";
    "goto load.i r2"
    "inc.i r2 1"->"goto load.i r2";
    "ifcmpge.i load.r $r4"->"load.r $r4";
    "virtualinvoke <java.awt.MediaTracker: void waitForAll()>"
    "load.r $r4"->"virtualinvoke <java.awt.MediaTracker: void waitForAll()>";
    "goto new javax.swing.JPanel"
    "virtualinvoke <java.awt.MediaTracker: void waitForAll()>"->"goto new javax.swing.JPanel";
    "new javax.swing.JPanel"
    "goto new javax.swing.JPanel"->"new javax.swing.JPanel";
    "new javax.swing.JPanel"->"store.r $r4";
    "store.r $r4"->"load.r $r4";
    "new java.awt.BorderLayout"
    "load.r $r4"->"new java.awt.BorderLayout";
    "dup1.r"
    "new java.awt.BorderLayout"->"dup1.r";
    "specialinvoke <java.awt.BorderLayout: void <init>()>"
    "dup1.r"->"specialinvoke <java.awt.BorderLayout: void <init>()>";
    "specialinvoke <javax.swing.JPanel: void <init>(java.awt.LayoutManager)>"
    "specialinvoke <java.awt.BorderLayout: void <init>()>"->"specialinvoke <javax.swing.JPanel: void <init>(java.awt.LayoutManager)>";
    "specialinvoke <javax.swing.JPanel: void <init>(java.awt.LayoutManager)>"->"new javax.swing.JPanel";
    "new javax.swing.JPanel"->"dup1.r";
    "new java.awt.FlowLayout"
    "dup1.r"->"new java.awt.FlowLayout";
    "new java.awt.FlowLayout"->"dup1.r";
    "dup1.r"->"push 1";
    "push 10"
    "push 1"->"push 10";
    "push 20"
    "push 10"->"push 20";
    "specialinvoke <java.awt.FlowLayout: void <init>(int,int,int)>"
    "push 20"->"specialinvoke <java.awt.FlowLayout: void <init>(int,int,int)>";
    "specialinvoke <java.awt.FlowLayout: void <init>(int,int,int)>"->"specialinvoke <javax.swing.JPanel: void <init>(java.awt.LayoutManager)>";
    "staticput <TestApplet: javax.swing.JPanel antPanel>"
    "specialinvoke <javax.swing.JPanel: void <init>(java.awt.LayoutManager)>"->"staticput <TestApplet: javax.swing.JPanel antPanel>";
    "staticget <TestApplet: javax.swing.JPanel antPanel>"
    "staticput <TestApplet: javax.swing.JPanel antPanel>"->"staticget <TestApplet: javax.swing.JPanel antPanel>";
    "new javax.swing.JLabel"
    "staticget <TestApplet: javax.swing.JPanel antPanel>"->"new javax.swing.JLabel";
    "new javax.swing.JLabel"->"dup1.r";
    "push \"<html>Use your own set of images<br>for creating animated cursors <br>like this ant...</html>\""
    "dup1.r"->"push \"<html>Use your own set of images<br>for creating animated cursors <br>like this ant...</html>\"";
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>"
    "push \"<html>Use your own set of images<br>for creating animated cursors <br>like this ant...</html>\""->"specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>";
    "virtualinvoke <javax.swing.JPanel: java.awt.Component add(java.awt.Component)>"
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>"->"virtualinvoke <javax.swing.JPanel: java.awt.Component add(java.awt.Component)>";
    "pop"
    "virtualinvoke <javax.swing.JPanel: java.awt.Component add(java.awt.Component)>"->"pop";
    "pop"->"staticget <TestApplet: javax.swing.JPanel antPanel>";
    "push \"Custom Ant Cursor Area\""
    "staticget <TestApplet: javax.swing.JPanel antPanel>"->"push \"Custom Ant Cursor Area\"";
    "staticinvoke <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(java.lang.String)>"
    "push \"Custom Ant Cursor Area\""->"staticinvoke <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(java.lang.String)>";
    "virtualinvoke <javax.swing.JPanel: void setBorder(javax.swing.border.Border)>"
    "staticinvoke <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(java.lang.String)>"->"virtualinvoke <javax.swing.JPanel: void setBorder(javax.swing.border.Border)>";
    "virtualinvoke <javax.swing.JPanel: void setBorder(javax.swing.border.Border)>"->"staticget <TestApplet: javax.swing.JPanel antPanel>";
    "new java.awt.Color"
    "staticget <TestApplet: javax.swing.JPanel antPanel>"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "push 255"
    "dup1.r"->"push 255";
    "push 255"->"push 255";
    "push 128"
    "push 255"->"push 128";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"
    "push 128"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "virtualinvoke <javax.swing.JPanel: void setBackground(java.awt.Color)>"
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"virtualinvoke <javax.swing.JPanel: void setBackground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JPanel: void setBackground(java.awt.Color)>"->"new javax.swing.JPanel";
    "new javax.swing.JPanel"->"dup1.r";
    "dup1.r"->"new java.awt.FlowLayout";
    "new java.awt.FlowLayout"->"dup1.r";
    "dup1.r"->"push 1";
    "push 1"->"push 10";
    "push 10"->"push 20";
    "push 20"->"specialinvoke <java.awt.FlowLayout: void <init>(int,int,int)>";
    "specialinvoke <java.awt.FlowLayout: void <init>(int,int,int)>"->"specialinvoke <javax.swing.JPanel: void <init>(java.awt.LayoutManager)>";
    "staticput <TestApplet: javax.swing.JPanel defaultPanel>"
    "specialinvoke <javax.swing.JPanel: void <init>(java.awt.LayoutManager)>"->"staticput <TestApplet: javax.swing.JPanel defaultPanel>";
    "staticget <TestApplet: javax.swing.JPanel defaultPanel>"
    "staticput <TestApplet: javax.swing.JPanel defaultPanel>"->"staticget <TestApplet: javax.swing.JPanel defaultPanel>";
    "staticget <TestApplet: javax.swing.JPanel defaultPanel>"->"new javax.swing.JLabel";
    "new javax.swing.JLabel"->"dup1.r";
    "push \"<html>...or just use:<pre>CrasyCursor.create(myComponent);</pre>to get this cursor.</html>\""
    "dup1.r"->"push \"<html>...or just use:<pre>CrasyCursor.create(myComponent);</pre>to get this cursor.</html>\"";
    "push \"<html>...or just use:<pre>CrasyCursor.create(myComponent);</pre>to get this cursor.</html>\""->"specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>";
    "specialinvoke <javax.swing.JLabel: void <init>(java.lang.String)>"->"virtualinvoke <javax.swing.JPanel: java.awt.Component add(java.awt.Component)>";
    "virtualinvoke <javax.swing.JPanel: java.awt.Component add(java.awt.Component)>"->"pop";
    "pop"->"staticget <TestApplet: javax.swing.JPanel defaultPanel>";
    "push \"Default CrazyCursor Area\""
    "staticget <TestApplet: javax.swing.JPanel defaultPanel>"->"push \"Default CrazyCursor Area\"";
    "push \"Default CrazyCursor Area\""->"staticinvoke <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(java.lang.String)>";
    "staticinvoke <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(java.lang.String)>"->"virtualinvoke <javax.swing.JPanel: void setBorder(javax.swing.border.Border)>";
    "virtualinvoke <javax.swing.JPanel: void setBorder(javax.swing.border.Border)>"->"staticget <TestApplet: javax.swing.JPanel defaultPanel>";
    "staticget <TestApplet: javax.swing.JPanel defaultPanel>"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "push 196"
    "dup1.r"->"push 196";
    "push 196"->"push 255";
    "push 255"->"push 255";
    "push 255"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"virtualinvoke <javax.swing.JPanel: void setBackground(java.awt.Color)>";
    "virtualinvoke <javax.swing.JPanel: void setBackground(java.awt.Color)>"->"load.r $r4";
    "load.r $r4"->"staticget <TestApplet: javax.swing.JPanel antPanel>";
    "push \"Center\""
    "staticget <TestApplet: javax.swing.JPanel antPanel>"->"push \"Center\"";
    "virtualinvoke <javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>"
    "push \"Center\""->"virtualinvoke <javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>";
    "virtualinvoke <javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>"->"load.r $r4";
    "load.r $r4"->"staticget <TestApplet: javax.swing.JPanel defaultPanel>";
    "push \"East\""
    "staticget <TestApplet: javax.swing.JPanel defaultPanel>"->"push \"East\"";
    "push \"East\""->"virtualinvoke <javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>";
    "virtualinvoke <javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>"->"load.r r0";
    "load.r r0"->"new java.awt.BorderLayout";
    "new java.awt.BorderLayout"->"dup1.r";
    "dup1.r"->"specialinvoke <java.awt.BorderLayout: void <init>()>";
    "virtualinvoke <TestApplet: void setLayout(java.awt.LayoutManager)>"
    "specialinvoke <java.awt.BorderLayout: void <init>()>"->"virtualinvoke <TestApplet: void setLayout(java.awt.LayoutManager)>";
    "virtualinvoke <TestApplet: void setLayout(java.awt.LayoutManager)>"->"load.r r0";
    "load.r r0"->"load.r $r4";
    "virtualinvoke <TestApplet: java.awt.Component add(java.awt.Component)>"
    "load.r $r4"->"virtualinvoke <TestApplet: java.awt.Component add(java.awt.Component)>";
    "virtualinvoke <TestApplet: java.awt.Component add(java.awt.Component)>"->"pop";
    "pop"->"staticget <TestApplet: javax.swing.JPanel antPanel>";
    "staticget <TestApplet: javax.swing.JPanel antPanel>"->"load.r r3";
    "new java.awt.Point"
    "load.r r3"->"new java.awt.Point";
    "new java.awt.Point"->"dup1.r";
    "push 15"
    "dup1.r"->"push 15";
    "push 15"->"push 0";
    "specialinvoke <java.awt.Point: void <init>(int,int)>"
    "push 0"->"specialinvoke <java.awt.Point: void <init>(int,int)>";
    "staticinvoke <CrazyCursor4Applets: void create(java.awt.Component,java.awt.Image[],java.awt.Point)>"
    "specialinvoke <java.awt.Point: void <init>(int,int)>"->"staticinvoke <CrazyCursor4Applets: void create(java.awt.Component,java.awt.Image[],java.awt.Point)>";
    "staticinvoke <CrazyCursor4Applets: void create(java.awt.Component,java.awt.Image[],java.awt.Point)>"->"staticget <TestApplet: javax.swing.JPanel defaultPanel>";
    "staticinvoke <CrazyCursor4Applets: void create(java.awt.Component)>"
    "staticget <TestApplet: javax.swing.JPanel defaultPanel>"->"staticinvoke <CrazyCursor4Applets: void create(java.awt.Component)>";
    "return"
    "staticinvoke <CrazyCursor4Applets: void create(java.awt.Component)>"->"return";
    "virtualinvoke <java.awt.MediaTracker: void waitForAll()>"->"store.r $r4";
}
