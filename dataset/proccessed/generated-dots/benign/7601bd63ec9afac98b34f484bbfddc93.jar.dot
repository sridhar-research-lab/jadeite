digraph "" {
    "r0 := @this: SunRise"
    "load.r r0"
    "r0 := @this: SunRise"->"load.r r0";
    "virtualinvoke <java.awt.Component: java.awt.Graphics getGraphics()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Graphics getGraphics()>";
    "store.r r1"
    "virtualinvoke <java.awt.Component: java.awt.Graphics getGraphics()>"->"store.r r1";
    "store.r r1"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension size()>";
    "fieldput <SunRise: java.awt.Dimension d>"
    "virtualinvoke <java.awt.Component: java.awt.Dimension size()>"->"fieldput <SunRise: java.awt.Dimension d>";
    "fieldput <SunRise: java.awt.Dimension d>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <SunRise: java.awt.Dimension d>"
    "load.r r0"->"fieldget <SunRise: java.awt.Dimension d>";
    "fieldget <java.awt.Dimension: int width>"
    "fieldget <SunRise: java.awt.Dimension d>"->"fieldget <java.awt.Dimension: int width>";
    "fieldput <SunRise: int fullWidth>"
    "fieldget <java.awt.Dimension: int width>"->"fieldput <SunRise: int fullWidth>";
    "fieldput <SunRise: int fullWidth>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SunRise: java.awt.Dimension d>";
    "fieldget <java.awt.Dimension: int height>"
    "fieldget <SunRise: java.awt.Dimension d>"->"fieldget <java.awt.Dimension: int height>";
    "fieldput <SunRise: int fullHeight>"
    "fieldget <java.awt.Dimension: int height>"->"fieldput <SunRise: int fullHeight>";
    "fieldput <SunRise: int fullHeight>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <SunRise: int fullWidth>"
    "load.r r0"->"fieldget <SunRise: int fullWidth>";
    "push 8"
    "fieldget <SunRise: int fullWidth>"->"push 8";
    "sub.i"
    "push 8"->"sub.i";
    "fieldput <SunRise: int winWidth>"
    "sub.i"->"fieldput <SunRise: int winWidth>";
    "fieldput <SunRise: int winWidth>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <SunRise: int fullHeight>"
    "load.r r0"->"fieldget <SunRise: int fullHeight>";
    "fieldget <SunRise: int fullHeight>"->"push 8";
    "push 8"->"sub.i";
    "fieldput <SunRise: int winHeight>"
    "sub.i"->"fieldput <SunRise: int winHeight>";
    "fieldput <SunRise: int winHeight>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"Text\""
    "load.r r0"->"push \"Text\"";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"
    "push \"Text\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "fieldput <SunRise: java.lang.String textStr>"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <SunRise: java.lang.String textStr>";
    "fieldput <SunRise: java.lang.String textStr>"->"load.r r0";
    "push \"Speed\""
    "load.r r0"->"push \"Speed\"";
    "push \"Speed\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "store.r $r32"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r $r32";
    "load.r $r32"
    "store.r $r32"->"load.r $r32";
    "ifnull load.r r0"
    "load.r $r32"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r0";
    "load.r r0"->"load.r $r32";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"
    "load.r $r32"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <SunRise: int Speed>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <SunRise: int Speed>";
    "fieldput <SunRise: int Speed>"->"load.r r0";
    "push \"URL\""
    "load.r r0"->"push \"URL\"";
    "push \"URL\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r $r32";
    "store.r $r32"->"load.r $r32";
    "load.r $r32"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r0";
    "load.r r0"->"load.r $r32";
    "fieldput <SunRise: java.lang.String URLstr>"
    "load.r $r32"->"fieldput <SunRise: java.lang.String URLstr>";
    "fieldput <SunRise: java.lang.String URLstr>"->"load.r r0";
    "new java.net.URL"
    "load.r r0"->"new java.net.URL";
    "dup1.r"
    "new java.net.URL"->"dup1.r";
    "dup1.r"->"load.r r0";
    "fieldget <SunRise: java.lang.String URLstr>"
    "load.r r0"->"fieldget <SunRise: java.lang.String URLstr>";
    "specialinvoke <java.net.URL: void <init>(java.lang.String)>"
    "fieldget <SunRise: java.lang.String URLstr>"->"specialinvoke <java.net.URL: void <init>(java.lang.String)>";
    "fieldput <SunRise: java.net.URL goURL>"
    "specialinvoke <java.net.URL: void <init>(java.lang.String)>"->"fieldput <SunRise: java.net.URL goURL>";
    "goto staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>"
    "fieldput <SunRise: java.net.URL goURL>"->"goto staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>";
    "staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>"
    "goto staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>"->"staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>";
    "virtualinvoke <java.awt.Toolkit: java.lang.String[] getFontList()>"
    "staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>"->"virtualinvoke <java.awt.Toolkit: java.lang.String[] getFontList()>";
    "pop"
    "virtualinvoke <java.awt.Toolkit: java.lang.String[] getFontList()>"->"pop";
    "pop"->"load.r r0";
    "new java.awt.Font"
    "load.r r0"->"new java.awt.Font";
    "new java.awt.Font"->"dup1.r";
    "push \"Serif\""
    "dup1.r"->"push \"Serif\"";
    "push 1"
    "push \"Serif\""->"push 1";
    "push 30"
    "push 1"->"push 30";
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"
    "push 30"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
    "fieldput <SunRise: java.awt.Font thisFont>"
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"fieldput <SunRise: java.awt.Font thisFont>";
    "fieldput <SunRise: java.awt.Font thisFont>"->"load.r r0";
    "load.r r0"->"new java.awt.Font";
    "new java.awt.Font"->"dup1.r";
    "dup1.r"->"push \"Serif\"";
    "push 0"
    "push \"Serif\""->"push 0";
    "push 9"
    "push 0"->"push 9";
    "push 9"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
    "fieldput <SunRise: java.awt.Font tinyFont>"
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"fieldput <SunRise: java.awt.Font tinyFont>";
    "load.r r1"
    "fieldput <SunRise: java.awt.Font tinyFont>"->"load.r r1";
    "load.r r1"->"load.r r0";
    "fieldget <SunRise: java.awt.Font thisFont>"
    "load.r r0"->"fieldget <SunRise: java.awt.Font thisFont>";
    "virtualinvoke <java.awt.Graphics: void setFont(java.awt.Font)>"
    "fieldget <SunRise: java.awt.Font thisFont>"->"virtualinvoke <java.awt.Graphics: void setFont(java.awt.Font)>";
    "virtualinvoke <java.awt.Graphics: void setFont(java.awt.Font)>"->"load.r r0";
    "load.r r0"->"load.r r1";
    "virtualinvoke <java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>"
    "load.r r1"->"virtualinvoke <java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>";
    "fieldput <SunRise: java.awt.FontMetrics fm>"
    "virtualinvoke <java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>"->"fieldput <SunRise: java.awt.FontMetrics fm>";
    "fieldput <SunRise: java.awt.FontMetrics fm>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <SunRise: java.awt.FontMetrics fm>"
    "load.r r0"->"fieldget <SunRise: java.awt.FontMetrics fm>";
    "virtualinvoke <java.awt.FontMetrics: int getMaxAdvance()>"
    "fieldget <SunRise: java.awt.FontMetrics fm>"->"virtualinvoke <java.awt.FontMetrics: int getMaxAdvance()>";
    "fieldput <SunRise: int fontWidth>"
    "virtualinvoke <java.awt.FontMetrics: int getMaxAdvance()>"->"fieldput <SunRise: int fontWidth>";
    "fieldput <SunRise: int fontWidth>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SunRise: java.awt.FontMetrics fm>";
    "virtualinvoke <java.awt.FontMetrics: int getHeight()>"
    "fieldget <SunRise: java.awt.FontMetrics fm>"->"virtualinvoke <java.awt.FontMetrics: int getHeight()>";
    "fieldput <SunRise: int fontHeight>"
    "virtualinvoke <java.awt.FontMetrics: int getHeight()>"->"fieldput <SunRise: int fontHeight>";
    "fieldput <SunRise: int fontHeight>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SunRise: java.awt.Dimension d>";
    "fieldget <SunRise: java.awt.Dimension d>"->"fieldget <java.awt.Dimension: int width>";
    "fieldget <java.awt.Dimension: int width>"->"load.r r0";
    "load.r r0"->"fieldget <SunRise: java.awt.FontMetrics fm>";
    "fieldget <SunRise: java.awt.FontMetrics fm>"->"load.r r0";
    "fieldget <SunRise: java.lang.String textStr>"
    "load.r r0"->"fieldget <SunRise: java.lang.String textStr>";
    "virtualinvoke <java.awt.FontMetrics: int stringWidth(java.lang.String)>"
    "fieldget <SunRise: java.lang.String textStr>"->"virtualinvoke <java.awt.FontMetrics: int stringWidth(java.lang.String)>";
    "virtualinvoke <java.awt.FontMetrics: int stringWidth(java.lang.String)>"->"sub.i";
    "push 2"
    "sub.i"->"push 2";
    "div.i"
    "push 2"->"div.i";
    "fieldput <SunRise: int textX>"
    "div.i"->"fieldput <SunRise: int textX>";
    "fieldput <SunRise: int textX>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <SunRise: int winHeight>"
    "load.r r0"->"fieldget <SunRise: int winHeight>";
    "fieldget <SunRise: int winHeight>"->"load.r r0";
    "fieldget <SunRise: int brightness>"
    "load.r r0"->"fieldget <SunRise: int brightness>";
    "fieldget <SunRise: int brightness>"->"sub.i";
    "sub.i"->"load.r r0";
    "fieldget <SunRise: int fontSize>"
    "load.r r0"->"fieldget <SunRise: int fontSize>";
    "add.i"
    "fieldget <SunRise: int fontSize>"->"add.i";
    "fieldput <SunRise: int textY>"
    "add.i"->"fieldput <SunRise: int textY>";
    "fieldput <SunRise: int textY>"->"load.r r0";
    "staticget <java.awt.Color: java.awt.Color black>"
    "load.r r0"->"staticget <java.awt.Color: java.awt.Color black>";
    "fieldput <SunRise: java.awt.Color textColor>"
    "staticget <java.awt.Color: java.awt.Color black>"->"fieldput <SunRise: java.awt.Color textColor>";
    "fieldput <SunRise: java.awt.Color textColor>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SunRise: int winHeight>";
    "fieldput <SunRise: int numSkyColors>"
    "fieldget <SunRise: int winHeight>"->"fieldput <SunRise: int numSkyColors>";
    "fieldput <SunRise: int numSkyColors>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <SunRise: int numSkyColors>"
    "load.r r0"->"fieldget <SunRise: int numSkyColors>";
    "newarray"
    "fieldget <SunRise: int numSkyColors>"->"newarray";
    "fieldput <SunRise: java.awt.Color[] skyColor>"
    "newarray"->"fieldput <SunRise: java.awt.Color[] skyColor>";
    "fieldput <SunRise: java.awt.Color[] skyColor>"->"load.r r0";
    "new java.awt.Color"
    "load.r r0"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "push 255"
    "dup1.r"->"push 255";
    "push 255"->"push 255";
    "push 255"->"push 255";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"
    "push 255"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "fieldput <SunRise: java.awt.Color cloudColor>"
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <SunRise: java.awt.Color cloudColor>";
    "fieldput <SunRise: java.awt.Color cloudColor>"->"load.r r0";
    "load.r r0"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "push 96"
    "dup1.r"->"push 96";
    "push 128"
    "push 96"->"push 128";
    "push 64"
    "push 128"->"push 64";
    "push 64"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "fieldput <SunRise: java.awt.Color hill0Color>"
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <SunRise: java.awt.Color hill0Color>";
    "fieldput <SunRise: java.awt.Color hill0Color>"->"load.r r0";
    "load.r r0"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"push 128";
    "push 192"
    "push 128"->"push 192";
    "push 192"->"push 128";
    "push 128"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "fieldput <SunRise: java.awt.Color hill1Color>"
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <SunRise: java.awt.Color hill1Color>";
    "fieldput <SunRise: java.awt.Color hill1Color>"->"load.r r0";
    "load.r r0"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"push 128";
    "push 128"->"push 128";
    "push 128"->"push 0";
    "push 0"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "fieldput <SunRise: java.awt.Color mountainColor>"
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <SunRise: java.awt.Color mountainColor>";
    "fieldput <SunRise: java.awt.Color mountainColor>"->"load.r r0";
    "load.r r0"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"push 0";
    "push 0"->"push 255";
    "push 255"->"push 0";
    "push 0"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "fieldput <SunRise: java.awt.Color treeColor>"
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"fieldput <SunRise: java.awt.Color treeColor>";
    "fieldput <SunRise: java.awt.Color treeColor>"->"load.r r0";
    "push 4"
    "load.r r0"->"push 4";
    "push 4"->"newarray";
    "fieldput <SunRise: double[] mountainJag>"
    "newarray"->"fieldput <SunRise: double[] mountainJag>";
    "fieldput <SunRise: double[] mountainJag>"->"load.r r0";
    "fieldget <SunRise: double[] mountainJag>"
    "load.r r0"->"fieldget <SunRise: double[] mountainJag>";
    "fieldget <SunRise: double[] mountainJag>"->"push 0";
    "push 25.0"
    "push 0"->"push 25.0";
    "arraywrite.d"
    "push 25.0"->"arraywrite.d";
    "arraywrite.d"->"load.r r0";
    "load.r r0"->"fieldget <SunRise: double[] mountainJag>";
    "fieldget <SunRise: double[] mountainJag>"->"push 1";
    "push 15.0"
    "push 1"->"push 15.0";
    "push 15.0"->"arraywrite.d";
    "arraywrite.d"->"load.r r0";
    "load.r r0"->"fieldget <SunRise: double[] mountainJag>";
    "fieldget <SunRise: double[] mountainJag>"->"push 2";
    "push 7.0"
    "push 2"->"push 7.0";
    "push 7.0"->"arraywrite.d";
    "arraywrite.d"->"load.r r0";
    "push 32"
    "load.r r0"->"push 32";
    "push 32"->"push 32";
    "newmultiarray 2"
    "push 32"->"newmultiarray 2";
    "fieldput <SunRise: int[][] mountsX>"
    "newmultiarray 2"->"fieldput <SunRise: int[][] mountsX>";
    "fieldput <SunRise: int[][] mountsX>"->"load.r r0";
    "load.r r0"->"push 32";
    "push 32"->"push 32";
    "push 32"->"newmultiarray 2";
    "fieldput <SunRise: int[][] mountsY>"
    "newmultiarray 2"->"fieldput <SunRise: int[][] mountsY>";
    "fieldput <SunRise: int[][] mountsY>"->"push 0";
    "store.i r1"
    "push 0"->"store.i r1";
    "store.i r1"->"push 0";
    "store.i $r32"
    "push 0"->"store.i $r32";
    "store.i $r32"->"load.r r0";
    "fieldget <SunRise: int[][] mountsX>"
    "load.r r0"->"fieldget <SunRise: int[][] mountsX>";
    "load.i r1"
    "fieldget <SunRise: int[][] mountsX>"->"load.i r1";
    "arrayread.r"
    "load.i r1"->"arrayread.r";
    "load.i $r32"
    "arrayread.r"->"load.i $r32";
    "load.i $r32"->"push 0";
    "arraywrite.i"
    "push 0"->"arraywrite.i";
    "arraywrite.i"->"load.r r0";
    "fieldget <SunRise: int[][] mountsY>"
    "load.r r0"->"fieldget <SunRise: int[][] mountsY>";
    "fieldget <SunRise: int[][] mountsY>"->"load.i r1";
    "load.i r1"->"arrayread.r";
    "arrayread.r"->"load.i $r32";
    "load.i $r32"->"push 0";
    "push 0"->"arraywrite.i";
    "inc.i $r32 1"
    "arraywrite.i"->"inc.i $r32 1";
    "inc.i $r32 1"->"load.i $r32";
    "load.i $r32"->"push 32";
    "ifcmplt.i load.r r0"
    "push 32"->"ifcmplt.i load.r r0";
    "inc.i r1 1"
    "ifcmplt.i load.r r0"->"inc.i r1 1";
    "inc.i r1 1"->"load.i r1";
    "load.i r1"->"push 4";
    "ifcmplt.i push 0"
    "push 4"->"ifcmplt.i push 0";
    "ifcmplt.i push 0"->"load.r r0";
    "load.r r0"->"push 0";
    "virtualinvoke <SunRise: void buildMountains(int)>"
    "push 0"->"virtualinvoke <SunRise: void buildMountains(int)>";
    "virtualinvoke <SunRise: void buildMountains(int)>"->"load.r r0";
    "load.r r0"->"push 1";
    "push 1"->"virtualinvoke <SunRise: void buildMountains(int)>";
    "virtualinvoke <SunRise: void buildMountains(int)>"->"load.r r0";
    "load.r r0"->"push 2";
    "push 2"->"virtualinvoke <SunRise: void buildMountains(int)>";
    "return"
    "virtualinvoke <SunRise: void buildMountains(int)>"->"return";
    "specialinvoke <java.net.URL: void <init>(java.lang.String)>"->"store.r $r32";
    "staticget <java.lang.System: java.io.PrintStream out>"
    "store.r $r32"->"staticget <java.lang.System: java.io.PrintStream out>";
    "push \"Something is wrong with your URL, Check applet parameter.\""
    "staticget <java.lang.System: java.io.PrintStream out>"->"push \"Something is wrong with your URL, Check applet parameter.\"";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"
    "push \"Something is wrong with your URL, Check applet parameter.\""->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
}
