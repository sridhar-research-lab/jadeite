digraph "" {
    "r0 := @this: SlideShowApplet"
    "load.r r0"
    "r0 := @this: SlideShowApplet"->"load.r r0";
    "push \"license\""
    "load.r r0"->"push \"license\"";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"
    "push \"license\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "store.r r1"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r1";
    "staticget <java.lang.System: java.io.PrintStream out>"
    "store.r r1"->"staticget <java.lang.System: java.io.PrintStream out>";
    "load.r r1"
    "staticget <java.lang.System: java.io.PrintStream out>"->"load.r r1";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"
    "load.r r1"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>"
    "load.r r0"->"virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>";
    "dup1.r"
    "virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>"->"dup1.r";
    "dup1.r"->"staticget <java.lang.System: java.io.PrintStream out>";
    "staticget <java.lang.System: java.io.PrintStream out>"->"store.r r1";
    "virtualinvoke <java.net.URL: java.lang.String toString()>"
    "store.r r1"->"virtualinvoke <java.net.URL: java.lang.String toString()>";
    "store.r r4"
    "virtualinvoke <java.net.URL: java.lang.String toString()>"->"store.r r4";
    "store.r r4"->"load.r r1";
    "load.r r4"
    "load.r r1"->"load.r r4";
    "load.r r4"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"load.r r0";
    "load.r r0"->"push \"license\"";
    "push \"license\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r1";
    "store.r r1"->"virtualinvoke <java.net.URL: java.lang.String toString()>";
    "virtualinvoke <java.net.URL: java.lang.String toString()>"->"store.r r4";
    "store.r r4"->"load.r r1";
    "load.r r1"->"load.r r4";
    "virtualinvoke <SlideShowApplet: boolean testlicense(java.lang.String,java.lang.String)>"
    "load.r r4"->"virtualinvoke <SlideShowApplet: boolean testlicense(java.lang.String,java.lang.String)>";
    "ifne load.r r0"
    "virtualinvoke <SlideShowApplet: boolean testlicense(java.lang.String,java.lang.String)>"->"ifne load.r r0";
    "ifne load.r r0"->"load.r r0";
    "push 1"
    "load.r r0"->"push 1";
    "fieldput <SlideShowApplet: boolean noLicense>"
    "push 1"->"fieldput <SlideShowApplet: boolean noLicense>";
    "fieldput <SlideShowApplet: boolean noLicense>"->"staticget <java.lang.System: java.io.PrintStream out>";
    "push \"Unlicensed Applet -- limited to 5 slides. Contact acrossley@cogent.netkonect.co.uk\""
    "staticget <java.lang.System: java.io.PrintStream out>"->"push \"Unlicensed Applet -- limited to 5 slides. Contact acrossley@cogent.netkonect.co.uk\"";
    "push \"Unlicensed Applet -- limited to 5 slides. Contact acrossley@cogent.netkonect.co.uk\""->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"load.r r0";
    "new SlideShowApplet$ClickButton"
    "load.r r0"->"new SlideShowApplet$ClickButton";
    "new SlideShowApplet$ClickButton"->"dup1.r";
    "dup1.r"->"load.r r0";
    "push \"  auto  \""
    "load.r r0"->"push \"  auto  \"";
    "specialinvoke <SlideShowApplet$ClickButton: void <init>(SlideShowApplet,java.lang.String)>"
    "push \"  auto  \""->"specialinvoke <SlideShowApplet$ClickButton: void <init>(SlideShowApplet,java.lang.String)>";
    "fieldput <SlideShowApplet: SlideShowApplet$ClickButton clickbutton>"
    "specialinvoke <SlideShowApplet$ClickButton: void <init>(SlideShowApplet,java.lang.String)>"->"fieldput <SlideShowApplet: SlideShowApplet$ClickButton clickbutton>";
    "fieldput <SlideShowApplet: SlideShowApplet$ClickButton clickbutton>"->"load.r r0";
    "fieldget <SlideShowApplet: SlideShowApplet$ClickButton clickbutton>"
    "load.r r0"->"fieldget <SlideShowApplet: SlideShowApplet$ClickButton clickbutton>";
    "staticget <java.awt.Color: java.awt.Color lightGray>"
    "fieldget <SlideShowApplet: SlideShowApplet$ClickButton clickbutton>"->"staticget <java.awt.Color: java.awt.Color lightGray>";
    "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"
    "staticget <java.awt.Color: java.awt.Color lightGray>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
    "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"fieldget <SlideShowApplet: SlideShowApplet$ClickButton clickbutton>";
    "staticget <java.awt.Color: java.awt.Color red>"
    "fieldget <SlideShowApplet: SlideShowApplet$ClickButton clickbutton>"->"staticget <java.awt.Color: java.awt.Color red>";
    "virtualinvoke <java.awt.Component: void setForeground(java.awt.Color)>"
    "staticget <java.awt.Color: java.awt.Color red>"->"virtualinvoke <java.awt.Component: void setForeground(java.awt.Color)>";
    "virtualinvoke <java.awt.Component: void setForeground(java.awt.Color)>"->"load.r r0";
    "new java.awt.FlowLayout"
    "load.r r0"->"new java.awt.FlowLayout";
    "new java.awt.FlowLayout"->"dup1.r";
    "push 0"
    "dup1.r"->"push 0";
    "specialinvoke <java.awt.FlowLayout: void <init>(int)>"
    "push 0"->"specialinvoke <java.awt.FlowLayout: void <init>(int)>";
    "virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>"
    "specialinvoke <java.awt.FlowLayout: void <init>(int)>"->"virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>";
    "virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SlideShowApplet: SlideShowApplet$ClickButton clickbutton>";
    "virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>"
    "fieldget <SlideShowApplet: SlideShowApplet$ClickButton clickbutton>"->"virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>";
    "pop"
    "virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>"->"pop";
    "pop"->"load.r r0";
    "new java.lang.Thread"
    "load.r r0"->"new java.lang.Thread";
    "new java.lang.Thread"->"dup1.r";
    "dup1.r"->"load.r r0";
    "specialinvoke <java.lang.Thread: void <init>(java.lang.Runnable)>"
    "load.r r0"->"specialinvoke <java.lang.Thread: void <init>(java.lang.Runnable)>";
    "fieldput <SlideShowApplet: java.lang.Thread myThread>"
    "specialinvoke <java.lang.Thread: void <init>(java.lang.Runnable)>"->"fieldput <SlideShowApplet: java.lang.Thread myThread>";
    "fieldput <SlideShowApplet: java.lang.Thread myThread>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"background\""
    "load.r r0"->"push \"background\"";
    "push \"background\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "fieldput <SlideShowApplet: java.lang.String bg>"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <SlideShowApplet: java.lang.String bg>";
    "fieldput <SlideShowApplet: java.lang.String bg>"->"staticget <java.lang.System: java.io.PrintStream out>";
    "staticget <java.lang.System: java.io.PrintStream out>"->"load.r r0";
    "fieldget <SlideShowApplet: java.lang.String bg>"
    "load.r r0"->"fieldget <SlideShowApplet: java.lang.String bg>";
    "fieldget <SlideShowApplet: java.lang.String bg>"->"virtualinvoke <java.io.PrintStream: void println(java.lang.String)>";
    "virtualinvoke <java.io.PrintStream: void println(java.lang.String)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SlideShowApplet: java.lang.String bg>";
    "staticinvoke <java.awt.Color: java.awt.Color decode(java.lang.String)>"
    "fieldget <SlideShowApplet: java.lang.String bg>"->"staticinvoke <java.awt.Color: java.awt.Color decode(java.lang.String)>";
    "staticinvoke <java.awt.Color: java.awt.Color decode(java.lang.String)>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
    "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>";
    "virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>"->"store.r r1";
    "store.r r1"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"numberOfSlides\""
    "load.r r0"->"push \"numberOfSlides\"";
    "push \"numberOfSlides\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <SlideShowApplet: int num>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <SlideShowApplet: int num>";
    "fieldput <SlideShowApplet: int num>"->"load.r r0";
    "fieldget <SlideShowApplet: boolean noLicense>"
    "load.r r0"->"fieldget <SlideShowApplet: boolean noLicense>";
    "ifeq load.r r0"
    "fieldget <SlideShowApplet: boolean noLicense>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "fieldget <SlideShowApplet: int num>"
    "load.r r0"->"fieldget <SlideShowApplet: int num>";
    "push 5"
    "fieldget <SlideShowApplet: int num>"->"push 5";
    "ifcmplt.i load.r r0"
    "push 5"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"push 5";
    "push 5"->"fieldput <SlideShowApplet: int num>";
    "fieldput <SlideShowApplet: int num>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"numberOfSeconds\""
    "load.r r0"->"push \"numberOfSeconds\"";
    "push \"numberOfSeconds\""->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "fieldput <SlideShowApplet: int pause>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"fieldput <SlideShowApplet: int pause>";
    "fieldput <SlideShowApplet: int pause>"->"push 0";
    "store.i i4"
    "push 0"->"store.i i4";
    "goto load.i i4"
    "store.i i4"->"goto load.i i4";
    "load.i i4"
    "goto load.i i4"->"load.i i4";
    "load.i i4"->"load.r r0";
    "load.r r0"->"fieldget <SlideShowApplet: int num>";
    "fieldget <SlideShowApplet: int num>"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <SlideShowApplet: boolean notFirstTime>"
    "push 0"->"fieldput <SlideShowApplet: boolean notFirstTime>";
    "fieldput <SlideShowApplet: boolean notFirstTime>"->"load.r r0";
    "fieldget <SlideShowApplet: java.lang.Thread myThread>"
    "load.r r0"->"fieldget <SlideShowApplet: java.lang.Thread myThread>";
    "virtualinvoke <java.lang.Thread: void start()>"
    "fieldget <SlideShowApplet: java.lang.Thread myThread>"->"virtualinvoke <java.lang.Thread: void start()>";
    "virtualinvoke <java.lang.Thread: void start()>"->"load.r r0";
    "load.r r0"->"new java.awt.FlowLayout";
    "new java.awt.FlowLayout"->"dup1.r";
    "dup1.r"->"push 0";
    "push 0"->"push 5";
    "push 5"->"push 5";
    "specialinvoke <java.awt.FlowLayout: void <init>(int,int,int)>"
    "push 5"->"specialinvoke <java.awt.FlowLayout: void <init>(int,int,int)>";
    "specialinvoke <java.awt.FlowLayout: void <init>(int,int,int)>"->"virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>";
    "virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>"->"load.r r0";
    "push 104"
    "load.r r0"->"push 104";
    "push 104"->"push 0";
    "virtualinvoke <java.awt.Component: void setSize(int,int)>"
    "push 0"->"virtualinvoke <java.awt.Component: void setSize(int,int)>";
    "virtualinvoke <java.awt.Component: void setSize(int,int)>"->"load.r r0";
    "load.r r0"->"push 1";
    "virtualinvoke <java.awt.Component: void setVisible(boolean)>"
    "push 1"->"virtualinvoke <java.awt.Component: void setVisible(boolean)>";
    "return"
    "virtualinvoke <java.awt.Component: void setVisible(boolean)>"->"return";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"load.i i4";
    "staticinvoke <java.lang.Integer: java.lang.String toString(int)>"
    "load.i i4"->"staticinvoke <java.lang.Integer: java.lang.String toString(int)>";
    "staticinvoke <java.lang.Integer: java.lang.String toString(int)>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"store.r r4";
    "store.r r4"->"load.r r0";
    "fieldget <SlideShowApplet: java.lang.String[] slideUrl>"
    "load.r r0"->"fieldget <SlideShowApplet: java.lang.String[] slideUrl>";
    "fieldget <SlideShowApplet: java.lang.String[] slideUrl>"->"load.i i4";
    "new java.lang.StringBuffer"
    "load.i i4"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "dup1.r"->"load.r r1";
    "staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>"
    "load.r r1"->"staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"
    "staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>"->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.r r4";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
    "load.r r4"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "arraywrite.r"
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"arraywrite.r";
    "inc.i i4 1"
    "arraywrite.r"->"inc.i i4 1";
}
