digraph "" {
    "r0 := @this: SIRtree"
    "load.r r0"
    "r0 := @this: SIRtree"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>"
    "load.r r0"->"virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>";
    "virtualinvoke <java.awt.Component: void addMouseMotionListener(java.awt.event.MouseMotionListener)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>"
    "load.r r0"->"virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>";
    "virtualinvoke <java.awt.Component: void addMouseListener(java.awt.event.MouseListener)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>"
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>";
    "fieldget <java.awt.Dimension: int width>"
    "virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>"->"fieldget <java.awt.Dimension: int width>";
    "fieldput <SIRtree: int WIDTH>"
    "fieldget <java.awt.Dimension: int width>"->"fieldput <SIRtree: int WIDTH>";
    "fieldput <SIRtree: int WIDTH>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>";
    "fieldget <java.awt.Dimension: int height>"
    "virtualinvoke <java.awt.Component: java.awt.Dimension getSize()>"->"fieldget <java.awt.Dimension: int height>";
    "fieldput <SIRtree: int HEIGHT>"
    "fieldget <java.awt.Dimension: int height>"->"fieldput <SIRtree: int HEIGHT>";
    "fieldput <SIRtree: int HEIGHT>"->"load.r r0";
    "push 0"
    "load.r r0"->"push 0";
    "fieldput <SIRtree: int xoffset>"
    "push 0"->"fieldput <SIRtree: int xoffset>";
    "fieldput <SIRtree: int xoffset>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <SIRtree: int yoffset>"
    "push 0"->"fieldput <SIRtree: int yoffset>";
    "fieldput <SIRtree: int yoffset>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"TITLE\""
    "load.r r0"->"push \"TITLE\"";
    "push \" \""
    "push \"TITLE\""->"push \" \"";
    "virtualinvoke <SIRtree: java.lang.String parmgetstr(java.lang.String,java.lang.String)>"
    "push \" \""->"virtualinvoke <SIRtree: java.lang.String parmgetstr(java.lang.String,java.lang.String)>";
    "fieldput <SIRtree: java.lang.String TITLE>"
    "virtualinvoke <SIRtree: java.lang.String parmgetstr(java.lang.String,java.lang.String)>"->"fieldput <SIRtree: java.lang.String TITLE>";
    "fieldput <SIRtree: java.lang.String TITLE>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"ICONS\""
    "load.r r0"->"push \"ICONS\"";
    "push \"ICONS\""->"push \" \"";
    "push \" \""->"virtualinvoke <SIRtree: java.lang.String parmgetstr(java.lang.String,java.lang.String)>";
    "fieldput <SIRtree: java.lang.String ICONS>"
    "virtualinvoke <SIRtree: java.lang.String parmgetstr(java.lang.String,java.lang.String)>"->"fieldput <SIRtree: java.lang.String ICONS>";
    "fieldput <SIRtree: java.lang.String ICONS>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"BGIMG\""
    "load.r r0"->"push \"BGIMG\"";
    "push \"BGIMG\""->"push \" \"";
    "push \" \""->"virtualinvoke <SIRtree: java.lang.String parmgetstr(java.lang.String,java.lang.String)>";
    "fieldput <SIRtree: java.lang.String BGIMG>"
    "virtualinvoke <SIRtree: java.lang.String parmgetstr(java.lang.String,java.lang.String)>"->"fieldput <SIRtree: java.lang.String BGIMG>";
    "fieldput <SIRtree: java.lang.String BGIMG>"->"load.r r0";
    "push 11"
    "load.r r0"->"push 11";
    "newarray"
    "push 11"->"newarray";
    "fieldput <SIRtree: java.awt.Font[] FONTS>"
    "newarray"->"fieldput <SIRtree: java.awt.Font[] FONTS>";
    "fieldput <SIRtree: java.awt.Font[] FONTS>"->"load.r r0";
    "push 1"
    "load.r r0"->"push 1";
    "fieldput <SIRtree: int i>"
    "push 1"->"fieldput <SIRtree: int i>";
    "goto load.r r0"
    "fieldput <SIRtree: int i>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "fieldget <SIRtree: int i>"
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"push 11";
    "ifcmplt.i load.r r0"
    "push 11"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "fieldget <SIRtree: java.awt.Font[] FONTS>"
    "load.r r0"->"fieldget <SIRtree: java.awt.Font[] FONTS>";
    "fieldget <SIRtree: java.awt.Font[] FONTS>"->"push 0";
    "new java.awt.Font"
    "push 0"->"new java.awt.Font";
    "dup1.r"
    "new java.awt.Font"->"dup1.r";
    "push \"Helvetica\""
    "dup1.r"->"push \"Helvetica\"";
    "push \"Helvetica\""->"push 0";
    "push 12"
    "push 0"->"push 12";
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"
    "push 12"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
    "arraywrite.r"
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "push 13"
    "load.r r0"->"push 13";
    "push 13"->"newarray";
    "fieldput <SIRtree: java.awt.Color[] COLORS>"
    "newarray"->"fieldput <SIRtree: java.awt.Color[] COLORS>";
    "fieldput <SIRtree: java.awt.Color[] COLORS>"->"load.r r0";
    "load.r r0"->"push 0";
    "push 0"->"fieldput <SIRtree: int i>";
    "fieldput <SIRtree: int i>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "push 10"
    "fieldget <SIRtree: int i>"->"push 10";
    "push 10"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "fieldget <SIRtree: java.awt.Color[] COLORS>"
    "load.r r0"->"fieldget <SIRtree: java.awt.Color[] COLORS>";
    "fieldget <SIRtree: java.awt.Color[] COLORS>"->"push 0";
    "new java.awt.Color"
    "push 0"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "push 255"
    "dup1.r"->"push 255";
    "push 255"->"push 255";
    "push 255"->"push 255";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"
    "push 255"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.awt.Color[] COLORS>";
    "fieldget <SIRtree: java.awt.Color[] COLORS>"->"push 11";
    "push 11"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "push 148"
    "dup1.r"->"push 148";
    "push 148"->"push 148";
    "push 148"->"push 148";
    "push 148"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.awt.Color[] COLORS>";
    "fieldget <SIRtree: java.awt.Color[] COLORS>"->"push 12";
    "push 12"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"push 0";
    "push 0"->"push 0";
    "push 0"->"push 0";
    "push 0"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"BGCOLOR\""
    "load.r r0"->"push \"BGCOLOR\"";
    "push \"BGCOLOR\""->"push 0";
    "push 0"->"push 1";
    "push 1"->"push 10";
    "virtualinvoke <SIRtree: int parmgetint(java.lang.String,int,int,int)>"
    "push 10"->"virtualinvoke <SIRtree: int parmgetint(java.lang.String,int,int,int)>";
    "fieldput <SIRtree: int BGCOLOR>"
    "virtualinvoke <SIRtree: int parmgetint(java.lang.String,int,int,int)>"->"fieldput <SIRtree: int BGCOLOR>";
    "fieldput <SIRtree: int BGCOLOR>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"TXTCOLOR\""
    "load.r r0"->"push \"TXTCOLOR\"";
    "push \"TXTCOLOR\""->"push 12";
    "push 12"->"push 1";
    "push 1"->"push 10";
    "push 10"->"virtualinvoke <SIRtree: int parmgetint(java.lang.String,int,int,int)>";
    "fieldput <SIRtree: int TXTCOLOR>"
    "virtualinvoke <SIRtree: int parmgetint(java.lang.String,int,int,int)>"->"fieldput <SIRtree: int TXTCOLOR>";
    "fieldput <SIRtree: int TXTCOLOR>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"HBGCOLOR\""
    "load.r r0"->"push \"HBGCOLOR\"";
    "push \"HBGCOLOR\""->"push 11";
    "push 11"->"push 1";
    "push 1"->"push 10";
    "push 10"->"virtualinvoke <SIRtree: int parmgetint(java.lang.String,int,int,int)>";
    "fieldput <SIRtree: int HBGCOLOR>"
    "virtualinvoke <SIRtree: int parmgetint(java.lang.String,int,int,int)>"->"fieldput <SIRtree: int HBGCOLOR>";
    "fieldput <SIRtree: int HBGCOLOR>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"HTXTCOLOR\""
    "load.r r0"->"push \"HTXTCOLOR\"";
    "push \"HTXTCOLOR\""->"load.r r0";
    "fieldget <SIRtree: int TXTCOLOR>"
    "load.r r0"->"fieldget <SIRtree: int TXTCOLOR>";
    "fieldget <SIRtree: int TXTCOLOR>"->"push 1";
    "push 1"->"push 10";
    "push 10"->"virtualinvoke <SIRtree: int parmgetint(java.lang.String,int,int,int)>";
    "fieldput <SIRtree: int HTXTCOLOR>"
    "virtualinvoke <SIRtree: int parmgetint(java.lang.String,int,int,int)>"->"fieldput <SIRtree: int HTXTCOLOR>";
    "fieldput <SIRtree: int HTXTCOLOR>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"TITLEFONT\""
    "load.r r0"->"push \"TITLEFONT\"";
    "push \"TITLEFONT\""->"push 0";
    "push 0"->"push 0";
    "push 9"
    "push 0"->"push 9";
    "push 9"->"virtualinvoke <SIRtree: int parmgetint(java.lang.String,int,int,int)>";
    "fieldput <SIRtree: int TITLEFONT>"
    "virtualinvoke <SIRtree: int parmgetint(java.lang.String,int,int,int)>"->"fieldput <SIRtree: int TITLEFONT>";
    "fieldput <SIRtree: int TITLEFONT>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "push \"NODEFONT\""
    "load.r r0"->"push \"NODEFONT\"";
    "push \"NODEFONT\""->"push 0";
    "push 0"->"push 0";
    "push 0"->"push 9";
    "push 9"->"virtualinvoke <SIRtree: int parmgetint(java.lang.String,int,int,int)>";
    "fieldput <SIRtree: int NODEFONT>"
    "virtualinvoke <SIRtree: int parmgetint(java.lang.String,int,int,int)>"->"fieldput <SIRtree: int NODEFONT>";
    "fieldput <SIRtree: int NODEFONT>"->"load.r r0";
    "load.r r0"->"push 10";
    "push 10"->"newarray";
    "fieldput <SIRtree: java.awt.Image[] NODE_IMG>"
    "newarray"->"fieldput <SIRtree: java.awt.Image[] NODE_IMG>";
    "fieldput <SIRtree: java.awt.Image[] NODE_IMG>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>"
    "load.r r0"->"virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>";
    "virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>"->"load.r r0";
    "fieldget <SIRtree: java.lang.String BGIMG>"
    "load.r r0"->"fieldget <SIRtree: java.lang.String BGIMG>";
    "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"
    "fieldget <SIRtree: java.lang.String BGIMG>"->"virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>";
    "fieldput <SIRtree: java.awt.Image BG_IMG>"
    "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"fieldput <SIRtree: java.awt.Image BG_IMG>";
    "fieldput <SIRtree: java.awt.Image BG_IMG>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>";
    "virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>"->"load.r r0";
    "fieldget <SIRtree: java.lang.String ICONS>"
    "load.r r0"->"fieldget <SIRtree: java.lang.String ICONS>";
    "fieldget <SIRtree: java.lang.String ICONS>"->"virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>";
    "fieldput <SIRtree: java.awt.Image tempimage>"
    "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"fieldput <SIRtree: java.awt.Image tempimage>";
    "fieldput <SIRtree: java.awt.Image tempimage>"->"load.r r0";
    "load.r r0"->"push 0";
    "push 0"->"fieldput <SIRtree: int i>";
    "fieldput <SIRtree: int i>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"push 10";
    "push 10"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <SIRtree: int NO_NODES>"
    "push 0"->"fieldput <SIRtree: int NO_NODES>";
    "fieldput <SIRtree: int NO_NODES>"->"load.r r0";
    "load.r r0"->"push 1";
    "fieldput <SIRtree: int NO_PARENTS>"
    "push 1"->"fieldput <SIRtree: int NO_PARENTS>";
    "fieldput <SIRtree: int NO_PARENTS>"->"load.r r0";
    "push 1000"
    "load.r r0"->"push 1000";
    "push 1000"->"newarray";
    "fieldput <SIRtree: java.lang.String[] TEMPARRAY>"
    "newarray"->"fieldput <SIRtree: java.lang.String[] TEMPARRAY>";
    "fieldput <SIRtree: java.lang.String[] TEMPARRAY>"->"load.r r0";
    "push \"ROOT|Sirius|0|http://www.net800.co.uk/netstart/sirius/|NewTarget|http://www.net800.co.uk/netstart/sirius/|NewTarget|1\""
    "load.r r0"->"push \"ROOT|Sirius|0|http://www.net800.co.uk/netstart/sirius/|NewTarget|http://www.net800.co.uk/netstart/sirius/|NewTarget|1\"";
    "fieldput <SIRtree: java.lang.String TEMPSTR>"
    "push \"ROOT|Sirius|0|http://www.net800.co.uk/netstart/sirius/|NewTarget|http://www.net800.co.uk/netstart/sirius/|NewTarget|1\""->"fieldput <SIRtree: java.lang.String TEMPSTR>";
    "fieldput <SIRtree: java.lang.String TEMPSTR>"->"load.r r0";
    "fieldget <SIRtree: java.lang.String[] TEMPARRAY>"
    "load.r r0"->"fieldget <SIRtree: java.lang.String[] TEMPARRAY>";
    "fieldget <SIRtree: java.lang.String[] TEMPARRAY>"->"load.r r0";
    "fieldget <SIRtree: int NO_NODES>"
    "load.r r0"->"fieldget <SIRtree: int NO_NODES>";
    "fieldget <SIRtree: int NO_NODES>"->"load.r r0";
    "fieldget <SIRtree: java.lang.String TEMPSTR>"
    "load.r r0"->"fieldget <SIRtree: java.lang.String TEMPSTR>";
    "fieldget <SIRtree: java.lang.String TEMPSTR>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int NO_NODES>";
    "fieldget <SIRtree: int NO_NODES>"->"push 1";
    "add.i"
    "push 1"->"add.i";
    "add.i"->"fieldput <SIRtree: int NO_NODES>";
    "fieldput <SIRtree: int NO_NODES>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "new java.lang.StringBuffer"
    "load.r r0"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "push \"NODE\""
    "dup1.r"->"push \"NODE\"";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"
    "push \"NODE\""->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int NO_NODES>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"
    "fieldget <SIRtree: int NO_NODES>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <SIRtree: java.lang.String TEMPSTR>";
    "fieldput <SIRtree: java.lang.String TEMPSTR>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.lang.String TEMPSTR>";
    "ifnull load.r r0"
    "fieldget <SIRtree: java.lang.String TEMPSTR>"->"ifnull load.r r0";
    "ifnull load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int NO_NODES>";
    "fieldget <SIRtree: int NO_NODES>"->"push 1000";
    "push 1000"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int NO_NODES>";
    "fieldget <SIRtree: int NO_NODES>"->"newarray";
    "fieldput <SIRtree: java.lang.String[] PARENT>"
    "newarray"->"fieldput <SIRtree: java.lang.String[] PARENT>";
    "fieldput <SIRtree: java.lang.String[] PARENT>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int NO_NODES>";
    "push 5"
    "fieldget <SIRtree: int NO_NODES>"->"push 5";
    "newmultiarray 2"
    "push 5"->"newmultiarray 2";
    "fieldput <SIRtree: java.lang.String[][] NODET>"
    "newmultiarray 2"->"fieldput <SIRtree: java.lang.String[][] NODET>";
    "fieldput <SIRtree: java.lang.String[][] NODET>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int NO_NODES>";
    "push 7"
    "fieldget <SIRtree: int NO_NODES>"->"push 7";
    "push 7"->"newmultiarray 2";
    "fieldput <SIRtree: int[][] NODEI>"
    "newmultiarray 2"->"fieldput <SIRtree: int[][] NODEI>";
    "fieldput <SIRtree: int[][] NODEI>"->"load.r r0";
    "fieldget <SIRtree: java.lang.String[] PARENT>"
    "load.r r0"->"fieldget <SIRtree: java.lang.String[] PARENT>";
    "fieldget <SIRtree: java.lang.String[] PARENT>"->"push 0";
    "push \"ROOT\""
    "push 0"->"push \"ROOT\"";
    "push \"ROOT\""->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"push 0";
    "push 0"->"fieldput <SIRtree: int i>";
    "fieldput <SIRtree: int i>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int NO_NODES>";
    "fieldget <SIRtree: int NO_NODES>"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"push 1000";
    "push 6"
    "push 1000"->"push 6";
    "push 6"->"newmultiarray 2";
    "fieldput <SIRtree: int[][] Area>"
    "newmultiarray 2"->"fieldput <SIRtree: int[][] Area>";
    "fieldput <SIRtree: int[][] Area>"->"load.r r0";
    "load.r r0"->"push 0";
    "push 0"->"fieldput <SIRtree: int i>";
    "fieldput <SIRtree: int i>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"push 1000";
    "push 1000"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"push 6";
    "fieldput <SIRtree: int Linset>"
    "push 6"->"fieldput <SIRtree: int Linset>";
    "fieldput <SIRtree: int Linset>"->"load.r r0";
    "load.r r0"->"push 5";
    "fieldput <SIRtree: int Rinset>"
    "push 5"->"fieldput <SIRtree: int Rinset>";
    "fieldput <SIRtree: int Rinset>"->"load.r r0";
    "push 35"
    "load.r r0"->"push 35";
    "fieldput <SIRtree: int Tinset>"
    "push 35"->"fieldput <SIRtree: int Tinset>";
    "fieldput <SIRtree: int Tinset>"->"load.r r0";
    "load.r r0"->"push 5";
    "fieldput <SIRtree: int Binset>"
    "push 5"->"fieldput <SIRtree: int Binset>";
    "fieldput <SIRtree: int Binset>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <SIRtree: java.awt.BorderLayout layout>"
    "load.r r0"->"fieldget <SIRtree: java.awt.BorderLayout layout>";
    "virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>"
    "fieldget <SIRtree: java.awt.BorderLayout layout>"->"virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>";
    "virtualinvoke <java.awt.Container: void setLayout(java.awt.LayoutManager)>"->"load.r r0";
    "new java.awt.Scrollbar"
    "load.r r0"->"new java.awt.Scrollbar";
    "new java.awt.Scrollbar"->"dup1.r";
    "dup1.r"->"push 1";
    "push 1"->"push 0";
    "push 0"->"push 1";
    "push 1"->"push 0";
    "push 0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int NO_NODES>";
    "specialinvoke <java.awt.Scrollbar: void <init>(int,int,int,int,int)>"
    "fieldget <SIRtree: int NO_NODES>"->"specialinvoke <java.awt.Scrollbar: void <init>(int,int,int,int,int)>";
    "fieldput <SIRtree: java.awt.Scrollbar vscrollbar>"
    "specialinvoke <java.awt.Scrollbar: void <init>(int,int,int,int,int)>"->"fieldput <SIRtree: java.awt.Scrollbar vscrollbar>";
    "fieldput <SIRtree: java.awt.Scrollbar vscrollbar>"->"load.r r0";
    "fieldget <SIRtree: java.awt.Scrollbar vscrollbar>"
    "load.r r0"->"fieldget <SIRtree: java.awt.Scrollbar vscrollbar>";
    "fieldget <SIRtree: java.awt.Scrollbar vscrollbar>"->"push 1";
    "virtualinvoke <java.awt.Scrollbar: void setPageIncrement(int)>"
    "push 1"->"virtualinvoke <java.awt.Scrollbar: void setPageIncrement(int)>";
    "virtualinvoke <java.awt.Scrollbar: void setPageIncrement(int)>"->"load.r r0";
    "push \"East\""
    "load.r r0"->"push \"East\"";
    "push \"East\""->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.awt.Scrollbar vscrollbar>";
    "virtualinvoke <java.awt.Container: java.awt.Component add(java.lang.String,java.awt.Component)>"
    "fieldget <SIRtree: java.awt.Scrollbar vscrollbar>"->"virtualinvoke <java.awt.Container: java.awt.Component add(java.lang.String,java.awt.Component)>";
    "pop"
    "virtualinvoke <java.awt.Container: java.awt.Component add(java.lang.String,java.awt.Component)>"->"pop";
    "pop"->"load.r r0";
    "load.r r0"->"new java.awt.Scrollbar";
    "new java.awt.Scrollbar"->"dup1.r";
    "dup1.r"->"push 0";
    "push 0"->"push 0";
    "push 0"->"push 1";
    "push 1"->"push 0";
    "push 0"->"push 10";
    "push 10"->"specialinvoke <java.awt.Scrollbar: void <init>(int,int,int,int,int)>";
    "fieldput <SIRtree: java.awt.Scrollbar hscrollbar>"
    "specialinvoke <java.awt.Scrollbar: void <init>(int,int,int,int,int)>"->"fieldput <SIRtree: java.awt.Scrollbar hscrollbar>";
    "fieldput <SIRtree: java.awt.Scrollbar hscrollbar>"->"load.r r0";
    "fieldget <SIRtree: java.awt.Scrollbar hscrollbar>"
    "load.r r0"->"fieldget <SIRtree: java.awt.Scrollbar hscrollbar>";
    "fieldget <SIRtree: java.awt.Scrollbar hscrollbar>"->"push 1";
    "push 1"->"virtualinvoke <java.awt.Scrollbar: void setPageIncrement(int)>";
    "virtualinvoke <java.awt.Scrollbar: void setPageIncrement(int)>"->"load.r r0";
    "push \"South\""
    "load.r r0"->"push \"South\"";
    "push \"South\""->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.awt.Scrollbar hscrollbar>";
    "fieldget <SIRtree: java.awt.Scrollbar hscrollbar>"->"virtualinvoke <java.awt.Container: java.awt.Component add(java.lang.String,java.awt.Component)>";
    "virtualinvoke <java.awt.Container: java.awt.Component add(java.lang.String,java.awt.Component)>"->"pop";
    "pop"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <SIRtree: int HEIGHT>"
    "load.r r0"->"fieldget <SIRtree: int HEIGHT>";
    "push 40"
    "fieldget <SIRtree: int HEIGHT>"->"push 40";
    "sub.i"
    "push 40"->"sub.i";
    "push 16"
    "sub.i"->"push 16";
    "div.i"
    "push 16"->"div.i";
    "fieldput <SIRtree: int MAX_LINES>"
    "div.i"->"fieldput <SIRtree: int MAX_LINES>";
    "fieldput <SIRtree: int MAX_LINES>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <SIRtree: int WIDTH>"
    "load.r r0"->"fieldget <SIRtree: int WIDTH>";
    "fieldget <SIRtree: int WIDTH>"->"push 11";
    "push 11"->"sub.i";
    "fieldput <SIRtree: int MAX_X>"
    "sub.i"->"fieldput <SIRtree: int MAX_X>";
    "return"
    "fieldput <SIRtree: int MAX_X>"->"return";
    "ifcmplt.i load.r r0"->"load.r r0";
    "fieldget <SIRtree: int[][] Area>"
    "load.r r0"->"fieldget <SIRtree: int[][] Area>";
    "fieldget <SIRtree: int[][] Area>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "arrayread.r"
    "fieldget <SIRtree: int i>"->"arrayread.r";
    "arrayread.r"->"push 0";
    "push -1"
    "push 0"->"push -1";
    "arraywrite.i"
    "push -1"->"arraywrite.i";
    "arraywrite.i"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"push 1";
    "push 1"->"add.i";
    "add.i"->"fieldput <SIRtree: int i>";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "ifne load.r r0"
    "fieldget <SIRtree: int i>"->"ifne load.r r0";
    "ifne load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.lang.String[] TEMPARRAY>";
    "fieldget <SIRtree: java.lang.String[] TEMPARRAY>"->"push 0";
    "push \"ROOT|Sirius Home|0|http://www.net800.co.uk/netstart/sirius/|NewTarget| | |0\""
    "push 0"->"push \"ROOT|Sirius Home|0|http://www.net800.co.uk/netstart/sirius/|NewTarget| | |0\"";
    "push \"ROOT|Sirius Home|0|http://www.net800.co.uk/netstart/sirius/|NewTarget| | |0\""->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "new java.util.StringTokenizer"
    "load.r r0"->"new java.util.StringTokenizer";
    "new java.util.StringTokenizer"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.lang.String[] TEMPARRAY>";
    "fieldget <SIRtree: java.lang.String[] TEMPARRAY>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"arrayread.r";
    "push \"|\""
    "arrayread.r"->"push \"|\"";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"
    "push \"|\""->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
    "fieldput <SIRtree: java.util.StringTokenizer st>"
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"fieldput <SIRtree: java.util.StringTokenizer st>";
    "fieldput <SIRtree: java.util.StringTokenizer st>"->"load.r r0";
    "fieldget <SIRtree: java.util.StringTokenizer st>"
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
    "ifeq load.r r0"
    "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "fieldput <SIRtree: java.lang.String TEMPPARENT>"
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"fieldput <SIRtree: java.lang.String TEMPPARENT>";
    "fieldput <SIRtree: java.lang.String TEMPPARENT>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
    "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "fieldget <SIRtree: java.lang.String[][] NODET>"
    "load.r r0"->"fieldget <SIRtree: java.lang.String[][] NODET>";
    "fieldget <SIRtree: java.lang.String[][] NODET>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"arrayread.r";
    "arrayread.r"->"push 0";
    "push 0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
    "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "fieldget <SIRtree: int[][] NODEI>"
    "load.r r0"->"fieldget <SIRtree: int[][] NODEI>";
    "fieldget <SIRtree: int[][] NODEI>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"arrayread.r";
    "arrayread.r"->"push 1";
    "push 1"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"arraywrite.i";
    "arraywrite.i"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
    "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.lang.String[][] NODET>";
    "fieldget <SIRtree: java.lang.String[][] NODET>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"arrayread.r";
    "arrayread.r"->"push 1";
    "push 1"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
    "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.lang.String[][] NODET>";
    "fieldget <SIRtree: java.lang.String[][] NODET>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"arrayread.r";
    "push 2"
    "arrayread.r"->"push 2";
    "push 2"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
    "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.lang.String[][] NODET>";
    "fieldget <SIRtree: java.lang.String[][] NODET>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"arrayread.r";
    "push 3"
    "arrayread.r"->"push 3";
    "push 3"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
    "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.lang.String[][] NODET>";
    "fieldget <SIRtree: java.lang.String[][] NODET>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"arrayread.r";
    "push 4"
    "arrayread.r"->"push 4";
    "push 4"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
    "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int[][] NODEI>";
    "fieldget <SIRtree: int[][] NODEI>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"arrayread.r";
    "arrayread.r"->"push 2";
    "push 2"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"arraywrite.i";
    "arraywrite.i"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
    "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int[][] NODEI>";
    "fieldget <SIRtree: int[][] NODEI>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"arrayread.r";
    "arrayread.r"->"push 4";
    "push 4"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"arraywrite.i";
    "arraywrite.i"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
    "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int[][] NODEI>";
    "fieldget <SIRtree: int[][] NODEI>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"arrayread.r";
    "arrayread.r"->"push 6";
    "push 6"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"arraywrite.i";
    "arraywrite.i"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int[][] NODEI>";
    "fieldget <SIRtree: int[][] NODEI>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"arrayread.r";
    "arrayread.r"->"push 3";
    "push 3"->"push 0";
    "push 0"->"arraywrite.i";
    "arraywrite.i"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int[][] NODEI>";
    "fieldget <SIRtree: int[][] NODEI>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"arrayread.r";
    "arrayread.r"->"push 5";
    "push 5"->"push 0";
    "push 0"->"arraywrite.i";
    "arraywrite.i"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <SIRtree: boolean found>"
    "push 0"->"fieldput <SIRtree: boolean found>";
    "fieldput <SIRtree: boolean found>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <SIRtree: boolean end>"
    "push 0"->"fieldput <SIRtree: boolean end>";
    "fieldput <SIRtree: boolean end>"->"load.r r0";
    "load.r r0"->"push 0";
    "fieldput <SIRtree: int j>"
    "push 0"->"fieldput <SIRtree: int j>";
    "fieldput <SIRtree: int j>"->"load.r r0";
    "fieldget <SIRtree: java.lang.String TEMPPARENT>"
    "load.r r0"->"fieldget <SIRtree: java.lang.String TEMPPARENT>";
    "fieldget <SIRtree: java.lang.String TEMPPARENT>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.lang.String[] PARENT>";
    "fieldget <SIRtree: java.lang.String[] PARENT>"->"load.r r0";
    "fieldget <SIRtree: int j>"
    "load.r r0"->"fieldget <SIRtree: int j>";
    "fieldget <SIRtree: int j>"->"arrayread.r";
    "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"
    "arrayread.r"->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
    "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"push 1";
    "push 1"->"fieldput <SIRtree: boolean found>";
    "fieldput <SIRtree: boolean found>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int j>";
    "fieldget <SIRtree: int j>"->"push 1";
    "push 1"->"add.i";
    "add.i"->"fieldput <SIRtree: int j>";
    "fieldput <SIRtree: int j>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int j>";
    "fieldget <SIRtree: int j>"->"load.r r0";
    "fieldget <SIRtree: int NO_PARENTS>"
    "load.r r0"->"fieldget <SIRtree: int NO_PARENTS>";
    "fieldget <SIRtree: int NO_PARENTS>"->"ifcmplt.i load.r r0";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"push 1";
    "push 1"->"fieldput <SIRtree: boolean end>";
    "fieldput <SIRtree: boolean end>"->"load.r r0";
    "fieldget <SIRtree: boolean found>"
    "load.r r0"->"fieldget <SIRtree: boolean found>";
    "fieldget <SIRtree: boolean found>"->"ifne load.r r0";
    "ifne load.r r0"->"load.r r0";
    "fieldget <SIRtree: boolean end>"
    "load.r r0"->"fieldget <SIRtree: boolean end>";
    "fieldget <SIRtree: boolean end>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int j>";
    "fieldget <SIRtree: int j>"->"push 1";
    "push 1"->"sub.i";
    "sub.i"->"fieldput <SIRtree: int j>";
    "fieldput <SIRtree: int j>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: boolean found>";
    "fieldget <SIRtree: boolean found>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int[][] NODEI>";
    "fieldget <SIRtree: int[][] NODEI>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"arrayread.r";
    "arrayread.r"->"push 0";
    "push 0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int j>";
    "fieldget <SIRtree: int j>"->"arraywrite.i";
    "arraywrite.i"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"push 1";
    "push 1"->"add.i";
    "add.i"->"fieldput <SIRtree: int i>";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.lang.String[] PARENT>";
    "fieldget <SIRtree: java.lang.String[] PARENT>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int NO_PARENTS>";
    "fieldget <SIRtree: int NO_PARENTS>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.lang.String TEMPPARENT>";
    "fieldget <SIRtree: java.lang.String TEMPPARENT>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int[][] NODEI>";
    "fieldget <SIRtree: int[][] NODEI>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"arrayread.r";
    "arrayread.r"->"push 0";
    "push 0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int NO_PARENTS>";
    "fieldget <SIRtree: int NO_PARENTS>"->"arraywrite.i";
    "arraywrite.i"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int NO_PARENTS>";
    "fieldget <SIRtree: int NO_PARENTS>"->"push 1";
    "push 1"->"add.i";
    "add.i"->"fieldput <SIRtree: int NO_PARENTS>";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int[][] NODEI>";
    "fieldget <SIRtree: int[][] NODEI>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"arrayread.r";
    "arrayread.r"->"push 6";
    "push 6"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int[][] NODEI>";
    "fieldget <SIRtree: int[][] NODEI>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"arrayread.r";
    "arrayread.r"->"push 1";
    "arrayread.i"
    "push 1"->"arrayread.i";
    "arrayread.i"->"arraywrite.i";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int[][] NODEI>";
    "fieldget <SIRtree: int[][] NODEI>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"arrayread.r";
    "arrayread.r"->"push 4";
    "push 4"->"push -1";
    "push -1"->"arraywrite.i";
    "ifcmplt.i load.r r0"->"load.r r0";
    "fieldget <SIRtree: java.awt.Image[] NODE_IMG>"
    "load.r r0"->"fieldget <SIRtree: java.awt.Image[] NODE_IMG>";
    "fieldget <SIRtree: java.awt.Image[] NODE_IMG>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"load.r r0";
    "new java.awt.image.FilteredImageSource"
    "load.r r0"->"new java.awt.image.FilteredImageSource";
    "new java.awt.image.FilteredImageSource"->"dup1.r";
    "dup1.r"->"load.r r0";
    "fieldget <SIRtree: java.awt.Image tempimage>"
    "load.r r0"->"fieldget <SIRtree: java.awt.Image tempimage>";
    "virtualinvoke <java.awt.Image: java.awt.image.ImageProducer getSource()>"
    "fieldget <SIRtree: java.awt.Image tempimage>"->"virtualinvoke <java.awt.Image: java.awt.image.ImageProducer getSource()>";
    "new java.awt.image.CropImageFilter"
    "virtualinvoke <java.awt.Image: java.awt.image.ImageProducer getSource()>"->"new java.awt.image.CropImageFilter";
    "new java.awt.image.CropImageFilter"->"dup1.r";
    "dup1.r"->"push 0";
    "push 0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "push 14"
    "fieldget <SIRtree: int i>"->"push 14";
    "mul.i"
    "push 14"->"mul.i";
    "mul.i"->"push 14";
    "push 14"->"push 14";
    "specialinvoke <java.awt.image.CropImageFilter: void <init>(int,int,int,int)>"
    "push 14"->"specialinvoke <java.awt.image.CropImageFilter: void <init>(int,int,int,int)>";
    "specialinvoke <java.awt.image.FilteredImageSource: void <init>(java.awt.image.ImageProducer,java.awt.image.ImageFilter)>"
    "specialinvoke <java.awt.image.CropImageFilter: void <init>(int,int,int,int)>"->"specialinvoke <java.awt.image.FilteredImageSource: void <init>(java.awt.image.ImageProducer,java.awt.image.ImageFilter)>";
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>"
    "specialinvoke <java.awt.image.FilteredImageSource: void <init>(java.awt.image.ImageProducer,java.awt.image.ImageFilter)>"->"virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>";
    "virtualinvoke <java.awt.Component: java.awt.Image createImage(java.awt.image.ImageProducer)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"push 1";
    "push 1"->"add.i";
    "add.i"->"fieldput <SIRtree: int i>";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "push \"COLOR\""
    "dup1.r"->"push \"COLOR\"";
    "push \"COLOR\""->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"push 1";
    "push 1"->"add.i";
    "add.i"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>";
    "fieldput <SIRtree: java.lang.String SC>"
    "virtualinvoke <java.applet.Applet: java.lang.String getParameter(java.lang.String)>"->"fieldput <SIRtree: java.lang.String SC>";
    "fieldput <SIRtree: java.lang.String SC>"->"load.r r0";
    "fieldget <SIRtree: java.lang.String SC>"
    "load.r r0"->"fieldget <SIRtree: java.lang.String SC>";
    "ifnonnull load.r r0"
    "fieldget <SIRtree: java.lang.String SC>"->"ifnonnull load.r r0";
    "ifnonnull load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"ifne load.r r0";
    "ifne load.r r0"->"load.r r0";
    "push \"0|0|0\""
    "load.r r0"->"push \"0|0|0\"";
    "push \"0|0|0\""->"fieldput <SIRtree: java.lang.String SC>";
    "fieldput <SIRtree: java.lang.String SC>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"new java.util.StringTokenizer";
    "new java.util.StringTokenizer"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.lang.String SC>";
    "fieldget <SIRtree: java.lang.String SC>"->"push \"|\"";
    "push \"|\""->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"fieldput <SIRtree: java.util.StringTokenizer st>";
    "fieldput <SIRtree: java.util.StringTokenizer st>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.awt.Color[] COLORS>";
    "fieldget <SIRtree: java.awt.Color[] COLORS>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"push 1";
    "push 1"->"add.i";
    "add.i"->"new java.awt.Color";
    "new java.awt.Color"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Math: int abs(int)>"
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"staticinvoke <java.lang.Math: int abs(int)>";
    "staticinvoke <java.lang.Math: int abs(int)>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"staticinvoke <java.lang.Math: int abs(int)>";
    "staticinvoke <java.lang.Math: int abs(int)>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>";
    "staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>"->"staticinvoke <java.lang.Math: int abs(int)>";
    "staticinvoke <java.lang.Math: int abs(int)>"->"specialinvoke <java.awt.Color: void <init>(int,int,int)>";
    "specialinvoke <java.awt.Color: void <init>(int,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"push 1";
    "push 1"->"add.i";
    "add.i"->"fieldput <SIRtree: int i>";
    "ifne load.r r0"->"load.r r0";
    "push \"255|255|255\""
    "load.r r0"->"push \"255|255|255\"";
    "push \"255|255|255\""->"fieldput <SIRtree: java.lang.String SC>";
    "ifcmplt.i load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"new java.lang.StringBuffer";
    "new java.lang.StringBuffer"->"dup1.r";
    "push \"FONT\""
    "dup1.r"->"push \"FONT\"";
    "push \"FONT\""->"specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>";
    "specialinvoke <java.lang.StringBuffer: void <init>(java.lang.String)>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>";
    "virtualinvoke <java.lang.StringBuffer: java.lang.StringBuffer append(int)>"->"virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>";
    "push \"Courier|N\""
    "virtualinvoke <java.lang.StringBuffer: java.lang.String toString()>"->"push \"Courier|N\"";
    "push \"Courier|N\""->"virtualinvoke <SIRtree: java.lang.String parmgetstr(java.lang.String,java.lang.String)>";
    "fieldput <SIRtree: java.lang.String FT>"
    "virtualinvoke <SIRtree: java.lang.String parmgetstr(java.lang.String,java.lang.String)>"->"fieldput <SIRtree: java.lang.String FT>";
    "fieldput <SIRtree: java.lang.String FT>"->"load.r r0";
    "load.r r0"->"new java.util.StringTokenizer";
    "new java.util.StringTokenizer"->"dup1.r";
    "dup1.r"->"load.r r0";
    "fieldget <SIRtree: java.lang.String FT>"
    "load.r r0"->"fieldget <SIRtree: java.lang.String FT>";
    "fieldget <SIRtree: java.lang.String FT>"->"push \"|\"";
    "push \"|\""->"specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>";
    "specialinvoke <java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>"->"fieldput <SIRtree: java.util.StringTokenizer st>";
    "fieldput <SIRtree: java.util.StringTokenizer st>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
    "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "fieldput <SIRtree: java.lang.String Fonttype>"
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"fieldput <SIRtree: java.lang.String Fonttype>";
    "fieldput <SIRtree: java.lang.String Fonttype>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>";
    "virtualinvoke <java.util.StringTokenizer: boolean hasMoreTokens()>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.util.StringTokenizer st>";
    "fieldget <SIRtree: java.util.StringTokenizer st>"->"virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>";
    "fieldput <SIRtree: java.lang.String Fontstyle>"
    "virtualinvoke <java.util.StringTokenizer: java.lang.String nextToken()>"->"fieldput <SIRtree: java.lang.String Fontstyle>";
    "fieldput <SIRtree: java.lang.String Fontstyle>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "fieldget <SIRtree: java.lang.String Fontstyle>"
    "load.r r0"->"fieldget <SIRtree: java.lang.String Fontstyle>";
    "push \"B\""
    "fieldget <SIRtree: java.lang.String Fontstyle>"->"push \"B\"";
    "push \"B\""->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
    "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.awt.Font[] FONTS>";
    "fieldget <SIRtree: java.awt.Font[] FONTS>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"new java.awt.Font";
    "new java.awt.Font"->"dup1.r";
    "dup1.r"->"load.r r0";
    "fieldget <SIRtree: java.lang.String Fonttype>"
    "load.r r0"->"fieldget <SIRtree: java.lang.String Fonttype>";
    "fieldget <SIRtree: java.lang.String Fonttype>"->"push 1";
    "push 1"->"push 12";
    "push 12"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"push 1";
    "push 1"->"add.i";
    "add.i"->"fieldput <SIRtree: int i>";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.lang.String Fontstyle>";
    "push \"I\""
    "fieldget <SIRtree: java.lang.String Fontstyle>"->"push \"I\"";
    "push \"I\""->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
    "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.awt.Font[] FONTS>";
    "fieldget <SIRtree: java.awt.Font[] FONTS>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"new java.awt.Font";
    "new java.awt.Font"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.lang.String Fonttype>";
    "fieldget <SIRtree: java.lang.String Fonttype>"->"push 2";
    "push 2"->"push 12";
    "push 12"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"goto load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.lang.String Fontstyle>";
    "push \"BI\""
    "fieldget <SIRtree: java.lang.String Fontstyle>"->"push \"BI\"";
    "push \"BI\""->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
    "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"ifne load.r r0";
    "ifne load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.lang.String Fontstyle>";
    "push \"IB\""
    "fieldget <SIRtree: java.lang.String Fontstyle>"->"push \"IB\"";
    "push \"IB\""->"virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>";
    "virtualinvoke <java.lang.String: boolean equals(java.lang.Object)>"->"ifeq load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.awt.Font[] FONTS>";
    "fieldget <SIRtree: java.awt.Font[] FONTS>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"new java.awt.Font";
    "new java.awt.Font"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.lang.String Fonttype>";
    "fieldget <SIRtree: java.lang.String Fonttype>"->"push 3";
    "push 3"->"push 12";
    "push 12"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"arraywrite.r";
    "arraywrite.r"->"goto load.r r0";
    "ifeq load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.awt.Font[] FONTS>";
    "fieldget <SIRtree: java.awt.Font[] FONTS>"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: int i>";
    "fieldget <SIRtree: int i>"->"new java.awt.Font";
    "new java.awt.Font"->"dup1.r";
    "dup1.r"->"load.r r0";
    "load.r r0"->"fieldget <SIRtree: java.lang.String Fonttype>";
    "fieldget <SIRtree: java.lang.String Fonttype>"->"push 0";
    "push 0"->"push 12";
    "push 12"->"specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>";
    "specialinvoke <java.awt.Font: void <init>(java.lang.String,int,int)>"->"arraywrite.r";
    "ifeq load.r r0"->"load.r r0";
    "push \"N\""
    "load.r r0"->"push \"N\"";
    "push \"N\""->"fieldput <SIRtree: java.lang.String Fontstyle>";
    "ifeq load.r r0"->"load.r r0";
    "push \"Courier\""
    "load.r r0"->"push \"Courier\"";
    "push \"Courier\""->"fieldput <SIRtree: java.lang.String Fonttype>";
}
