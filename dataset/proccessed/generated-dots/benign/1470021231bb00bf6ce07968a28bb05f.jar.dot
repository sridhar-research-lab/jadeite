digraph "" {
    "r0 := @this: snake"
    "load.r r0"
    "r0 := @this: snake"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <snake: java.awt.Button b>"
    "load.r r0"->"fieldget <snake: java.awt.Button b>";
    "virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>"
    "fieldget <snake: java.awt.Button b>"->"virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>";
    "pop"
    "virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>"->"pop";
    "pop"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <snake: java.awt.Button i>"
    "load.r r0"->"fieldget <snake: java.awt.Button i>";
    "fieldget <snake: java.awt.Button i>"->"virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>";
    "virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>"->"pop";
    "pop"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <snake: java.awt.Button p>"
    "load.r r0"->"fieldget <snake: java.awt.Button p>";
    "fieldget <snake: java.awt.Button p>"->"virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>";
    "virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>"->"pop";
    "pop"->"load.r r0";
    "load.r r0"->"load.r r0";
    "fieldget <snake: java.awt.Button X>"
    "load.r r0"->"fieldget <snake: java.awt.Button X>";
    "fieldget <snake: java.awt.Button X>"->"virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>";
    "virtualinvoke <java.awt.Container: java.awt.Component add(java.awt.Component)>"->"pop";
    "pop"->"load.r r0";
    "staticget <java.awt.Color: java.awt.Color black>"
    "load.r r0"->"staticget <java.awt.Color: java.awt.Color black>";
    "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"
    "staticget <java.awt.Color: java.awt.Color black>"->"virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>";
    "virtualinvoke <java.awt.Component: void setBackground(java.awt.Color)>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"load.r r0";
    "virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>"
    "load.r r0"->"virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>";
    "push \"screan.gif\""
    "virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>"->"push \"screan.gif\"";
    "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"
    "push \"screan.gif\""->"virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>";
    "fieldput <snake: java.awt.Image back>"
    "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"fieldput <snake: java.awt.Image back>";
    "fieldput <snake: java.awt.Image back>"->"load.r r0";
    "push 0"
    "load.r r0"->"push 0";
    "fieldput <snake: int z>"
    "push 0"->"fieldput <snake: int z>";
    "goto load.r r0"
    "fieldput <snake: int z>"->"goto load.r r0";
    "goto load.r r0"->"load.r r0";
    "fieldget <snake: int z>"
    "load.r r0"->"fieldget <snake: int z>";
    "push 400"
    "fieldget <snake: int z>"->"push 400";
    "ifcmplt.i load.r r0"
    "push 400"->"ifcmplt.i load.r r0";
    "return"
    "ifcmplt.i load.r r0"->"return";
    "ifcmplt.i load.r r0"->"load.r r0";
    "fieldget <snake: java.awt.Image[] dot>"
    "load.r r0"->"fieldget <snake: java.awt.Image[] dot>";
    "fieldget <snake: java.awt.Image[] dot>"->"load.r r0";
    "load.r r0"->"fieldget <snake: int z>";
    "fieldget <snake: int z>"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>";
    "push \"dot.gif\""
    "virtualinvoke <java.applet.Applet: java.net.URL getCodeBase()>"->"push \"dot.gif\"";
    "push \"dot.gif\""->"virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>";
    "arraywrite.r"
    "virtualinvoke <java.applet.Applet: java.awt.Image getImage(java.net.URL,java.lang.String)>"->"arraywrite.r";
    "arraywrite.r"->"load.r r0";
    "load.r r0"->"load.r r0";
    "load.r r0"->"fieldget <snake: int z>";
    "push 1"
    "fieldget <snake: int z>"->"push 1";
    "add.i"
    "push 1"->"add.i";
    "add.i"->"fieldput <snake: int z>";
}
